{"id":"e95824e16929a44a23729c12dad90074","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC3156FlashBorrower.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC3156 FlashBorrower, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n *\n * _Available since v4.1._\n */\ninterface IERC3156FlashBorrower {\n    /**\n     * @dev Receive a flash loan.\n     * @param initiator The initiator of the loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param fee The additional amount of tokens to repay.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     * @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\"\n     */\n    function onFlashLoan(\n        address initiator,\n        address token,\n        uint256 amount,\n        uint256 fee,\n        bytes calldata data\n    ) external returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC3156FlashLender.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC3156FlashBorrower.sol\";\n\n/**\n * @dev Interface of the ERC3156 FlashLender, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n *\n * _Available since v4.1._\n */\ninterface IERC3156FlashLender {\n    /**\n     * @dev The amount of currency available to be lended.\n     * @param token The loan currency.\n     * @return The amount of `token` that can be borrowed.\n     */\n    function maxFlashLoan(address token) external view returns (uint256);\n\n    /**\n     * @dev The fee to be charged for a given loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @return The amount of `token` to be charged for the loan, on top of the returned principal.\n     */\n    function flashFee(address token, uint256 amount) external view returns (uint256);\n\n    /**\n     * @dev Initiate a flash loan.\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     */\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../governance/utils/IVotes.sol\";\nimport \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/extensions/ERC20FlashMint.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../../interfaces/IERC3156FlashBorrower.sol\";\nimport \"../../../interfaces/IERC3156FlashLender.sol\";\nimport \"../ERC20.sol\";\n\n/**\n * @dev Implementation of the ERC3156 Flash loans extension, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n *\n * Adds the {flashLoan} method, which provides flash loan support at the token\n * level. By default there is no fee, but this can be changed by overriding {flashFee}.\n *\n * _Available since v4.1._\n */\nabstract contract ERC20FlashMint is ERC20, IERC3156FlashLender {\n    bytes32 private constant _RETURN_VALUE = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n    /**\n     * @dev Returns the maximum amount of tokens available for loan.\n     * @param token The address of the token that is requested.\n     * @return The amount of token that can be loaned.\n     */\n    function maxFlashLoan(address token) public view virtual override returns (uint256) {\n        return token == address(this) ? type(uint256).max - ERC20.totalSupply() : 0;\n    }\n\n    /**\n     * @dev Returns the fee applied when doing flash loans. This function calls\n     * the {_flashFee} function which returns the fee applied when doing flash\n     * loans.\n     * @param token The token to be flash loaned.\n     * @param amount The amount of tokens to be loaned.\n     * @return The fees applied to the corresponding flash loan.\n     */\n    function flashFee(address token, uint256 amount) public view virtual override returns (uint256) {\n        require(token == address(this), \"ERC20FlashMint: wrong token\");\n        return _flashFee(token, amount);\n    }\n\n    /**\n     * @dev Returns the fee applied when doing flash loans. By default this\n     * implementation has 0 fees. This function can be overloaded to make\n     * the flash loan mechanism deflationary.\n     * @param token The token to be flash loaned.\n     * @param amount The amount of tokens to be loaned.\n     * @return The fees applied to the corresponding flash loan.\n     */\n    function _flashFee(address token, uint256 amount) internal view virtual returns (uint256) {\n        // silence warning about unused variable without the addition of bytecode.\n        token;\n        amount;\n        return 0;\n    }\n\n    /**\n     * @dev Returns the receiver address of the flash fee. By default this\n     * implementation returns the address(0) which means the fee amount will be burnt.\n     * This function can be overloaded to change the fee receiver.\n     * @return The address for which the flash fee will be sent to.\n     */\n    function _flashFeeReceiver() internal view virtual returns (address) {\n        return address(0);\n    }\n\n    /**\n     * @dev Performs a flash loan. New tokens are minted and sent to the\n     * `receiver`, who is required to implement the {IERC3156FlashBorrower}\n     * interface. By the end of the flash loan, the receiver is expected to own\n     * amount + fee tokens and have them approved back to the token contract itself so\n     * they can be burned.\n     * @param receiver The receiver of the flash loan. Should implement the\n     * {IERC3156FlashBorrower-onFlashLoan} interface.\n     * @param token The token to be flash loaned. Only `address(this)` is\n     * supported.\n     * @param amount The amount of tokens to be loaned.\n     * @param data An arbitrary datafield that is passed to the receiver.\n     * @return `true` if the flash loan was successful.\n     */\n    // This function can reenter, but it doesn't pose a risk because it always preserves the property that the amount\n    // minted at the beginning is always recovered and burned at the end, or else the entire function will revert.\n    // slither-disable-next-line reentrancy-no-eth\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override returns (bool) {\n        require(amount <= maxFlashLoan(token), \"ERC20FlashMint: amount exceeds maxFlashLoan\");\n        uint256 fee = flashFee(token, amount);\n        _mint(address(receiver), amount);\n        require(\n            receiver.onFlashLoan(msg.sender, token, amount, fee, data) == _RETURN_VALUE,\n            \"ERC20FlashMint: invalid return value\"\n        );\n        address flashFeeReceiver = _flashFeeReceiver();\n        _spendAllowance(address(receiver), address(this), amount + fee);\n        if (fee == 0 || flashFeeReceiver == address(0)) {\n            _burn(address(receiver), amount + fee);\n        } else {\n            _burn(address(receiver), amount);\n            _transfer(address(receiver), flashFeeReceiver, fee);\n        }\n        return true;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/cryptography/EIP712.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC20Permit.sol\";\nimport \"../../../interfaces/IERC5805.sol\";\nimport \"../../../utils/math/Math.sol\";\nimport \"../../../utils/math/SafeCast.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20Votes is ERC20Permit, IERC5805 {\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegates;\n    mapping(address => Checkpoint[]) private _checkpoints;\n    Checkpoint[] private _totalSupplyCheckpoints;\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() public view virtual override returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual override returns (string memory) {\n        // Check that the clock was not modified\n        require(clock() == block.number, \"ERC20Votes: broken clock mode\");\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return SafeCast.toUint32(_checkpoints[account].length);\n    }\n\n    /**\n     * @dev Get the address `account` is currently delegating to.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegates[account];\n    }\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        unchecked {\n            return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n        }\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `timepoint`.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"ERC20Votes: future lookup\");\n        return _checkpointsLookup(_checkpoints[account], timepoint);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances.\n     * It is NOT the sum of all the delegated votes!\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"ERC20Votes: future lookup\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, timepoint);\n    }\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 timepoint) private view returns (uint256) {\n        // We run a binary search to look for the last (most recent) checkpoint taken before (or at) `timepoint`.\n        //\n        // Initially we check if the block is recent to narrow the search range.\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `timepoint`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `timepoint`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `timepoint`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `timepoint`, but it works out\n        // the same.\n        uint256 length = ckpts.length;\n\n        uint256 low = 0;\n        uint256 high = length;\n\n        if (length > 5) {\n            uint256 mid = length - Math.sqrt(length);\n            if (_unsafeAccess(ckpts, mid).fromBlock > timepoint) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(ckpts, mid).fromBlock > timepoint) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        unchecked {\n            return high == 0 ? 0 : _unsafeAccess(ckpts, high - 1).votes;\n        }\n    }\n\n    /**\n     * @dev Delegate votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"ERC20Votes: signature expired\");\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"ERC20Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1).\n     */\n    function _maxSupply() internal view virtual returns (uint224) {\n        return type(uint224).max;\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        super._mint(account, amount);\n        require(totalSupply() <= _maxSupply(), \"ERC20Votes: total supply risks overflowing votes\");\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual override {\n        super._burn(account, amount);\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual override {\n        super._afterTokenTransfer(from, to, amount);\n\n        _moveVotingPower(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Change delegation for `delegator` to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address delegator, address delegatee) internal virtual {\n        address currentDelegate = delegates(delegator);\n        uint256 delegatorBalance = balanceOf(delegator);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveVotingPower(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveVotingPower(address src, address dst, uint256 amount) private {\n        if (src != dst && amount > 0) {\n            if (src != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount);\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\n            }\n\n            if (dst != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount);\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n\n        unchecked {\n            Checkpoint memory oldCkpt = pos == 0 ? Checkpoint(0, 0) : _unsafeAccess(ckpts, pos - 1);\n\n            oldWeight = oldCkpt.votes;\n            newWeight = op(oldWeight, delta);\n\n            if (pos > 0 && oldCkpt.fromBlock == clock()) {\n                _unsafeAccess(ckpts, pos - 1).votes = SafeCast.toUint224(newWeight);\n            } else {\n                ckpts.push(Checkpoint({fromBlock: SafeCast.toUint32(clock()), votes: SafeCast.toUint224(newWeight)}));\n            }\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint[] storage ckpts, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, ckpts.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSA.sol\";\nimport \"../ShortStrings.sol\";\nimport \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _name.toStringWithFallback(_nameFallback),\n            _version.toStringWithFallback(_versionFallback),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant _FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(_FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/SpenderContract.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\"; \r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\";\r\n\r\n\r\ncontract VotingContract is ReentrancyGuard,  Pausable,Ownable{\r\n\r\n    uint256 constant MAX_UINT256 = type(uint256).max;\r\n    address public myToken;  // 用于投票的代币地址\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _proposalIds;\r\n    Counters.Counter private _UserStakeIdCounter; // 用于跟踪每次质押的计数器\r\n\r\n    constructor(address _myToken) {\r\n        myToken = _myToken;\r\n    }\r\n\r\n    event Received(address caller, uint amount, string message);\r\n    event Deposited(address indexed user, uint amount);\r\n    event Withdrawn(address indexed user, uint amount);\r\n    event Voted(address indexed _address, uint256 indexed _proposalId, uint256 indexed _optionId, uint256 _amount);\r\n    event ProposalAndOptionsSubmitted(address indexed user, uint256 indexed proposalIndex, string proposalDescription, string[] optionDescriptions);\r\n    event DepositForProposal(address indexed staker, uint256 amount, bool staked, uint256 unlockTime, uint256 indexed stakeIndex);\r\n    event TokensStaked(address indexed user, uint256 amount, bool isForProposal);\r\n    event FundsSettledForAverageQuality(uint256 indexed proposalId, address indexed proposer, uint256 amountToReturn);\r\n    event WithdrawalDetailed(address indexed user, uint256 amountWithdrawn, uint256 balanceAfterWithdrawal);\r\n    event UnlockTimeUpdated(address indexed staker, uint256 indexed stakeIndex, uint256 newUnlockTime);\r\n    event FundsPenalizedForNonCompliance(uint256 indexed proposalId, address indexed proposer, uint256 penalty);\r\n    event ProposalStatusChanged(uint256 proposalId, bool isActive);\r\n    event ProposalEndTime(uint256 _proposalId, uint256 endTime);\r\n    event ProposalForUser(address indexed userAddress, uint256 indexed proposalId, string proposalDescription, uint256 stakeAmount, string[] optionDescriptions);\r\n    event StakeReleased(address indexed user, uint256 stakeIndex, bool penalized, uint256 amountReleased);\r\n    event ProposalEnded(uint256 indexed proposalId, bool isActive);\r\n    event ProposalConcluded(uint256 indexed proposalId, bool isActive);\r\n    event RewardDistributed(address indexed voter, uint256 proposalId, uint256 amount, bool isWinner);\r\n\r\n\r\n    mapping(uint256 => uint256) public votingEndTimes;  // 投票结束时间\r\n    mapping(address => uint256) public balances;\r\n\r\n    mapping(uint256 => address[]) public proposalVoters;\r\n\r\n\r\n    // 提案\r\n    struct Proposal {\r\n        address proposer; // 提案发起人\r\n        string description; // 提案描述\r\n        uint256 stakeAmount; // 质押代币数量\r\n        bool active; // 提案是否活跃\r\n        bool isSettled; // 添加属性以跟踪提案是否已结算\r\n        bool isWagered;\r\n        uint256 endTime;\r\n    }\r\n    // 提议选项\r\n    struct Option {\r\n        string description; // 选项描述\r\n        uint256 voteCount; // 投票计数\r\n        // ...其他属性\r\n    }\r\n\r\n    struct Stake {\r\n        uint256 amount;      // 质押的金额\r\n        uint256 unlockTime;  // 资金解锁的时间\r\n        address staker;      // 质押者地址\r\n        bool isWagered;\r\n    }\r\n\r\n    struct VoteRecord {\r\n        uint256 proposalId; // 提案ID\r\n        uint256 optionId;   // 用户选择的选项ID\r\n        uint256 amount;     // 投票数量\r\n    }\r\n\r\n    mapping(address => VoteRecord[]) public userVotingHistory;    // 用户的投票历史记录映射\r\n    mapping(address => Stake[]) public stakesForUser;\r\n    Proposal[] public proposals; // 提案数组\r\n    mapping(uint256 => Option[]) public proposalOptions; // 提案ID到选项数组的映射\r\n    mapping(address => mapping(uint256 => bool)) public voters;\r\n\r\n    mapping(address => uint256) public proposalTokenDeposits;\r\n    mapping(address => uint256) public usedVotingRights;\r\n\r\n    address[] public UserStakerAddresses; // 质押者地址数组\r\n    uint256[] public UserSstakeAmounts; \r\n\r\n\r\n    mapping(address => mapping(uint256 => uint256)) public votingRecords;\r\n    mapping(address => mapping(uint256 => uint256)) public added_proposal;\r\n\r\n    mapping(uint256 => address[]) public voterAddressesByProposal;\r\n    mapping(uint256 => uint256[]) public optionIdsByProposal;\r\n    mapping(uint256 => uint256[]) public voteCountsByProposal;\r\n    mapping(address => mapping(uint256 => uint256)) public voterIndexInProposal;\r\n\r\n\r\n    // 常规质押代币\r\n    function deposit(uint256 amount) public {\r\n        require(\r\n            IERC20(myToken).transferFrom(msg.sender, address(this), amount),\r\n            \"Transfer failed\"\r\n        );\r\n        balances[msg.sender] = balances[msg.sender] + amount;\r\n        emit Deposited(msg.sender, amount);\r\n    }\r\n\r\n\r\n    function submitProposalForReview(uint256 amount) public returns(uint256){\r\n        \r\n        require(balances[msg.sender] >= amount, \"Insufficient balance\");\r\n        require(balances[msg.sender] - usedVotingRights[msg.sender] >= amount, \"Insufficient balance\");\r\n        uint256 unlockTime = block.timestamp + 7 days; // 假设7天后解锁\r\n\r\n        uint256 User_stakeIndex = _UserStakeIdCounter.current();\r\n        _UserStakeIdCounter.increment(); // 自动增加质押计数器\r\n\r\n        // 根据amount的值设置isWagered\r\n        bool isWagered;\r\n        if (amount > 0) {\r\n            isWagered = true;\r\n            proposalTokenDeposits[msg.sender] += amount;\r\n        } else {\r\n            isWagered = false;\r\n        }\r\n\r\n        UserStakerAddresses.push(msg.sender);\r\n        UserSstakeAmounts.push(amount);\r\n        emit DepositForProposal(msg.sender, amount, isWagered, unlockTime, User_stakeIndex);\r\n        return User_stakeIndex; // 返回新创建的质押索引， 用于标记。。。 不等于提案id\r\n    }\r\n\r\n    function createProposalWithOptions(\r\n        string memory proposalDescription,\r\n        string[] memory optionDescriptions,\r\n        uint amount,\r\n        uint256 endtime\r\n    ) public onlyOwner returns (uint256) {\r\n        // 创建提案\r\n        uint256 proposalId = _proposalIds.current(); // 获取新的提案ID\r\n        _proposalIds.increment(); // 增加提案ID\r\n\r\n        bool isWagered = amount > 0;\r\n\r\n        uint256 unlockTime = block.timestamp + (endtime * 1 days); // 使用endtime * 1 days计算\r\n\r\n        proposals.push(Proposal({\r\n            proposer: msg.sender,\r\n            description: proposalDescription,\r\n            stakeAmount: amount,\r\n            active: true,\r\n            isSettled: false,\r\n            isWagered: isWagered,\r\n            endTime: unlockTime\r\n        }));\r\n\r\n        // 为提案添加选项\r\n        for (uint i = 0; i < optionDescriptions.length; i++) {\r\n            proposalOptions[proposalId].push(Option({\r\n                description: optionDescriptions[i],\r\n                voteCount: 0\r\n            }));\r\n        }\r\n        // 触发事件\r\n        emit ProposalAndOptionsSubmitted(msg.sender, proposalId, proposalDescription, optionDescriptions);\r\n\r\n        return proposalId; // 返回新创建的提案ID\r\n    }\r\n\r\n    function processUserStakedProposal(\r\n        address userAddress,\r\n        string memory proposalDescription,\r\n        uint256 stakeAmount,\r\n        string[] memory optionDescriptions,\r\n        uint256 stakeIndex,\r\n        uint256 endtime\r\n    ) public onlyOwner returns (uint256){\r\n\r\n        address UserAddress = UserStakerAddresses[stakeIndex];\r\n        uint256 UserAmount = UserSstakeAmounts[stakeIndex];\r\n        require(UserAddress == userAddress, \"the address is not same\");\r\n        require(stakeAmount == UserAmount, \"Staked amount does not match or insufficient\");\r\n\r\n        uint256 unlockTime = block.timestamp + (endtime * 1 days); // 使用endtime * 1 days计算\r\n\r\n        bool isWagered;\r\n        if (stakeAmount > 0) {\r\n            isWagered = true;\r\n        } else {\r\n            isWagered = false;\r\n        }\r\n        proposals.push(Proposal({\r\n            proposer: userAddress,\r\n            description: proposalDescription,\r\n            stakeAmount: stakeAmount,\r\n            active: true,\r\n            isSettled: false,\r\n            isWagered: isWagered,\r\n            endTime: unlockTime\r\n        }));\r\n\r\n       uint256 proposalId = _proposalIds.current(); // 获取新的提案ID\r\n        _proposalIds.increment(); // 增加提案ID\r\n\r\n        for (uint256 i = 0; i < optionDescriptions.length; i++) {\r\n            proposalOptions[proposalId].push(Option({\r\n                description: optionDescriptions[i],\r\n                voteCount: 0\r\n            }));\r\n        }\r\n        \r\n        emit ProposalForUser(userAddress, proposalId, proposalDescription, stakeAmount, optionDescriptions);\r\n        return proposalId;\r\n    }\r\n\r\n    function withdraw(uint256 _amount) public nonReentrant {\r\n\r\n        // 确保用户有足够的余额来提取\r\n        uint256 availableBalance = getAvailableWithdrawBalance(msg.sender);\r\n        require(availableBalance >= _amount, \"Not enough available balance to withdraw\");\r\n\r\n        // 在余额更新前执行转账\r\n        require(IERC20(myToken).transfer(msg.sender, _amount), \"Transfer failed\");\r\n\r\n        // 更新余额\r\n        balances[msg.sender] = balances[msg.sender] - _amount;\r\n\r\n        // 触发提款事件\r\n        emit WithdrawalDetailed(msg.sender, _amount, balances[msg.sender]);\r\n    }\r\n\r\n    function getAvailableWithdrawBalance(address user) public view returns (uint256) {\r\n        uint256 totalBalance = balances[user];\r\n        uint256 lockedForVoting = usedVotingRights[user];\r\n        uint256 lockedInProposals = proposalTokenDeposits[user];\r\n\r\n        // 计算因提案和投票锁定的代币总量\r\n        uint256 totalLocked = lockedForVoting + lockedInProposals;\r\n        return totalBalance > totalLocked ? totalBalance - totalLocked : 0;\r\n    }\r\n\r\n\r\n    function setProposalEndTime(uint256 _proposalId, uint256 _newEndTime) public onlyOwner {\r\n        require(_proposalId < proposals.length, \"Proposal does not exist\");\r\n        require(_newEndTime >= block.timestamp, \"New end time must be in the future\");\r\n\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        // proposal.endTime = _newEndTime;\r\n        proposal.endTime = block.timestamp + 1;\r\n\r\n        emit ProposalEndTime(_proposalId, _newEndTime);\r\n    }\r\n\r\n    function getProposalStatus(uint256 _proposalId) view public returns(bool){\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        return proposal.active;\r\n    }\r\n\r\n    // 投票\r\n    function vote(uint256 _proposalId, uint256 _optionId, uint256 _amount) public whenNotPaused {\r\n        require(_proposalId < proposals.length, \"The proposal does not exist\");\r\n        require(_optionId < proposalOptions[_proposalId].length, \"The option does not exist\");\r\n        require(proposals[_proposalId].active, \"The proposal is not active\");\r\n\r\n        uint256 remainingVotingRights = balances[msg.sender] - usedVotingRights[msg.sender] - proposalTokenDeposits[msg.sender];\r\n        require(remainingVotingRights >= _amount, \"Insufficient voting rights\");\r\n\r\n        usedVotingRights[msg.sender] = usedVotingRights[msg.sender] + _amount;\r\n        proposalOptions[_proposalId][_optionId].voteCount += _amount;\r\n        votingRecords[msg.sender][_proposalId] += _amount;\r\n        voters[msg.sender][_proposalId] = true;\r\n        userVotingHistory[msg.sender].push(VoteRecord(_proposalId, _optionId, _amount));\r\n        proposalVoters[_proposalId].push(msg.sender);\r\n\r\n        // 记录投票者地址、选项ID和投票数\r\n        voterAddressesByProposal[_proposalId].push(msg.sender);\r\n        optionIdsByProposal[_proposalId].push(_optionId);\r\n        voteCountsByProposal[_proposalId].push(_amount);\r\n\r\n        // 记录投票者在提案中的索引\r\n        voterIndexInProposal[msg.sender][_proposalId] = voterAddressesByProposal[_proposalId].length - 1;\r\n\r\n        emit Voted(msg.sender, _proposalId, _optionId, _amount);\r\n    }\r\n\r\n    // Get the balance of the contract itself in MyToken\r\n    function getContractBalance() public view returns (uint) {\r\n        return IERC20(myToken).balanceOf(address(this));\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n\r\n    function getUserVotingHistory(address _user)\r\n        public\r\n        view\r\n        returns (\r\n            uint256[] memory proposalIds,\r\n            uint256[] memory optionIds,\r\n            uint256[] memory amounts\r\n        )\r\n    {\r\n        VoteRecord[] storage records = userVotingHistory[_user];\r\n        proposalIds = new uint256[](records.length);\r\n        optionIds = new uint256[](records.length);\r\n        amounts = new uint256[](records.length);\r\n\r\n        for (uint256 i = 0; i < records.length; i++) {\r\n            proposalIds[i] = records[i].proposalId;\r\n            optionIds[i] = records[i].optionId;\r\n            amounts[i] = records[i].amount;\r\n        }\r\n    }\r\n\r\n    function proposalsLength() public view returns (uint256) {\r\n        return proposals.length;\r\n    }\r\n\r\n    function getOptionsCount(uint256 proposalId) public view returns (uint256) {\r\n        return proposalOptions[proposalId].length;\r\n    }\r\n\r\n    function getOptionVoteCount(uint256 proposalId, uint256 optionIndex) public view returns (uint256) {\r\n        require(proposalId < proposalsLength(), \"Proposal does not exist.\");\r\n        require(optionIndex < proposalOptions[proposalId].length, \"Option does not exist.\");\r\n        return proposalOptions[proposalId][optionIndex].voteCount;\r\n    }\r\n\r\n    function getCurrentProposalId() public view returns (uint256) {\r\n        uint256 proposalArrayLength = proposals.length;\r\n        uint256 currentCounterValue = _proposalIds.current();\r\n\r\n        if (proposalArrayLength == currentCounterValue) {\r\n            // 如果数组长度和计数器的值相等，返回当前的提案ID\r\n            return currentCounterValue - 1;\r\n        } else {\r\n            // 如果不相等，可以返回一个错误标识或默认值\r\n            return MAX_UINT256; // 例如返回一个最大值表示错误\r\n        }\r\n    }   \r\n\r\n    function handleStakeRelease(address user, uint256 stakeIndex, bool penalizeStake) public onlyOwner {\r\n        // 确保索引在范围内\r\n        require(stakeIndex < UserSstakeAmounts.length, \"Stake index out of bounds\");\r\n        uint256 amountToRelease = UserSstakeAmounts[stakeIndex];\r\n        proposalTokenDeposits[user] -= amountToRelease;\r\n\r\n        // 如果需要罚款，则计算并扣除罚款\r\n        if (penalizeStake) {\r\n            uint256 penaltyAmount = amountToRelease * 10 / 100; // 计算10%罚款\r\n            require(amountToRelease >= penaltyAmount, \"Penalty exceeds staked amount\");\r\n            amountToRelease -= penaltyAmount; // 减去罚款\r\n            balances[user] -= penaltyAmount; // 从用户余额扣除罚款\r\n        }\r\n        // 清除处理过的质押金额\r\n        UserSstakeAmounts[stakeIndex] = 0;\r\n\r\n        // 触发事件，通知质押已被释放\r\n        emit StakeReleased(user, stakeIndex, penalizeStake, amountToRelease);\r\n    }\r\n\r\n    function settleRewards(uint256 proposalId, uint256 winningOptionId) public onlyOwner nonReentrant {\r\n        Proposal storage proposal = proposals[proposalId];\r\n        require(!proposal.active, \"Proposal must be inactive to settle rewards.\");\r\n        require(!proposal.isSettled, \"Rewards already settled\");\r\n\r\n        uint256 totalVotesForWinningOption = proposalOptions[proposalId][winningOptionId].voteCount;\r\n        require(totalVotesForWinningOption > 0, \"No votes for winning option\");\r\n        // 假设的奖池总金额和平台收取比例\r\n\r\n        for (uint256 i = 0; i < voterAddressesByProposal[proposalId].length; i++) {\r\n            address voter = voterAddressesByProposal[proposalId][i];\r\n            uint256 optionId = optionIdsByProposal[proposalId][i];\r\n            uint256 voteCount = voteCountsByProposal[proposalId][i];\r\n            require(usedVotingRights[voter] >= voteCount, \"Not enough locked voting rights\");\r\n\r\n            usedVotingRights[voter] -= voteCount; \r\n\r\n            if (optionId == winningOptionId) {\r\n                // 计算并分配奖励给赢家\r\n                uint256 voterReward = (voteCount * 98) / 100;\r\n                balances[voter] += voterReward; // 更新赢家余额\r\n                emit RewardDistributed(voter, proposalId, voterReward, true);\r\n            } else {\r\n                balances[voter] -= voteCount; // 更新输家余额\r\n                emit RewardDistributed(voter, proposalId, 0, false);\r\n            }\r\n        }\r\n        // 更新提案状态\r\n        proposal.isSettled = true;\r\n    }\r\n\r\n    function settleFundsForAverageQuality(uint256 _proposalId) public onlyOwner {\r\n        require(_proposalId < proposals.length, \"Proposal does not exist.\");\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        require(proposal.active, \"Proposal is still active.\");\r\n        require(!proposal.isSettled, \"Funds already settled\");\r\n        deactivateProposal(_proposalId);  // 将提案状态设置为非活跃\r\n\r\n        uint256 stakedAmount = proposal.stakeAmount;\r\n        if(proposal.isWagered) {\r\n            uint256 currentDeposit = proposalTokenDeposits[proposal.proposer];\r\n            proposalTokenDeposits[proposal.proposer] = stakedAmount > currentDeposit ? 0 : currentDeposit - stakedAmount;\r\n        }else{\r\n            proposal.isSettled = true;\r\n        }\r\n        uint256 serviceFee = (proposal.stakeAmount * 3) / 100; // Calculating 3% service fee\r\n        uint256 reward = (proposal.stakeAmount * 5) / 100; // Calculating 5% reward\r\n        uint256 profit = reward - serviceFee;\r\n\r\n        balances[proposal.proposer] += profit; // Updating balance without actual transfer\r\n\r\n        proposal.isSettled = true;\r\n\r\n        emit FundsSettledForAverageQuality(_proposalId, proposal.proposer, profit);\r\n    }\r\n\r\n    function verifyComplianceAndExpectations(uint256 _proposalId) public onlyOwner {\r\n        require(_proposalId < proposals.length, \"Proposal does not exist.\");\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        require(proposal.active, \"Proposal is still active.\");\r\n        require(!proposal.isSettled, \"Funds already settled\");\r\n        deactivateProposal(_proposalId);  // 将提案状态设置为非活跃\r\n        uint256 stakedAmount = proposal.stakeAmount;\r\n        if(proposal.isWagered) {\r\n            // 确保不会导致下溢\r\n            uint256 currentDeposit = proposalTokenDeposits[proposal.proposer];\r\n            proposalTokenDeposits[proposal.proposer] = stakedAmount > currentDeposit ? 0 : currentDeposit - stakedAmount;\r\n        }else{\r\n            proposal.isSettled = true;\r\n        }\r\n        uint256 serviceFee = (proposal.stakeAmount * 3) / 100; // Calculating 3% service fee\r\n        uint256 reward = (proposal.stakeAmount * 10) / 100; // Calculating 10% reward\r\n        uint256 profit = reward - serviceFee;\r\n\r\n        balances[proposal.proposer] += profit; // Updating balance without actual transfer\r\n\r\n        proposal.isSettled = true;\r\n\r\n        emit FundsSettledForAverageQuality(_proposalId, proposal.proposer, profit);\r\n    }\r\n\r\n    function checkQualityComplianceBelowExpectations(uint256 _proposalId) public onlyOwner {\r\n        require(_proposalId < proposals.length, \"Proposal does not exist.\");\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        require(proposal.active, \"Proposal is still active.\");\r\n        require(!proposal.isSettled, \"Funds already settled\");\r\n        deactivateProposal(_proposalId);  // 将提案状态设置为非活跃\r\n\r\n        uint256 stakedAmount = proposal.stakeAmount;\r\n        if(proposal.isWagered) {\r\n            // 确保不会导致下溢\r\n            uint256 currentDeposit = proposalTokenDeposits[proposal.proposer];\r\n            proposalTokenDeposits[proposal.proposer] = stakedAmount > currentDeposit ? 0 : currentDeposit - stakedAmount;\r\n        }else{\r\n            proposal.isSettled = true;\r\n        }\r\n        uint256 punishment = (proposal.stakeAmount * 5) / 100; // Calculating 5% punishment\r\n\r\n        balances[proposal.proposer] -= punishment; // Updating balance without actual transfer\r\n\r\n        emit FundsPenalizedForNonCompliance(_proposalId, proposal.proposer, punishment);\r\n    }\r\n\r\n    function deactivateProposal(uint256 _proposalId) public {\r\n        Proposal storage proposal = proposals[_proposalId];\r\n        if (block.timestamp > proposal.endTime || proposal.active) {\r\n            proposal.active = false;\r\n            emit ProposalStatusChanged(_proposalId, false);\r\n        }\r\n    }\r\n} \r\n\r\n// Running deploy script\r\n// V1_Token deployed to: 0xfd884955bAE365715592f63dae520a0610b334f1\r\n// VotingContract deployed to: 0xB84d7B80c58bc9b60D02604078048daef456484c"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{}}},"output":{"errors":[{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"22","start":6276,"end":6300},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/SpenderContract.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"28","start":9819,"end":9864},"type":"Warning"}],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Darwin.appleclang","zk_version":"1.3.19","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2393],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":2394,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2393,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,2393],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[190]},"id":191,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"135:132:1","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":190,"linearizedBaseContracts":[190],"name":"IVotes","nameLocation":"278:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"291:71:1","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":124,"name":"DelegateChanged","nameLocation":"373:15:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"405:9:1","nodeType":"VariableDeclaration","scope":124,"src":"389:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"432:12:1","nodeType":"VariableDeclaration","scope":124,"src":"416:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"462:10:1","nodeType":"VariableDeclaration","scope":124,"src":"446:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"388:85:1"},"src":"367:107:1"},{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"480:124:1","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":133,"name":"DelegateVotesChanged","nameLocation":"615:20:1","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"652:8:1","nodeType":"VariableDeclaration","scope":133,"src":"636:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"670:15:1","nodeType":"VariableDeclaration","scope":133,"src":"662:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"695:10:1","nodeType":"VariableDeclaration","scope":133,"src":"687:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:71:1"},"src":"609:98:1"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"713:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":141,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"806:8:1","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"account","nameLocation":"823:7:1","nodeType":"VariableDeclaration","scope":141,"src":"815:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"814:17:1"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"855:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:9:1"},"scope":190,"src":"797:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"870:230:1","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":151,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1114:12:1","nodeType":"FunctionDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"account","nameLocation":"1135:7:1","nodeType":"VariableDeclaration","scope":151,"src":"1127:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"timepoint","nameLocation":"1152:9:1","nodeType":"VariableDeclaration","scope":151,"src":"1144:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1126:36:1"},"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":151,"src":"1186:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:9:1"},"scope":190,"src":"1105:90:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"1201:481:1","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":159,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1696:18:1","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"timepoint","nameLocation":"1723:9:1","nodeType":"VariableDeclaration","scope":159,"src":"1715:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1714:19:1"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"1757:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1757:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1756:9:1"},"scope":190,"src":"1687:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"1772:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1857:9:1","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"account","nameLocation":"1875:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1867:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1866:17:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"1907:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1906:9:1"},"scope":190,"src":"1848:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1922:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":173,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2007:8:1","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"delegatee","nameLocation":"2024:9:1","nodeType":"VariableDeclaration","scope":173,"src":"2016:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"2016:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2015:19:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"2043:0:1"},"scope":190,"src":"1998:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"2050:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2131:13:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"delegatee","nameLocation":"2153:9:1","nodeType":"VariableDeclaration","scope":189,"src":"2145:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"nonce","nameLocation":"2172:5:1","nodeType":"VariableDeclaration","scope":189,"src":"2164:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"expiry","nameLocation":"2187:6:1","nodeType":"VariableDeclaration","scope":189,"src":"2179:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"v","nameLocation":"2201:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2195:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":181,"name":"uint8","nodeType":"ElementaryTypeName","src":"2195:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"r","nameLocation":"2212:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2204:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2204:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"s","nameLocation":"2223:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2215:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2215:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2144:81:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"2234:0:1"},"scope":190,"src":"2122:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":191,"src":"268:1969:1","usedErrors":[]}],"src":"110:2128:1"}},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","exportedSymbols":{"IERC3156FlashBorrower":[210]},"id":211,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":192,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"120:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC3156FlashBorrower","contractDependencies":[],"contractKind":"interface","documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"145:153:2","text":" @dev Interface of the ERC3156 FlashBorrower, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n _Available since v4.1._"},"fullyImplemented":false,"id":210,"linearizedBaseContracts":[210],"name":"IERC3156FlashBorrower","nameLocation":"309:21:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"337:405:2","text":" @dev Receive a flash loan.\n @param initiator The initiator of the loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param fee The additional amount of tokens to repay.\n @param data Arbitrary data structure, intended to contain user-defined parameters.\n @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\""},"functionSelector":"23e30c8b","id":209,"implemented":false,"kind":"function","modifiers":[],"name":"onFlashLoan","nameLocation":"756:11:2","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"initiator","nameLocation":"785:9:2","nodeType":"VariableDeclaration","scope":209,"src":"777:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":198,"mutability":"mutable","name":"token","nameLocation":"812:5:2","nodeType":"VariableDeclaration","scope":209,"src":"804:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"804:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"amount","nameLocation":"835:6:2","nodeType":"VariableDeclaration","scope":209,"src":"827:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"827:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"fee","nameLocation":"859:3:2","nodeType":"VariableDeclaration","scope":209,"src":"851:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"data","nameLocation":"887:4:2","nodeType":"VariableDeclaration","scope":209,"src":"872:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":203,"name":"bytes","nodeType":"ElementaryTypeName","src":"872:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"767:130:2"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":209,"src":"916:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"916:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"915:9:2"},"scope":210,"src":"747:178:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":211,"src":"299:628:2","usedErrors":[]}],"src":"120:808:2"}},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol","exportedSymbols":{"IERC3156FlashBorrower":[210],"IERC3156FlashLender":[248]},"id":249,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":212,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:3"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","file":"./IERC3156FlashBorrower.sol","id":213,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":249,"sourceUnit":211,"src":"128:37:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IERC3156FlashLender","contractDependencies":[],"contractKind":"interface","documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"167:151:3","text":" @dev Interface of the ERC3156 FlashLender, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n _Available since v4.1._"},"fullyImplemented":false,"id":248,"linearizedBaseContracts":[248],"name":"IERC3156FlashLender","nameLocation":"329:19:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"355:168:3","text":" @dev The amount of currency available to be lended.\n @param token The loan currency.\n @return The amount of `token` that can be borrowed."},"functionSelector":"613255ab","id":222,"implemented":false,"kind":"function","modifiers":[],"name":"maxFlashLoan","nameLocation":"537:12:3","nodeType":"FunctionDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"token","nameLocation":"558:5:3","nodeType":"VariableDeclaration","scope":222,"src":"550:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"549:15:3"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":222,"src":"588:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"587:9:3"},"scope":248,"src":"528:69:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"603:249:3","text":" @dev The fee to be charged for a given loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @return The amount of `token` to be charged for the loan, on top of the returned principal."},"functionSelector":"d9d98ce4","id":232,"implemented":false,"kind":"function","modifiers":[],"name":"flashFee","nameLocation":"866:8:3","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"token","nameLocation":"883:5:3","nodeType":"VariableDeclaration","scope":232,"src":"875:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"amount","nameLocation":"898:6:3","nodeType":"VariableDeclaration","scope":232,"src":"890:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"890:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"874:31:3"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":232,"src":"929:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"929:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"928:9:3"},"scope":248,"src":"857:81:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"944:320:3","text":" @dev Initiate a flash loan.\n @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param data Arbitrary data structure, intended to contain user-defined parameters."},"functionSelector":"5cffe9de","id":247,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"1278:9:3","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"receiver","nameLocation":"1319:8:3","nodeType":"VariableDeclaration","scope":247,"src":"1297:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$210","typeString":"contract IERC3156FlashBorrower"},"typeName":{"id":235,"nodeType":"UserDefinedTypeName","pathNode":{"id":234,"name":"IERC3156FlashBorrower","nameLocations":["1297:21:3"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"1297:21:3"},"referencedDeclaration":210,"src":"1297:21:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$210","typeString":"contract IERC3156FlashBorrower"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"token","nameLocation":"1345:5:3","nodeType":"VariableDeclaration","scope":247,"src":"1337:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"1337:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"amount","nameLocation":"1368:6:3","nodeType":"VariableDeclaration","scope":247,"src":"1360:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1360:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"data","nameLocation":"1399:4:3","nodeType":"VariableDeclaration","scope":247,"src":"1384:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":241,"name":"bytes","nodeType":"ElementaryTypeName","src":"1384:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1287:122:3"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":247,"src":"1428:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"1428:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1427:6:3"},"scope":248,"src":"1269:165:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":249,"src":"319:1117:3","usedErrors":[]}],"src":"103:1334:3"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[273]},"id":274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":250,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":273,"linearizedBaseContracts":[273],"name":"IERC5267","nameLocation":"142:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"157:84:4","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":253,"name":"EIP712DomainChanged","nameLocation":"252:19:4","nodeType":"EventDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[],"src":"271:2:4"},"src":"246:28:4"},{"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"280:140:4","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":272,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"434:12:4","nodeType":"FunctionDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"446:2:4"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"fields","nameLocation":"516:6:4","nodeType":"VariableDeclaration","scope":272,"src":"509:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":256,"name":"bytes1","nodeType":"ElementaryTypeName","src":"509:6:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"name","nameLocation":"550:4:4","nodeType":"VariableDeclaration","scope":272,"src":"536:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":258,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"version","nameLocation":"582:7:4","nodeType":"VariableDeclaration","scope":272,"src":"568:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":260,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"chainId","nameLocation":"611:7:4","nodeType":"VariableDeclaration","scope":272,"src":"603:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"verifyingContract","nameLocation":"640:17:4","nodeType":"VariableDeclaration","scope":272,"src":"632:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"salt","nameLocation":"679:4:4","nodeType":"VariableDeclaration","scope":272,"src":"671:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"671:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"extensions","nameLocation":"714:10:4","nodeType":"VariableDeclaration","scope":272,"src":"697:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":269,"nodeType":"ArrayTypeName","src":"697:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"495:239:4"},"scope":273,"src":"425:310:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":274,"src":"132:605:4","usedErrors":[]}],"src":"107:631:4"}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[282],"IERC6372":[297],"IVotes":[190]},"id":283,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":275,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:5"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":283,"sourceUnit":191,"src":"132:40:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":277,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":283,"sourceUnit":298,"src":"173:24:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":278,"name":"IERC6372","nameLocations":["221:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":297,"src":"221:8:5"},"id":279,"nodeType":"InheritanceSpecifier","src":"221:8:5"},{"baseName":{"id":280,"name":"IVotes","nameLocations":["231:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"231:6:5"},"id":281,"nodeType":"InheritanceSpecifier","src":"231:6:5"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":282,"linearizedBaseContracts":[282,190,297],"name":"IERC5805","nameLocation":"209:8:5","nodeType":"ContractDefinition","nodes":[],"scope":283,"src":"199:41:5","usedErrors":[]}],"src":"107:134:5"}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[297]},"id":298,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":284,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":297,"linearizedBaseContracts":[297],"name":"IERC6372","nameLocation":"142:8:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"157:133:6","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":290,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"304:5:6","nodeType":"FunctionDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[],"src":"309:2:6"},"returnParameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":290,"src":"335:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":287,"name":"uint48","nodeType":"ElementaryTypeName","src":"335:6:6","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"334:8:6"},"scope":297,"src":"295:48:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"349:48:6","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":296,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"464:10:6","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[],"src":"474:2:6"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":296,"src":"500:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":293,"name":"string","nodeType":"ElementaryTypeName","src":"500:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"499:15:6"},"scope":297,"src":"455:60:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":298,"src":"132:385:6","usedErrors":[]}],"src":"107:411:6"}},"@openzeppelin/contracts/security/Pausable.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[2393],"Pausable":[405]},"id":406,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":299,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":300,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":406,"sourceUnit":2394,"src":"130:30:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":302,"name":"Context","nameLocations":["632:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2393,"src":"632:7:7"},"id":303,"nodeType":"InheritanceSpecifier","src":"632:7:7"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":301,"nodeType":"StructuredDocumentation","src":"162:439:7","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":405,"linearizedBaseContracts":[405,2393],"name":"Pausable","nameLocation":"620:8:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"646:73:7","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":308,"name":"Paused","nameLocation":"730:6:7","nodeType":"EventDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:7","nodeType":"VariableDeclaration","scope":308,"src":"737:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:7"},"src":"724:30:7"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"760:70:7","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":313,"name":"Unpaused","nameLocation":"841:8:7","nodeType":"EventDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:7","nodeType":"VariableDeclaration","scope":313,"src":"850:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:7"},"src":"835:32:7"},{"constant":false,"id":315,"mutability":"mutable","name":"_paused","nameLocation":"886:7:7","nodeType":"VariableDeclaration","scope":405,"src":"873:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":314,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":323,"nodeType":"Block","src":"986:32:7","statements":[{"expression":{"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":319,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"996:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":322,"nodeType":"ExpressionStatement","src":"996:15:7"}]},"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"900:67:7","text":" @dev Initializes the contract in unpaused state."},"id":324,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[],"src":"983:2:7"},"returnParameters":{"id":318,"nodeType":"ParameterList","parameters":[],"src":"986:0:7"},"scope":405,"src":"972:46:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":331,"nodeType":"Block","src":"1229:47:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":327,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1239:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":329,"nodeType":"ExpressionStatement","src":"1239:19:7"},{"id":330,"nodeType":"PlaceholderStatement","src":"1268:1:7"}]},"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"1024:175:7","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":332,"name":"whenNotPaused","nameLocation":"1213:13:7","nodeType":"ModifierDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"1226:2:7"},"src":"1204:72:7","virtual":false,"visibility":"internal"},{"body":{"id":339,"nodeType":"Block","src":"1476:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":335,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"1486:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":337,"nodeType":"ExpressionStatement","src":"1486:16:7"},{"id":338,"nodeType":"PlaceholderStatement","src":"1512:1:7"}]},"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"1282:167:7","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":340,"name":"whenPaused","nameLocation":"1463:10:7","nodeType":"ModifierDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[],"src":"1473:2:7"},"src":"1454:66:7","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"1668:31:7","statements":[{"expression":{"id":346,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1685:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":345,"id":347,"nodeType":"Return","src":"1678:14:7"}]},"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"1526:84:7","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":349,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:7","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[],"src":"1630:2:7"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":349,"src":"1662:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:7"},"scope":405,"src":"1615:84:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":360,"nodeType":"Block","src":"1818:55:7","statements":[{"expression":{"arguments":[{"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:7","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":354,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1837:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":359,"nodeType":"ExpressionStatement","src":"1828:38:7"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"1705:57:7","text":" @dev Throws if the contract is paused."},"id":361,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:7","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"1793:2:7"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[],"src":"1818:0:7"},"scope":405,"src":"1767:106:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":371,"nodeType":"Block","src":"1993:58:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":366,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"2011:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2011:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":365,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2003:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":370,"nodeType":"ExpressionStatement","src":"2003:41:7"}]},"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"1879:61:7","text":" @dev Throws if the contract is not paused."},"id":372,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:7","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"1968:2:7"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[],"src":"1993:0:7"},"scope":405,"src":"1945:106:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":387,"nodeType":"Block","src":"2235:66:7","statements":[{"expression":{"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":378,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2245:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":381,"nodeType":"ExpressionStatement","src":"2245:14:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":383,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2281:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":382,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"2274:6:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":386,"nodeType":"EmitStatement","src":"2269:25:7"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"2057:124:7","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":388,"implemented":true,"kind":"function","modifiers":[{"id":376,"kind":"modifierInvocation","modifierName":{"id":375,"name":"whenNotPaused","nameLocations":["2221:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":332,"src":"2221:13:7"},"nodeType":"ModifierInvocation","src":"2221:13:7"}],"name":"_pause","nameLocation":"2195:6:7","nodeType":"FunctionDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[],"src":"2201:2:7"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"2235:0:7"},"scope":405,"src":"2186:115:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":403,"nodeType":"Block","src":"2481:69:7","statements":[{"expression":{"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":394,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2491:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":397,"nodeType":"ExpressionStatement","src":"2491:15:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":399,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2530:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2530:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":398,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"2521:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2521:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":402,"nodeType":"EmitStatement","src":"2516:27:7"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"2307:121:7","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":404,"implemented":true,"kind":"function","modifiers":[{"id":392,"kind":"modifierInvocation","modifierName":{"id":391,"name":"whenPaused","nameLocations":["2470:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"2470:10:7"},"nodeType":"ModifierInvocation","src":"2470:10:7"}],"name":"_unpause","nameLocation":"2442:8:7","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"2450:2:7"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[],"src":"2481:0:7"},"scope":405,"src":"2433:117:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":406,"src":"602:1950:7","usedErrors":[]}],"src":"105:2448:7"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[470]},"id":471,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":407,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:8"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"137:750:8","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":470,"linearizedBaseContracts":[470],"name":"ReentrancyGuard","nameLocation":"906:15:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":411,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:8","nodeType":"VariableDeclaration","scope":470,"src":"1676:41:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":414,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:8","nodeType":"VariableDeclaration","scope":470,"src":"1723:37:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":416,"mutability":"mutable","name":"_status","nameLocation":"1783:7:8","nodeType":"VariableDeclaration","scope":470,"src":"1767:23:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":423,"nodeType":"Block","src":"1811:39:8","statements":[{"expression":{"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":419,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1821:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":420,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"1831:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":422,"nodeType":"ExpressionStatement","src":"1821:22:8"}]},"id":424,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[],"src":"1808:2:8"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"1811:0:8"},"scope":470,"src":"1797:53:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":434,"nodeType":"Block","src":"2251:79:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":427,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"2261:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"2261:21:8"},{"id":430,"nodeType":"PlaceholderStatement","src":"2292:1:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":431,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"2303:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":433,"nodeType":"ExpressionStatement","src":"2303:20:8"}]},"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"1856:366:8","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":435,"name":"nonReentrant","nameLocation":"2236:12:8","nodeType":"ModifierDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[],"src":"2248:2:8"},"src":"2227:103:8","virtual":false,"visibility":"internal"},{"body":{"id":449,"nodeType":"Block","src":"2375:248:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":439,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2468:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":440,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"2479:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":438,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":444,"nodeType":"ExpressionStatement","src":"2460:63:8"},{"expression":{"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":445,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2598:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":446,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"2608:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":448,"nodeType":"ExpressionStatement","src":"2598:18:8"}]},"id":450,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:8","nodeType":"FunctionDefinition","parameters":{"id":436,"nodeType":"ParameterList","parameters":[],"src":"2364:2:8"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"2375:0:8"},"scope":470,"src":"2336:287:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":457,"nodeType":"Block","src":"2667:171:8","statements":[{"expression":{"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":453,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2809:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":454,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2819:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":456,"nodeType":"ExpressionStatement","src":"2809:22:8"}]},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:8","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[],"src":"2656:2:8"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[],"src":"2667:0:8"},"scope":470,"src":"2629:209:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":468,"nodeType":"Block","src":"3081:43:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":464,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"3098:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":465,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"3109:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":463,"id":467,"nodeType":"Return","src":"3091:26:8"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"2844:168:8","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":469,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:8","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"3049:2:8"},"returnParameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":469,"src":"3075:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":461,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:8"},"scope":470,"src":"3017:107:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":471,"src":"888:2238:8","usedErrors":[]}],"src":"112:3015:8"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2393],"ERC20":[1057],"IERC20":[1135],"IERC20Metadata":[2327]},"id":1058,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":472,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":473,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1058,"sourceUnit":1136,"src":"130:22:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":474,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1058,"sourceUnit":2328,"src":"153:41:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":475,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1058,"sourceUnit":2394,"src":"195:33:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":477,"name":"Context","nameLocations":["1550:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2393,"src":"1550:7:9"},"id":478,"nodeType":"InheritanceSpecifier","src":"1550:7:9"},{"baseName":{"id":479,"name":"IERC20","nameLocations":["1559:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1135,"src":"1559:6:9"},"id":480,"nodeType":"InheritanceSpecifier","src":"1559:6:9"},{"baseName":{"id":481,"name":"IERC20Metadata","nameLocations":["1567:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":2327,"src":"1567:14:9"},"id":482,"nodeType":"InheritanceSpecifier","src":"1567:14:9"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"230:1301:9","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1057,"linearizedBaseContracts":[1057,2327,1135,2393],"name":"ERC20","nameLocation":"1541:5:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":486,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:9","nodeType":"VariableDeclaration","scope":1057,"src":"1588:45:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":485,"keyType":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":492,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:9","nodeType":"VariableDeclaration","scope":1057,"src":"1640:67:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":491,"keyType":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":490,"keyType":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":494,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:9","nodeType":"VariableDeclaration","scope":1057,"src":"1714:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":496,"mutability":"mutable","name":"_name","nameLocation":"1764:5:9","nodeType":"VariableDeclaration","scope":1057,"src":"1749:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":495,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":498,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:9","nodeType":"VariableDeclaration","scope":1057,"src":"1775:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":497,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":514,"nodeType":"Block","src":"2036:57:9","statements":[{"expression":{"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":506,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"2046:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":507,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"2054:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":509,"nodeType":"ExpressionStatement","src":"2046:13:9"},{"expression":{"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":510,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"2069:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":511,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"2079:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":513,"nodeType":"ExpressionStatement","src":"2069:17:9"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"1804:171:9","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":515,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"name_","nameLocation":"2006:5:9","nodeType":"VariableDeclaration","scope":515,"src":"1992:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":500,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:9","nodeType":"VariableDeclaration","scope":515,"src":"2013:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":502,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:9"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[],"src":"2036:0:9"},"scope":1057,"src":"1980:113:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2314],"body":{"id":524,"nodeType":"Block","src":"2227:29:9","statements":[{"expression":{"id":522,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"2244:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":521,"id":523,"nodeType":"Return","src":"2237:12:9"}]},"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"2099:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":525,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:9","nodeType":"FunctionDefinition","overrides":{"id":518,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:9"},"parameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"2171:2:9"},"returnParameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":525,"src":"2212:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":519,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:9"},"scope":1057,"src":"2158:98:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2320],"body":{"id":534,"nodeType":"Block","src":"2440:31:9","statements":[{"expression":{"id":532,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"2457:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":531,"id":533,"nodeType":"Return","src":"2450:14:9"}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"2262:102:9","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":535,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:9","nodeType":"FunctionDefinition","overrides":{"id":528,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:9"},"parameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"2384:2:9"},"returnParameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":535,"src":"2425:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":529,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:9"},"scope":1057,"src":"2369:102:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2326],"body":{"id":544,"nodeType":"Block","src":"3169:26:9","statements":[{"expression":{"hexValue":"3138","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":541,"id":543,"nodeType":"Return","src":"3179:9:9"}]},"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"2477:622:9","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":545,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:9","nodeType":"FunctionDefinition","overrides":{"id":538,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:9"},"parameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"3121:2:9"},"returnParameters":{"id":541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":545,"src":"3162:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":539,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:9"},"scope":1057,"src":"3104:91:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1084],"body":{"id":554,"nodeType":"Block","src":"3325:36:9","statements":[{"expression":{"id":552,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"3342:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":551,"id":553,"nodeType":"Return","src":"3335:19:9"}]},"documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"3201:49:9","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":555,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:9","nodeType":"FunctionDefinition","overrides":{"id":548,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:9"},"parameters":{"id":547,"nodeType":"ParameterList","parameters":[],"src":"3275:2:9"},"returnParameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"3316:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":549,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:9"},"scope":1057,"src":"3255:106:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1092],"body":{"id":568,"nodeType":"Block","src":"3502:42:9","statements":[{"expression":{"baseExpression":{"id":564,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"3519:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":566,"indexExpression":{"id":565,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"3529:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":563,"id":567,"nodeType":"Return","src":"3512:25:9"}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"3367:47:9","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":569,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:9","nodeType":"FunctionDefinition","overrides":{"id":560,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:9"},"parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"account","nameLocation":"3446:7:9","nodeType":"VariableDeclaration","scope":569,"src":"3438:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:9"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":569,"src":"3493:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:9"},"scope":1057,"src":"3419:125:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1102],"body":{"id":593,"nodeType":"Block","src":"3825:104:9","statements":[{"assignments":[581],"declarations":[{"constant":false,"id":581,"mutability":"mutable","name":"owner","nameLocation":"3843:5:9","nodeType":"VariableDeclaration","scope":593,"src":"3835:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":584,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":582,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"3851:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:9"},{"expression":{"arguments":[{"id":586,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"3883:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":587,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"3890:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":588,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"3894:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":585,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"3873:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"ExpressionStatement","src":"3873:28:9"},{"expression":{"hexValue":"74727565","id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":579,"id":592,"nodeType":"Return","src":"3911:11:9"}]},"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"3550:185:9","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":594,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:9","nodeType":"FunctionDefinition","overrides":{"id":576,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:9"},"parameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"to","nameLocation":"3766:2:9","nodeType":"VariableDeclaration","scope":594,"src":"3758:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"amount","nameLocation":"3778:6:9","nodeType":"VariableDeclaration","scope":594,"src":"3770:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:9"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"3819:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":577,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:9"},"scope":1057,"src":"3740:189:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1112],"body":{"id":611,"nodeType":"Block","src":"4085:51:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":605,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"4102:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":607,"indexExpression":{"id":606,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4114:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":609,"indexExpression":{"id":608,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"4121:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":604,"id":610,"nodeType":"Return","src":"4095:34:9"}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"3935:47:9","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":612,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:9","nodeType":"FunctionDefinition","overrides":{"id":601,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:9"},"parameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"owner","nameLocation":"4014:5:9","nodeType":"VariableDeclaration","scope":612,"src":"4006:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"spender","nameLocation":"4029:7:9","nodeType":"VariableDeclaration","scope":612,"src":"4021:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:9"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":612,"src":"4076:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:9"},"scope":1057,"src":"3987:149:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1122],"body":{"id":636,"nodeType":"Block","src":"4533:108:9","statements":[{"assignments":[624],"declarations":[{"constant":false,"id":624,"mutability":"mutable","name":"owner","nameLocation":"4551:5:9","nodeType":"VariableDeclaration","scope":636,"src":"4543:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":627,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":625,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"4559:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:9"},{"expression":{"arguments":[{"id":629,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"4590:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4597:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":631,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"4606:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":628,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"4581:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":633,"nodeType":"ExpressionStatement","src":"4581:32:9"},{"expression":{"hexValue":"74727565","id":634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":622,"id":635,"nodeType":"Return","src":"4623:11:9"}]},"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"4142:297:9","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":637,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:9","nodeType":"FunctionDefinition","overrides":{"id":619,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:9"},"parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"spender","nameLocation":"4469:7:9","nodeType":"VariableDeclaration","scope":637,"src":"4461:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"amount","nameLocation":"4486:6:9","nodeType":"VariableDeclaration","scope":637,"src":"4478:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":616,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:9"},"returnParameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":637,"src":"4527:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":620,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:9"},"scope":1057,"src":"4444:197:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1134],"body":{"id":669,"nodeType":"Block","src":"5306:153:9","statements":[{"assignments":[651],"declarations":[{"constant":false,"id":651,"mutability":"mutable","name":"spender","nameLocation":"5324:7:9","nodeType":"VariableDeclaration","scope":669,"src":"5316:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":654,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":652,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"5334:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:9"},{"expression":{"arguments":[{"id":656,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"5372:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":657,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"5378:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":658,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"5387:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":655,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"5356:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":660,"nodeType":"ExpressionStatement","src":"5356:38:9"},{"expression":{"arguments":[{"id":662,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"5414:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":663,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5420:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":664,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"5424:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":661,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"5404:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":666,"nodeType":"ExpressionStatement","src":"5404:27:9"},{"expression":{"hexValue":"74727565","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":649,"id":668,"nodeType":"Return","src":"5441:11:9"}]},"documentation":{"id":638,"nodeType":"StructuredDocumentation","src":"4647:551:9","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":670,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:9","nodeType":"FunctionDefinition","overrides":{"id":646,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:9"},"parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"from","nameLocation":"5233:4:9","nodeType":"VariableDeclaration","scope":670,"src":"5225:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"to","nameLocation":"5247:2:9","nodeType":"VariableDeclaration","scope":670,"src":"5239:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"amount","nameLocation":"5259:6:9","nodeType":"VariableDeclaration","scope":670,"src":"5251:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:9"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":670,"src":"5300:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":647,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:9"},"scope":1057,"src":"5203:256:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":698,"nodeType":"Block","src":"5948:140:9","statements":[{"assignments":[681],"declarations":[{"constant":false,"id":681,"mutability":"mutable","name":"owner","nameLocation":"5966:5:9","nodeType":"VariableDeclaration","scope":698,"src":"5958:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":684,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":682,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"5974:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:9"},{"expression":{"arguments":[{"id":686,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"6005:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":687,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"6012:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":689,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"6031:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":690,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"6038:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":688,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6021:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":692,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"6049:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":685,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5996:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"5996:64:9"},{"expression":{"hexValue":"74727565","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":679,"id":697,"nodeType":"Return","src":"6070:11:9"}]},"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"5465:384:9","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":699,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:9","nodeType":"FunctionDefinition","parameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"spender","nameLocation":"5889:7:9","nodeType":"VariableDeclaration","scope":699,"src":"5881:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":675,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:9","nodeType":"VariableDeclaration","scope":699,"src":"5898:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:9"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":699,"src":"5942:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":677,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:9"},"scope":1057,"src":"5854:234:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":739,"nodeType":"Block","src":"6674:328:9","statements":[{"assignments":[710],"declarations":[{"constant":false,"id":710,"mutability":"mutable","name":"owner","nameLocation":"6692:5:9","nodeType":"VariableDeclaration","scope":739,"src":"6684:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":713,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":711,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"6700:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:9"},{"assignments":[715],"declarations":[{"constant":false,"id":715,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:9","nodeType":"VariableDeclaration","scope":739,"src":"6722:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":720,"initialValue":{"arguments":[{"id":717,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6759:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":718,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"6766:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":716,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6749:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":722,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"6792:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":723,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"6812:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":721,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"6784:85:9"},{"id":736,"nodeType":"UncheckedBlock","src":"6879:95:9","statements":[{"expression":{"arguments":[{"id":729,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6912:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":730,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"6919:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":731,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"6928:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":732,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"6947:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":728,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"6903:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":735,"nodeType":"ExpressionStatement","src":"6903:60:9"}]},{"expression":{"hexValue":"74727565","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":708,"id":738,"nodeType":"Return","src":"6984:11:9"}]},"documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"6094:476:9","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":740,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:9","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"spender","nameLocation":"6610:7:9","nodeType":"VariableDeclaration","scope":740,"src":"6602:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:9","nodeType":"VariableDeclaration","scope":740,"src":"6619:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:9"},"returnParameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":740,"src":"6668:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":706,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:9"},"scope":1057,"src":"6575:427:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":816,"nodeType":"Block","src":"7534:710:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":751,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"7552:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:9","typeDescriptions":{}}},"id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":750,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"ExpressionStatement","src":"7544:68:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":761,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"7630:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:9","typeDescriptions":{}}},"id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":769,"nodeType":"ExpressionStatement","src":"7622:64:9"},{"expression":{"arguments":[{"id":771,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"7718:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"7724:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":773,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"7728:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":770,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"7697:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":775,"nodeType":"ExpressionStatement","src":"7697:38:9"},{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:9","nodeType":"VariableDeclaration","scope":816,"src":"7746:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":781,"initialValue":{"baseExpression":{"id":778,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"7768:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":780,"indexExpression":{"id":779,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"7778:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":783,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"7801:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":784,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"7816:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":782,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":788,"nodeType":"ExpressionStatement","src":"7793:72:9"},{"id":803,"nodeType":"UncheckedBlock","src":"7875:273:9","statements":[{"expression":{"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":789,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"7899:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":791,"indexExpression":{"id":790,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"7909:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"7917:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":793,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"7931:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":796,"nodeType":"ExpressionStatement","src":"7899:38:9"},{"expression":{"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":797,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"8114:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":799,"indexExpression":{"id":798,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"8124:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":800,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"8131:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":802,"nodeType":"ExpressionStatement","src":"8114:23:9"}]},{"eventCall":{"arguments":[{"id":805,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"8172:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":806,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"8178:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"8182:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":804,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"8163:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":809,"nodeType":"EmitStatement","src":"8158:31:9"},{"expression":{"arguments":[{"id":811,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"8220:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"8226:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":813,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"8230:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"8200:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":815,"nodeType":"ExpressionStatement","src":"8200:37:9"}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"7008:443:9","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":817,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:9","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"from","nameLocation":"7483:4:9","nodeType":"VariableDeclaration","scope":817,"src":"7475:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":745,"mutability":"mutable","name":"to","nameLocation":"7497:2:9","nodeType":"VariableDeclaration","scope":817,"src":"7489:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":747,"mutability":"mutable","name":"amount","nameLocation":"7509:6:9","nodeType":"VariableDeclaration","scope":817,"src":"7501:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:9"},"returnParameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"7534:0:9"},"scope":1057,"src":"7456:788:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":873,"nodeType":"Block","src":"8585:470:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":826,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"8603:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:9","typeDescriptions":{}}},"id":830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":825,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":834,"nodeType":"ExpressionStatement","src":"8595:65:9"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:9","typeDescriptions":{}}},"id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":840,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"8704:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":841,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"8713:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":835,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"8671:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":843,"nodeType":"ExpressionStatement","src":"8671:49:9"},{"expression":{"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":844,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8731:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":845,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"8747:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":847,"nodeType":"ExpressionStatement","src":"8731:22:9"},{"id":854,"nodeType":"UncheckedBlock","src":"8763:175:9","statements":[{"expression":{"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":848,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"8899:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":850,"indexExpression":{"id":849,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"8909:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":851,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"8921:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":853,"nodeType":"ExpressionStatement","src":"8899:28:9"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:9","typeDescriptions":{}}},"id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":860,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"8973:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"8982:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":855,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"8952:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":863,"nodeType":"EmitStatement","src":"8947:42:9"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:9","typeDescriptions":{}}},"id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"9032:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":870,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"9041:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":864,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"9000:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":872,"nodeType":"ExpressionStatement","src":"9000:48:9"}]},"documentation":{"id":818,"nodeType":"StructuredDocumentation","src":"8250:265:9","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":874,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:9","nodeType":"FunctionDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"account","nameLocation":"8543:7:9","nodeType":"VariableDeclaration","scope":874,"src":"8535:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":822,"mutability":"mutable","name":"amount","nameLocation":"8560:6:9","nodeType":"VariableDeclaration","scope":874,"src":"8552:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":821,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:9"},"returnParameters":{"id":824,"nodeType":"ParameterList","parameters":[],"src":"8585:0:9"},"scope":1057,"src":"8520:535:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":945,"nodeType":"Block","src":"9440:594:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":883,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"9458:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:9","typeDescriptions":{}}},"id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":882,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":891,"nodeType":"ExpressionStatement","src":"9450:67:9"},{"expression":{"arguments":[{"id":893,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"9549:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:9","typeDescriptions":{}}},"id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":898,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"9570:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":892,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"9528:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":900,"nodeType":"ExpressionStatement","src":"9528:49:9"},{"assignments":[902],"declarations":[{"constant":false,"id":902,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:9","nodeType":"VariableDeclaration","scope":945,"src":"9588:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":906,"initialValue":{"baseExpression":{"id":903,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"9613:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":905,"indexExpression":{"id":904,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"9623:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":908,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"9649:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":909,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"9667:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":907,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":913,"nodeType":"ExpressionStatement","src":"9641:71:9"},{"id":926,"nodeType":"UncheckedBlock","src":"9722:194:9","statements":[{"expression":{"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":914,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"9746:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":916,"indexExpression":{"id":915,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"9756:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"9767:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":918,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"9784:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":921,"nodeType":"ExpressionStatement","src":"9746:44:9"},{"expression":{"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":922,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"9883:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":923,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"9899:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":925,"nodeType":"ExpressionStatement","src":"9883:22:9"}]},{"eventCall":{"arguments":[{"id":928,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"9940:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:9","typeDescriptions":{}}},"id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":933,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"9961:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":927,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"9931:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":935,"nodeType":"EmitStatement","src":"9926:42:9"},{"expression":{"arguments":[{"id":937,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"9999:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:9","typeDescriptions":{}}},"id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":942,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"10020:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":936,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"9979:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"ExpressionStatement","src":"9979:48:9"}]},"documentation":{"id":875,"nodeType":"StructuredDocumentation","src":"9061:309:9","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":946,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:9","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"account","nameLocation":"9398:7:9","nodeType":"VariableDeclaration","scope":946,"src":"9390:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"amount","nameLocation":"9415:6:9","nodeType":"VariableDeclaration","scope":946,"src":"9407:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:9"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[],"src":"9440:0:9"},"scope":1057,"src":"9375:659:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":990,"nodeType":"Block","src":"10540:257:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":957,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"10558:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:9","typeDescriptions":{}}},"id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":956,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":965,"nodeType":"ExpressionStatement","src":"10550:68:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":967,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"10636:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:9","typeDescriptions":{}}},"id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":966,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":975,"nodeType":"ExpressionStatement","src":"10628:68:9"},{"expression":{"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":976,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"10707:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":979,"indexExpression":{"id":977,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"10719:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":980,"indexExpression":{"id":978,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"10726:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":981,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"10737:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":983,"nodeType":"ExpressionStatement","src":"10707:36:9"},{"eventCall":{"arguments":[{"id":985,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"10767:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":986,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"10774:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"10783:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":984,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"10758:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":989,"nodeType":"EmitStatement","src":"10753:37:9"}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"10040:412:9","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":991,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:9","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"owner","nameLocation":"10483:5:9","nodeType":"VariableDeclaration","scope":991,"src":"10475:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"spender","nameLocation":"10498:7:9","nodeType":"VariableDeclaration","scope":991,"src":"10490:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"amount","nameLocation":"10515:6:9","nodeType":"VariableDeclaration","scope":991,"src":"10507:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:9"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[],"src":"10540:0:9"},"scope":1057,"src":"10457:340:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1033,"nodeType":"Block","src":"11168:321:9","statements":[{"assignments":[1002],"declarations":[{"constant":false,"id":1002,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:9","nodeType":"VariableDeclaration","scope":1033,"src":"11178:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1007,"initialValue":{"arguments":[{"id":1004,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"11215:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1005,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"11222:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1003,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"11205:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1008,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"11244:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1009,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:9","memberName":"max","nodeType":"MemberAccess","src":"11264:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1032,"nodeType":"IfStatement","src":"11240:243:9","trueBody":{"id":1031,"nodeType":"Block","src":"11283:200:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1016,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"11305:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1017,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"11325:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1015,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1021,"nodeType":"ExpressionStatement","src":"11297:68:9"},{"id":1030,"nodeType":"UncheckedBlock","src":"11379:94:9","statements":[{"expression":{"arguments":[{"id":1023,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"11416:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1024,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"11423:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1025,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"11432:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1026,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"11451:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1022,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"11407:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1029,"nodeType":"ExpressionStatement","src":"11407:51:9"}]}]}}]},"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"10803:270:9","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1034,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:9","nodeType":"FunctionDefinition","parameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"owner","nameLocation":"11111:5:9","nodeType":"VariableDeclaration","scope":1034,"src":"11103:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"spender","nameLocation":"11126:7:9","nodeType":"VariableDeclaration","scope":1034,"src":"11118:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"amount","nameLocation":"11143:6:9","nodeType":"VariableDeclaration","scope":1034,"src":"11135:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":997,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:9"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"11168:0:9"},"scope":1057,"src":"11078:411:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1044,"nodeType":"Block","src":"12162:2:9","statements":[]},"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"11495:573:9","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1045,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:9","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"from","nameLocation":"12111:4:9","nodeType":"VariableDeclaration","scope":1045,"src":"12103:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"to","nameLocation":"12125:2:9","nodeType":"VariableDeclaration","scope":1045,"src":"12117:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"amount","nameLocation":"12137:6:9","nodeType":"VariableDeclaration","scope":1045,"src":"12129:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:9"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[],"src":"12162:0:9"},"scope":1057,"src":"12073:91:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1055,"nodeType":"Block","src":"12840:2:9","statements":[]},"documentation":{"id":1046,"nodeType":"StructuredDocumentation","src":"12170:577:9","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1056,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:9","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"from","nameLocation":"12789:4:9","nodeType":"VariableDeclaration","scope":1056,"src":"12781:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"to","nameLocation":"12803:2:9","nodeType":"VariableDeclaration","scope":1056,"src":"12795:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"amount","nameLocation":"12815:6:9","nodeType":"VariableDeclaration","scope":1056,"src":"12807:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:9"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[],"src":"12840:0:9"},"scope":1057,"src":"12752:90:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1058,"src":"1532:11312:9","usedErrors":[]}],"src":"105:12740:9"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1135]},"id":1136,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1059,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"131:70:10","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1135,"linearizedBaseContracts":[1135],"name":"IERC20","nameLocation":"212:6:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"225:158:10","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1069,"name":"Transfer","nameLocation":"394:8:10","nodeType":"EventDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:10","nodeType":"VariableDeclaration","scope":1069,"src":"403:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1065,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:10","nodeType":"VariableDeclaration","scope":1069,"src":"425:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:10","nodeType":"VariableDeclaration","scope":1069,"src":"445:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:10"},"src":"388:72:10"},{"anonymous":false,"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"466:148:10","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1078,"name":"Approval","nameLocation":"625:8:10","nodeType":"EventDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:10","nodeType":"VariableDeclaration","scope":1078,"src":"634:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1074,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:10","nodeType":"VariableDeclaration","scope":1078,"src":"657:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1076,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:10","nodeType":"VariableDeclaration","scope":1078,"src":"682:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1075,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:10"},"src":"619:78:10"},{"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"703:66:10","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1084,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:10","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"794:2:10"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1084,"src":"820:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:10"},"scope":1135,"src":"774:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"835:72:10","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1092,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:10","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"account","nameLocation":"939:7:10","nodeType":"VariableDeclaration","scope":1092,"src":"931:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:10"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1092,"src":"971:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:10"},"scope":1135,"src":"912:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"986:202:10","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1102,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:10","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"to","nameLocation":"1219:2:10","nodeType":"VariableDeclaration","scope":1102,"src":"1211:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"amount","nameLocation":"1231:6:10","nodeType":"VariableDeclaration","scope":1102,"src":"1223:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:10"},"returnParameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1102,"src":"1257:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1099,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:10"},"scope":1135,"src":"1193:70:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"1269:264:10","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1112,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:10","nodeType":"FunctionDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"owner","nameLocation":"1565:5:10","nodeType":"VariableDeclaration","scope":1112,"src":"1557:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"spender","nameLocation":"1580:7:10","nodeType":"VariableDeclaration","scope":1112,"src":"1572:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:10"},"returnParameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1112,"src":"1612:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:10"},"scope":1135,"src":"1538:83:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"1627:642:10","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1122,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:10","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"spender","nameLocation":"2299:7:10","nodeType":"VariableDeclaration","scope":1122,"src":"2291:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"amount","nameLocation":"2316:6:10","nodeType":"VariableDeclaration","scope":1122,"src":"2308:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:10"},"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1122,"src":"2342:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1119,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:10"},"scope":1135,"src":"2274:74:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1123,"nodeType":"StructuredDocumentation","src":"2354:287:10","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1134,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:10","nodeType":"FunctionDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"from","nameLocation":"2676:4:10","nodeType":"VariableDeclaration","scope":1134,"src":"2668:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"to","nameLocation":"2690:2:10","nodeType":"VariableDeclaration","scope":1134,"src":"2682:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1126,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1129,"mutability":"mutable","name":"amount","nameLocation":"2702:6:10","nodeType":"VariableDeclaration","scope":1134,"src":"2694:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:10"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1134,"src":"2728:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1131,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:10"},"scope":1135,"src":"2646:88:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1136,"src":"202:2534:10","usedErrors":[]}],"src":"106:2631:10"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"id":11,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[2393],"ERC20":[1057],"ERC20Burnable":[1179],"IERC20":[1135],"IERC20Metadata":[2327]},"id":1180,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1137,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1138,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1180,"sourceUnit":1058,"src":"149:22:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1139,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1180,"sourceUnit":2394,"src":"172:36:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1141,"name":"Context","nameLocations":["454:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2393,"src":"454:7:11"},"id":1142,"nodeType":"InheritanceSpecifier","src":"454:7:11"},{"baseName":{"id":1143,"name":"ERC20","nameLocations":["463:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":1057,"src":"463:5:11"},"id":1144,"nodeType":"InheritanceSpecifier","src":"463:5:11"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"210:208:11","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":false,"id":1179,"linearizedBaseContracts":[1179,1057,2327,1135,2393],"name":"ERC20Burnable","nameLocation":"437:13:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1156,"nodeType":"Block","src":"623:44:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1151,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"639:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"639:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1153,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"653:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1150,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"633:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"633:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1155,"nodeType":"ExpressionStatement","src":"633:27:11"}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"475:98:11","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1157,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"587:4:11","nodeType":"FunctionDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"amount","nameLocation":"600:6:11","nodeType":"VariableDeclaration","scope":1157,"src":"592:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"591:16:11"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[],"src":"623:0:11"},"scope":1179,"src":"578:89:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1177,"nodeType":"Block","src":"1039:95:11","statements":[{"expression":{"arguments":[{"id":1166,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"1065:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1167,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"1074:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1074:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1169,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"1088:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1165,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"1049:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1049:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1171,"nodeType":"ExpressionStatement","src":"1049:46:11"},{"expression":{"arguments":[{"id":1173,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"1111:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1174,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"1120:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1172,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"1105:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1105:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1176,"nodeType":"ExpressionStatement","src":"1105:22:11"}]},"documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"673:295:11","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":1178,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"982:8:11","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"account","nameLocation":"999:7:11","nodeType":"VariableDeclaration","scope":1178,"src":"991:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"amount","nameLocation":"1016:6:11","nodeType":"VariableDeclaration","scope":1178,"src":"1008:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"990:33:11"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[],"src":"1039:0:11"},"scope":1179,"src":"973:161:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1180,"src":"419:717:11","usedErrors":[]}],"src":"124:1013:11"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol":{"id":12,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol","exportedSymbols":{"Context":[2393],"ERC20":[1057],"ERC20FlashMint":[1396],"IERC20":[1135],"IERC20Metadata":[2327],"IERC3156FlashBorrower":[210],"IERC3156FlashLender":[248]},"id":1397,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1181,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"125:23:12"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","file":"../../../interfaces/IERC3156FlashBorrower.sol","id":1182,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1397,"sourceUnit":211,"src":"150:55:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol","file":"../../../interfaces/IERC3156FlashLender.sol","id":1183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1397,"sourceUnit":249,"src":"206:53:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1397,"sourceUnit":1058,"src":"260:22:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1186,"name":"ERC20","nameLocations":["657:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":1057,"src":"657:5:12"},"id":1187,"nodeType":"InheritanceSpecifier","src":"657:5:12"},{"baseName":{"id":1188,"name":"IERC3156FlashLender","nameLocations":["664:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"664:19:12"},"id":1189,"nodeType":"InheritanceSpecifier","src":"664:19:12"}],"canonicalName":"ERC20FlashMint","contractDependencies":[],"contractKind":"contract","documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"284:336:12","text":" @dev Implementation of the ERC3156 Flash loans extension, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n Adds the {flashLoan} method, which provides flash loan support at the token\n level. By default there is no fee, but this can be changed by overriding {flashFee}.\n _Available since v4.1._"},"fullyImplemented":false,"id":1396,"linearizedBaseContracts":[1396,248,1057,2327,1135,2393],"name":"ERC20FlashMint","nameLocation":"639:14:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1194,"mutability":"constant","name":"_RETURN_VALUE","nameLocation":"715:13:12","nodeType":"VariableDeclaration","scope":1396,"src":"690:86:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"690:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"741:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9","typeString":"literal_string \"ERC3156FlashBorrower.onFlashLoan\""},"value":"ERC3156FlashBorrower.onFlashLoan"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9","typeString":"literal_string \"ERC3156FlashBorrower.onFlashLoan\""}],"id":1191,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"731:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"731:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"baseFunctions":[222],"body":{"id":1221,"nodeType":"Block","src":"1071:92:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1203,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"1088:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1206,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1105:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMint_$1396","typeString":"contract ERC20FlashMint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMint_$1396","typeString":"contract ERC20FlashMint"}],"id":1205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1097:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"1097:7:12","typeDescriptions":{}}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1097:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1088:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1155:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1088:68:12","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1118:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1118:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1209,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1113:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1113:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1127:3:12","memberName":"max","nodeType":"MemberAccess","src":"1113:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1214,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"1133:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$1057_$","typeString":"type(contract ERC20)"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1139:11:12","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":555,"src":"1133:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1133:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1113:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1202,"id":1220,"nodeType":"Return","src":"1081:75:12"}]},"documentation":{"id":1195,"nodeType":"StructuredDocumentation","src":"783:199:12","text":" @dev Returns the maximum amount of tokens available for loan.\n @param token The address of the token that is requested.\n @return The amount of token that can be loaned."},"functionSelector":"613255ab","id":1222,"implemented":true,"kind":"function","modifiers":[],"name":"maxFlashLoan","nameLocation":"996:12:12","nodeType":"FunctionDefinition","overrides":{"id":1199,"nodeType":"OverrideSpecifier","overrides":[],"src":"1044:8:12"},"parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"token","nameLocation":"1017:5:12","nodeType":"VariableDeclaration","scope":1222,"src":"1009:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1196,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:15:12"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1222,"src":"1062:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1062:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1061:9:12"},"scope":1396,"src":"987:176:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[232],"body":{"id":1248,"nodeType":"Block","src":"1625:120:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1234,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"1643:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1237,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1660:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMint_$1396","typeString":"contract ERC20FlashMint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMint_$1396","typeString":"contract ERC20FlashMint"}],"id":1236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1652:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"1652:7:12","typeDescriptions":{}}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1652:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1643:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230466c6173684d696e743a2077726f6e6720746f6b656e","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1667:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30","typeString":"literal_string \"ERC20FlashMint: wrong token\""},"value":"ERC20FlashMint: wrong token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30","typeString":"literal_string \"ERC20FlashMint: wrong token\""}],"id":1233,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1635:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1635:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1242,"nodeType":"ExpressionStatement","src":"1635:62:12"},{"expression":{"arguments":[{"id":1244,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"1724:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1245,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"1731:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1243,"name":"_flashFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"1714:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1714:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1232,"id":1247,"nodeType":"Return","src":"1707:31:12"}]},"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"1169:355:12","text":" @dev Returns the fee applied when doing flash loans. This function calls\n the {_flashFee} function which returns the fee applied when doing flash\n loans.\n @param token The token to be flash loaned.\n @param amount The amount of tokens to be loaned.\n @return The fees applied to the corresponding flash loan."},"functionSelector":"d9d98ce4","id":1249,"implemented":true,"kind":"function","modifiers":[],"name":"flashFee","nameLocation":"1538:8:12","nodeType":"FunctionDefinition","overrides":{"id":1229,"nodeType":"OverrideSpecifier","overrides":[],"src":"1598:8:12"},"parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"token","nameLocation":"1555:5:12","nodeType":"VariableDeclaration","scope":1249,"src":"1547:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"1547:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"amount","nameLocation":"1570:6:12","nodeType":"VariableDeclaration","scope":1249,"src":"1562:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"1562:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1546:31:12"},"returnParameters":{"id":1232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1249,"src":"1616:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1230,"name":"uint256","nodeType":"ElementaryTypeName","src":"1616:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1615:9:12"},"scope":1396,"src":"1529:216:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1265,"nodeType":"Block","src":"2224:139:12","statements":[{"expression":{"id":1259,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"2317:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1260,"nodeType":"ExpressionStatement","src":"2317:5:12"},{"expression":{"id":1261,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"2332:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1262,"nodeType":"ExpressionStatement","src":"2332:6:12"},{"expression":{"hexValue":"30","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2355:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1258,"id":1264,"nodeType":"Return","src":"2348:8:12"}]},"documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"1751:378:12","text":" @dev Returns the fee applied when doing flash loans. By default this\n implementation has 0 fees. This function can be overloaded to make\n the flash loan mechanism deflationary.\n @param token The token to be flash loaned.\n @param amount The amount of tokens to be loaned.\n @return The fees applied to the corresponding flash loan."},"id":1266,"implemented":true,"kind":"function","modifiers":[],"name":"_flashFee","nameLocation":"2143:9:12","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"token","nameLocation":"2161:5:12","nodeType":"VariableDeclaration","scope":1266,"src":"2153:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"2153:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1254,"mutability":"mutable","name":"amount","nameLocation":"2176:6:12","nodeType":"VariableDeclaration","scope":1266,"src":"2168:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2152:31:12"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"2215:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"2215:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2214:9:12"},"scope":1396,"src":"2134:229:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1277,"nodeType":"Block","src":"2751:34:12","statements":[{"expression":{"arguments":[{"hexValue":"30","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2776:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2768:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"2768:7:12","typeDescriptions":{}}},"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1271,"id":1276,"nodeType":"Return","src":"2761:17:12"}]},"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"2369:308:12","text":" @dev Returns the receiver address of the flash fee. By default this\n implementation returns the address(0) which means the fee amount will be burnt.\n This function can be overloaded to change the fee receiver.\n @return The address for which the flash fee will be sent to."},"id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"_flashFeeReceiver","nameLocation":"2691:17:12","nodeType":"FunctionDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[],"src":"2708:2:12"},"returnParameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"2742:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"2742:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2741:9:12"},"scope":1396,"src":"2682:103:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[247],"body":{"id":1394,"nodeType":"Block","src":"4022:757:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1295,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"4040:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"id":1297,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"4063:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1296,"name":"maxFlashLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"4050:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4050:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4040:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230466c6173684d696e743a20616d6f756e742065786365656473206d6178466c6173684c6f616e","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4071:45:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9","typeString":"literal_string \"ERC20FlashMint: amount exceeds maxFlashLoan\""},"value":"ERC20FlashMint: amount exceeds maxFlashLoan"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9","typeString":"literal_string \"ERC20FlashMint: amount exceeds maxFlashLoan\""}],"id":1294,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4032:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:85:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1302,"nodeType":"ExpressionStatement","src":"4032:85:12"},{"assignments":[1304],"declarations":[{"constant":false,"id":1304,"mutability":"mutable","name":"fee","nameLocation":"4135:3:12","nodeType":"VariableDeclaration","scope":1394,"src":"4127:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"4127:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1309,"initialValue":{"arguments":[{"id":1306,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"4150:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1307,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"4157:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1305,"name":"flashFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"4141:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4141:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4127:37:12"},{"expression":{"arguments":[{"arguments":[{"id":1313,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"4188:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$210","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$210","typeString":"contract IERC3156FlashBorrower"}],"id":1312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4180:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"4180:7:12","typeDescriptions":{}}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4180:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"4199:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1310,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"4174:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4174:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1317,"nodeType":"ExpressionStatement","src":"4174:32:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1321,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4258:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4258:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1323,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"4270:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1324,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"4277:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1325,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"4285:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1326,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"4290:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1319,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"4237:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$210","typeString":"contract IERC3156FlashBorrower"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4246:11:12","memberName":"onFlashLoan","nodeType":"MemberAccess","referencedDeclaration":209,"src":"4237:20:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes32)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4237:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1328,"name":"_RETURN_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"4299:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4237:75:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230466c6173684d696e743a20696e76616c69642072657475726e2076616c7565","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4326:38:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb","typeString":"literal_string \"ERC20FlashMint: invalid return value\""},"value":"ERC20FlashMint: invalid return value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb","typeString":"literal_string \"ERC20FlashMint: invalid return value\""}],"id":1318,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4216:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4216:158:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1332,"nodeType":"ExpressionStatement","src":"4216:158:12"},{"assignments":[1334],"declarations":[{"constant":false,"id":1334,"mutability":"mutable","name":"flashFeeReceiver","nameLocation":"4392:16:12","nodeType":"VariableDeclaration","scope":1394,"src":"4384:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"4384:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1337,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1335,"name":"_flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"4411:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4411:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4384:46:12"},{"expression":{"arguments":[{"arguments":[{"id":1341,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"4464:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$210","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$210","typeString":"contract IERC3156FlashBorrower"}],"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4456:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"4456:7:12","typeDescriptions":{}}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4456:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1345,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4483:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMint_$1396","typeString":"contract ERC20FlashMint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMint_$1396","typeString":"contract ERC20FlashMint"}],"id":1344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4475:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"4475:7:12","typeDescriptions":{}}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4475:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1347,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"4490:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1348,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"4499:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4490:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1338,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"4440:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4440:63:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1351,"nodeType":"ExpressionStatement","src":"4440:63:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1352,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"4517:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4524:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4517:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1355,"name":"flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"4529:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4557:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4549:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"4549:7:12","typeDescriptions":{}}},"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4549:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4529:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4517:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1390,"nodeType":"Block","src":"4630:122:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1376,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"4658:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$210","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$210","typeString":"contract IERC3156FlashBorrower"}],"id":1375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4650:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:12","typeDescriptions":{}}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4650:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1378,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"4669:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1373,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"4644:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4644:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1380,"nodeType":"ExpressionStatement","src":"4644:32:12"},{"expression":{"arguments":[{"arguments":[{"id":1384,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"4708:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$210","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$210","typeString":"contract IERC3156FlashBorrower"}],"id":1383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4700:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"4700:7:12","typeDescriptions":{}}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4700:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1386,"name":"flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"4719:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1387,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"4737:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1381,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"4690:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4690:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1389,"nodeType":"ExpressionStatement","src":"4690:51:12"}]},"id":1391,"nodeType":"IfStatement","src":"4513:239:12","trueBody":{"id":1372,"nodeType":"Block","src":"4561:63:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1365,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"4589:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$210","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$210","typeString":"contract IERC3156FlashBorrower"}],"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4581:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"4581:7:12","typeDescriptions":{}}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1367,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"4600:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1368,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"4609:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4600:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1362,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"4575:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4575:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"ExpressionStatement","src":"4575:38:12"}]}},{"expression":{"hexValue":"74727565","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4768:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1293,"id":1393,"nodeType":"Return","src":"4761:11:12"}]},"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"2791:762:12","text":" @dev Performs a flash loan. New tokens are minted and sent to the\n `receiver`, who is required to implement the {IERC3156FlashBorrower}\n interface. By the end of the flash loan, the receiver is expected to own\n amount + fee tokens and have them approved back to the token contract itself so\n they can be burned.\n @param receiver The receiver of the flash loan. Should implement the\n {IERC3156FlashBorrower-onFlashLoan} interface.\n @param token The token to be flash loaned. Only `address(this)` is\n supported.\n @param amount The amount of tokens to be loaned.\n @param data An arbitrary datafield that is passed to the receiver.\n @return `true` if the flash loan was successful."},"functionSelector":"5cffe9de","id":1395,"implemented":true,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"3851:9:12","nodeType":"FunctionDefinition","overrides":{"id":1290,"nodeType":"OverrideSpecifier","overrides":[],"src":"3998:8:12"},"parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"receiver","nameLocation":"3892:8:12","nodeType":"VariableDeclaration","scope":1395,"src":"3870:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$210","typeString":"contract IERC3156FlashBorrower"},"typeName":{"id":1281,"nodeType":"UserDefinedTypeName","pathNode":{"id":1280,"name":"IERC3156FlashBorrower","nameLocations":["3870:21:12"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"3870:21:12"},"referencedDeclaration":210,"src":"3870:21:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$210","typeString":"contract IERC3156FlashBorrower"}},"visibility":"internal"},{"constant":false,"id":1284,"mutability":"mutable","name":"token","nameLocation":"3918:5:12","nodeType":"VariableDeclaration","scope":1395,"src":"3910:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1283,"name":"address","nodeType":"ElementaryTypeName","src":"3910:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1286,"mutability":"mutable","name":"amount","nameLocation":"3941:6:12","nodeType":"VariableDeclaration","scope":1395,"src":"3933:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"3933:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"data","nameLocation":"3972:4:12","nodeType":"VariableDeclaration","scope":1395,"src":"3957:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1287,"name":"bytes","nodeType":"ElementaryTypeName","src":"3957:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3860:122:12"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"4016:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1291,"name":"bool","nodeType":"ElementaryTypeName","src":"4016:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4015:6:12"},"scope":1396,"src":"3842:937:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1397,"src":"621:4160:12","usedErrors":[]}],"src":"125:4657:12"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"id":13,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"Context":[2393],"Counters":[2467],"ECDSA":[3388],"EIP712":[3592],"ERC20":[1057],"ERC20Permit":[1568],"IERC20":[1135],"IERC20Metadata":[2327],"IERC20Permit":[2363],"IERC5267":[273],"Math":[4458],"ShortString":[2472],"ShortStrings":[2683],"SignedMath":[6416],"StorageSlot":[2793],"Strings":[3022]},"id":1569,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1398,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"122:23:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1569,"sourceUnit":2364,"src":"147:28:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1569,"sourceUnit":1058,"src":"176:22:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1401,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1569,"sourceUnit":3389,"src":"199:47:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1402,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1569,"sourceUnit":3593,"src":"247:48:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":1403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1569,"sourceUnit":2468,"src":"296:37:13","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1405,"name":"ERC20","nameLocations":["886:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":1057,"src":"886:5:13"},"id":1406,"nodeType":"InheritanceSpecifier","src":"886:5:13"},{"baseName":{"id":1407,"name":"IERC20Permit","nameLocations":["893:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":2363,"src":"893:12:13"},"id":1408,"nodeType":"InheritanceSpecifier","src":"893:12:13"},{"baseName":{"id":1409,"name":"EIP712","nameLocations":["907:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3592,"src":"907:6:13"},"id":1410,"nodeType":"InheritanceSpecifier","src":"907:6:13"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1404,"nodeType":"StructuredDocumentation","src":"335:517:13","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":false,"id":1568,"linearizedBaseContracts":[1568,3592,273,2363,1057,2327,1135,2393],"name":"ERC20Permit","nameLocation":"871:11:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1414,"libraryName":{"id":1411,"name":"Counters","nameLocations":["926:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":2467,"src":"926:8:13"},"nodeType":"UsingForDirective","src":"920:36:13","typeName":{"id":1413,"nodeType":"UserDefinedTypeName","pathNode":{"id":1412,"name":"Counters.Counter","nameLocations":["939:8:13","948:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"939:16:13"},"referencedDeclaration":2399,"src":"939:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":1419,"mutability":"mutable","name":"_nonces","nameLocation":"1007:7:13","nodeType":"VariableDeclaration","scope":1568,"src":"962:52:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2399_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":1418,"keyType":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"962:36:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2399_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueType":{"id":1417,"nodeType":"UserDefinedTypeName","pathNode":{"id":1416,"name":"Counters.Counter","nameLocations":["981:8:13","990:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"981:16:13"},"referencedDeclaration":2399,"src":"981:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"constant":true,"id":1424,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1098:16:13","nodeType":"VariableDeclaration","scope":1568,"src":"1073:147:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1073:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1135:84:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1421,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1125:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:95:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"1226:254:13","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":1427,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1553:32:13","nodeType":"VariableDeclaration","scope":1568,"src":"1537:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1537:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":1437,"nodeType":"Block","src":"1867:2:13","statements":[]},"documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"1592:220:13","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1438,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1433,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"1856:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1862:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1435,"kind":"baseConstructorSpecifier","modifierName":{"id":1432,"name":"EIP712","nameLocations":["1849:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3592,"src":"1849:6:13"},"nodeType":"ModifierInvocation","src":"1849:17:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"name","nameLocation":"1843:4:13","nodeType":"VariableDeclaration","scope":1438,"src":"1829:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1429,"name":"string","nodeType":"ElementaryTypeName","src":"1829:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1828:20:13"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[],"src":"1867:0:13"},"scope":1568,"src":"1817:52:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2348],"body":{"id":1510,"nodeType":"Block","src":"2121:428:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1458,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2139:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2145:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"2139:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1460,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2158:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2139:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2168:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":1457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2131:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2131:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1464,"nodeType":"ExpressionStatement","src":"2131:69:13"},{"assignments":[1466],"declarations":[{"constant":false,"id":1466,"mutability":"mutable","name":"structHash","nameLocation":"2219:10:13","nodeType":"VariableDeclaration","scope":1510,"src":"2211:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2211:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1480,"initialValue":{"arguments":[{"arguments":[{"id":1470,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"2253:16:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1471,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"2271:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1472,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"2278:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"2287:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1475,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"2304:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1474,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"2294:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1477,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2312:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1468,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2242:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2246:6:13","memberName":"encode","nodeType":"MemberAccess","src":"2242:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2242:79:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1467,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2232:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2232:90:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2211:111:13"},{"assignments":[1482],"declarations":[{"constant":false,"id":1482,"mutability":"mutable","name":"hash","nameLocation":"2341:4:13","nodeType":"VariableDeclaration","scope":1510,"src":"2333:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2333:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1486,"initialValue":{"arguments":[{"id":1484,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"2365:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1483,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"2348:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2348:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2333:43:13"},{"assignments":[1488],"declarations":[{"constant":false,"id":1488,"mutability":"mutable","name":"signer","nameLocation":"2395:6:13","nodeType":"VariableDeclaration","scope":1510,"src":"2387:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1496,"initialValue":{"arguments":[{"id":1491,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"2418:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1492,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"2424:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1493,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"2427:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1494,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"2430:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1489,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"2404:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3388_$","typeString":"type(library ECDSA)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2410:7:13","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3323,"src":"2404:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2404:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2387:45:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1498,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2450:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1499,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"2460:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2450:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2467:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":1497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2442:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2442:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1503,"nodeType":"ExpressionStatement","src":"2442:58:13"},{"expression":{"arguments":[{"id":1505,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"2520:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1506,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"2527:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"2536:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1504,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"2511:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2511:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1509,"nodeType":"ExpressionStatement","src":"2511:31:13"}]},"documentation":{"id":1439,"nodeType":"StructuredDocumentation","src":"1875:43:13","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1511,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1932:6:13","nodeType":"FunctionDefinition","overrides":{"id":1455,"nodeType":"OverrideSpecifier","overrides":[],"src":"2112:8:13"},"parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"owner","nameLocation":"1956:5:13","nodeType":"VariableDeclaration","scope":1511,"src":"1948:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"spender","nameLocation":"1979:7:13","nodeType":"VariableDeclaration","scope":1511,"src":"1971:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"1971:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"value","nameLocation":"2004:5:13","nodeType":"VariableDeclaration","scope":1511,"src":"1996:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1996:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1447,"mutability":"mutable","name":"deadline","nameLocation":"2027:8:13","nodeType":"VariableDeclaration","scope":1511,"src":"2019:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2019:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1449,"mutability":"mutable","name":"v","nameLocation":"2051:1:13","nodeType":"VariableDeclaration","scope":1511,"src":"2045:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1448,"name":"uint8","nodeType":"ElementaryTypeName","src":"2045:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"r","nameLocation":"2070:1:13","nodeType":"VariableDeclaration","scope":1511,"src":"2062:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2062:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"s","nameLocation":"2089:1:13","nodeType":"VariableDeclaration","scope":1511,"src":"2081:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2081:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1938:158:13"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[],"src":"2121:0:13"},"scope":1568,"src":"1923:626:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2356],"body":{"id":1526,"nodeType":"Block","src":"2681:48:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1520,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"2698:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2399_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1522,"indexExpression":{"id":1521,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"2706:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2698:14:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage","typeString":"struct Counters.Counter storage ref"}},"id":1523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2713:7:13","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"2698:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2399_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2399_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2698:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1519,"id":1525,"nodeType":"Return","src":"2691:31:13"}]},"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"2555:43:13","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1527,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2612:6:13","nodeType":"FunctionDefinition","overrides":{"id":1516,"nodeType":"OverrideSpecifier","overrides":[],"src":"2654:8:13"},"parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"owner","nameLocation":"2627:5:13","nodeType":"VariableDeclaration","scope":1527,"src":"2619:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"2619:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2618:15:13"},"returnParameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1527,"src":"2672:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2672:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2671:9:13"},"scope":1568,"src":"2603:126:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2362],"body":{"id":1537,"nodeType":"Block","src":"2905:44:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1534,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"2922:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1533,"id":1536,"nodeType":"Return","src":"2915:27:13"}]},"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"2735:43:13","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1538,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2845:16:13","nodeType":"FunctionDefinition","overrides":{"id":1530,"nodeType":"OverrideSpecifier","overrides":[],"src":"2878:8:13"},"parameters":{"id":1529,"nodeType":"ParameterList","parameters":[],"src":"2861:2:13"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1538,"src":"2896:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2896:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2895:9:13"},"scope":1568,"src":"2836:113:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1566,"nodeType":"Block","src":"3157:126:13","statements":[{"assignments":[1550],"declarations":[{"constant":false,"id":1550,"mutability":"mutable","name":"nonce","nameLocation":"3192:5:13","nodeType":"VariableDeclaration","scope":1566,"src":"3167:30:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1549,"nodeType":"UserDefinedTypeName","pathNode":{"id":1548,"name":"Counters.Counter","nameLocations":["3167:8:13","3176:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"3167:16:13"},"referencedDeclaration":2399,"src":"3167:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":1554,"initialValue":{"baseExpression":{"id":1551,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"3200:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2399_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1553,"indexExpression":{"id":1552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"3208:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3200:14:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3167:47:13"},{"expression":{"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1555,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"3224:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1556,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"3234:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3240:7:13","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"3234:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2399_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2399_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3234:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3224:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1560,"nodeType":"ExpressionStatement","src":"3224:25:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1561,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"3259:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3265:9:13","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"3259:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2399_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2399_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3259:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1565,"nodeType":"ExpressionStatement","src":"3259:17:13"}]},"documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"2955:120:13","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":1567,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3089:9:13","nodeType":"FunctionDefinition","parameters":{"id":1542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"owner","nameLocation":"3107:5:13","nodeType":"VariableDeclaration","scope":1567,"src":"3099:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"3099:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3098:15:13"},"returnParameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"current","nameLocation":"3148:7:13","nodeType":"VariableDeclaration","scope":1567,"src":"3140:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"3140:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3139:17:13"},"scope":1568,"src":"3080:203:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1569,"src":"853:2432:13","usedErrors":[2480,2482]}],"src":"122:3164:13"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"id":14,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Context":[2393],"Counters":[2467],"ECDSA":[3388],"EIP712":[3592],"ERC20":[1057],"ERC20Permit":[1568],"ERC20Votes":[2302],"IERC20":[1135],"IERC20Metadata":[2327],"IERC20Permit":[2363],"IERC5267":[273],"IERC5805":[282],"IERC6372":[297],"IVotes":[190],"Math":[4458],"SafeCast":[5999],"ShortString":[2472],"ShortStrings":[2683],"SignedMath":[6416],"StorageSlot":[2793],"Strings":[3022]},"id":2303,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1570,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"./ERC20Permit.sol","id":1571,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2303,"sourceUnit":1569,"src":"146:27:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../../interfaces/IERC5805.sol","id":1572,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2303,"sourceUnit":283,"src":"174:42:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../../../utils/math/Math.sol","id":1573,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2303,"sourceUnit":4459,"src":"217:38:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../../utils/math/SafeCast.sol","id":1574,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2303,"sourceUnit":6000,"src":"256:42:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1575,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2303,"sourceUnit":3389,"src":"299:47:14","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1577,"name":"ERC20Permit","nameLocations":["1275:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1568,"src":"1275:11:14"},"id":1578,"nodeType":"InheritanceSpecifier","src":"1275:11:14"},{"baseName":{"id":1579,"name":"IERC5805","nameLocations":["1288:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":282,"src":"1288:8:14"},"id":1580,"nodeType":"InheritanceSpecifier","src":"1288:8:14"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"348:894:14","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":false,"id":2302,"linearizedBaseContracts":[2302,282,190,297,1568,3592,273,2363,1057,2327,1135,2393],"name":"ERC20Votes","nameLocation":"1261:10:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Votes.Checkpoint","id":1585,"members":[{"constant":false,"id":1582,"mutability":"mutable","name":"fromBlock","nameLocation":"1338:9:14","nodeType":"VariableDeclaration","scope":1585,"src":"1331:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1581,"name":"uint32","nodeType":"ElementaryTypeName","src":"1331:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"votes","nameLocation":"1365:5:14","nodeType":"VariableDeclaration","scope":1585,"src":"1357:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1583,"name":"uint224","nodeType":"ElementaryTypeName","src":"1357:7:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1310:10:14","nodeType":"StructDefinition","scope":2302,"src":"1303:74:14","visibility":"public"},{"constant":true,"id":1590,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1408:20:14","nodeType":"VariableDeclaration","scope":2302,"src":"1383:127:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1383:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1449:60:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":1587,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1439:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1439:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1594,"mutability":"mutable","name":"_delegates","nameLocation":"1553:10:14","nodeType":"VariableDeclaration","scope":2302,"src":"1517:46:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1593,"keyType":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"1525:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1517:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1600,"mutability":"mutable","name":"_checkpoints","nameLocation":"1610:12:14","nodeType":"VariableDeclaration","scope":2302,"src":"1569:53:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"typeName":{"id":1599,"keyType":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"1577:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1569:32:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"valueType":{"baseType":{"id":1597,"nodeType":"UserDefinedTypeName","pathNode":{"id":1596,"name":"Checkpoint","nameLocations":["1588:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1585,"src":"1588:10:14"},"referencedDeclaration":1585,"src":"1588:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1598,"nodeType":"ArrayTypeName","src":"1588:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}}},"visibility":"private"},{"constant":false,"id":1604,"mutability":"mutable","name":"_totalSupplyCheckpoints","nameLocation":"1649:23:14","nodeType":"VariableDeclaration","scope":2302,"src":"1628:44:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1602,"nodeType":"UserDefinedTypeName","pathNode":{"id":1601,"name":"Checkpoint","nameLocations":["1628:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1585,"src":"1628:10:14"},"referencedDeclaration":1585,"src":"1628:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1603,"nodeType":"ArrayTypeName","src":"1628:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"private"},{"baseFunctions":[290],"body":{"id":1617,"nodeType":"Block","src":"1880:55:14","statements":[{"expression":{"arguments":[{"expression":{"id":1613,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1915:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1921:6:14","memberName":"number","nodeType":"MemberAccess","src":"1915:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1611,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"1897:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5999_$","typeString":"type(library SafeCast)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1906:8:14","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":5111,"src":"1897:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1897:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":1610,"id":1616,"nodeType":"Return","src":"1890:38:14"}]},"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"1679:133:14","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":1618,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"1826:5:14","nodeType":"FunctionDefinition","overrides":{"id":1607,"nodeType":"OverrideSpecifier","overrides":[],"src":"1854:8:14"},"parameters":{"id":1606,"nodeType":"ParameterList","parameters":[],"src":"1831:2:14"},"returnParameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1618,"src":"1872:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1608,"name":"uint48","nodeType":"ElementaryTypeName","src":"1872:6:14","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"1871:8:14"},"scope":2302,"src":"1817:118:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[296],"body":{"id":1636,"nodeType":"Block","src":"2122:179:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1626,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"2189:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2189:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1628,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2200:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:6:14","memberName":"number","nodeType":"MemberAccess","src":"2200:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a2062726f6b656e20636c6f636b206d6f6465","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2214:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","typeString":"literal_string \"ERC20Votes: broken clock mode\""},"value":"ERC20Votes: broken clock mode"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","typeString":"literal_string \"ERC20Votes: broken clock mode\""}],"id":1625,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2181:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:65:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1633,"nodeType":"ExpressionStatement","src":"2181:65:14"},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2263:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":1624,"id":1635,"nodeType":"Return","src":"2256:38:14"}]},"documentation":{"id":1619,"nodeType":"StructuredDocumentation","src":"1941:48:14","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"2056:10:14","nodeType":"FunctionDefinition","overrides":{"id":1621,"nodeType":"OverrideSpecifier","overrides":[],"src":"2089:8:14"},"parameters":{"id":1620,"nodeType":"ParameterList","parameters":[],"src":"2066:2:14"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"2107:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1622,"name":"string","nodeType":"ElementaryTypeName","src":"2107:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2106:15:14"},"scope":2302,"src":"2047:254:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1654,"nodeType":"Block","src":"2476:50:14","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1648,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"2493:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1650,"indexExpression":{"id":1649,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"2506:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2493:21:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1652,"indexExpression":{"id":1651,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"2515:3:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2493:26:14","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"functionReturnParameters":1647,"id":1653,"nodeType":"Return","src":"2486:33:14"}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"2307:66:14","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":1655,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"2387:11:14","nodeType":"FunctionDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"account","nameLocation":"2407:7:14","nodeType":"VariableDeclaration","scope":1655,"src":"2399:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1642,"mutability":"mutable","name":"pos","nameLocation":"2423:3:14","nodeType":"VariableDeclaration","scope":1655,"src":"2416:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1641,"name":"uint32","nodeType":"ElementaryTypeName","src":"2416:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2398:29:14"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1655,"src":"2457:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1645,"nodeType":"UserDefinedTypeName","pathNode":{"id":1644,"name":"Checkpoint","nameLocations":["2457:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1585,"src":"2457:10:14"},"referencedDeclaration":1585,"src":"2457:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"2456:19:14"},"scope":2302,"src":"2378:148:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1671,"nodeType":"Block","src":"2679:71:14","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1665,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"2714:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1667,"indexExpression":{"id":1666,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"2727:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2714:21:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2736:6:14","memberName":"length","nodeType":"MemberAccess","src":"2714:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1663,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"2696:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5999_$","typeString":"type(library SafeCast)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2705:8:14","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5161,"src":"2696:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2696:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1662,"id":1670,"nodeType":"Return","src":"2689:54:14"}]},"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"2532:64:14","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":1672,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"2610:14:14","nodeType":"FunctionDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"account","nameLocation":"2633:7:14","nodeType":"VariableDeclaration","scope":1672,"src":"2625:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"2625:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2624:17:14"},"returnParameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1672,"src":"2671:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1660,"name":"uint32","nodeType":"ElementaryTypeName","src":"2671:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2670:8:14"},"scope":2302,"src":"2601:149:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[167],"body":{"id":1685,"nodeType":"Block","src":"2921:43:14","statements":[{"expression":{"baseExpression":{"id":1681,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"2938:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1683,"indexExpression":{"id":1682,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"2949:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2938:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1680,"id":1684,"nodeType":"Return","src":"2931:26:14"}]},"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"2756:77:14","text":" @dev Get the address `account` is currently delegating to."},"functionSelector":"587cde1e","id":1686,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"2847:9:14","nodeType":"FunctionDefinition","overrides":{"id":1677,"nodeType":"OverrideSpecifier","overrides":[],"src":"2894:8:14"},"parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"account","nameLocation":"2865:7:14","nodeType":"VariableDeclaration","scope":1686,"src":"2857:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"2857:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2856:17:14"},"returnParameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1686,"src":"2912:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"2912:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:9:14"},"scope":2302,"src":"2838:126:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[141],"body":{"id":1717,"nodeType":"Block","src":"3125:161:14","statements":[{"assignments":[1696],"declarations":[{"constant":false,"id":1696,"mutability":"mutable","name":"pos","nameLocation":"3143:3:14","nodeType":"VariableDeclaration","scope":1717,"src":"3135:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1701,"initialValue":{"expression":{"baseExpression":{"id":1697,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"3149:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1699,"indexExpression":{"id":1698,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"3162:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3149:21:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3171:6:14","memberName":"length","nodeType":"MemberAccess","src":"3149:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3135:42:14"},{"id":1716,"nodeType":"UncheckedBlock","src":"3187:93:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1702,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"3218:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3225:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3218:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1706,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"3233:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1708,"indexExpression":{"id":1707,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"3246:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3233:21:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1712,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1709,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"3255:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3261:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3255:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3233:30:14","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3264:5:14","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1584,"src":"3233:36:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3218:51:14","trueExpression":{"hexValue":"30","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3229:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1694,"id":1715,"nodeType":"Return","src":"3211:58:14"}]}]},"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"2970:68:14","text":" @dev Gets the current votes balance for `account`"},"functionSelector":"9ab24eb0","id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3052:8:14","nodeType":"FunctionDefinition","overrides":{"id":1691,"nodeType":"OverrideSpecifier","overrides":[],"src":"3098:8:14"},"parameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"account","nameLocation":"3069:7:14","nodeType":"VariableDeclaration","scope":1718,"src":"3061:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"3061:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3060:17:14"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1718,"src":"3116:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"3116:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3115:9:14"},"scope":2302,"src":"3043:243:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[151],"body":{"id":1744,"nodeType":"Block","src":"3571:143:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1730,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"3589:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1731,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"3601:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3589:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3610:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""},"value":"ERC20Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""}],"id":1729,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3581:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3581:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1736,"nodeType":"ExpressionStatement","src":"3581:57:14"},{"expression":{"arguments":[{"baseExpression":{"id":1738,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"3674:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1740,"indexExpression":{"id":1739,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"3687:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3674:21:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1741,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"3697:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1737,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"3655:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3655:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1728,"id":1743,"nodeType":"Return","src":"3648:59:14"}]},"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"3292:169:14","text":" @dev Retrieve the number of votes for `account` at the end of `timepoint`.\n Requirements:\n - `timepoint` must be in the past"},"functionSelector":"3a46b1a8","id":1745,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3475:12:14","nodeType":"FunctionDefinition","overrides":{"id":1725,"nodeType":"OverrideSpecifier","overrides":[],"src":"3544:8:14"},"parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"account","nameLocation":"3496:7:14","nodeType":"VariableDeclaration","scope":1745,"src":"3488:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"timepoint","nameLocation":"3513:9:14","nodeType":"VariableDeclaration","scope":1745,"src":"3505:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"3505:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3487:36:14"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1745,"src":"3562:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"3562:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3561:9:14"},"scope":2302,"src":"3466:248:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[159],"body":{"id":1767,"nodeType":"Block","src":"4070:145:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1755,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"4088:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1756,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"4100:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4100:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4088:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4109:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""},"value":"ERC20Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""}],"id":1754,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4080:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4080:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1761,"nodeType":"ExpressionStatement","src":"4080:57:14"},{"expression":{"arguments":[{"id":1763,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"4173:23:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1764,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"4198:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1762,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"4154:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1753,"id":1766,"nodeType":"Return","src":"4147:61:14"}]},"documentation":{"id":1746,"nodeType":"StructuredDocumentation","src":"3720:251:14","text":" @dev Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances.\n It is NOT the sum of all the delegated votes!\n Requirements:\n - `timepoint` must be in the past"},"functionSelector":"8e539e8c","id":1768,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"3985:18:14","nodeType":"FunctionDefinition","overrides":{"id":1750,"nodeType":"OverrideSpecifier","overrides":[],"src":"4043:8:14"},"parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"timepoint","nameLocation":"4012:9:14","nodeType":"VariableDeclaration","scope":1768,"src":"4004:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"4004:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4003:19:14"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1768,"src":"4061:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1751,"name":"uint256","nodeType":"ElementaryTypeName","src":"4061:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4060:9:14"},"scope":2302,"src":"3976:239:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1874,"nodeType":"Block","src":"4405:1789:14","statements":[{"assignments":[1781],"declarations":[{"constant":false,"id":1781,"mutability":"mutable","name":"length","nameLocation":"5501:6:14","nodeType":"VariableDeclaration","scope":1874,"src":"5493:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1784,"initialValue":{"expression":{"id":1782,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"5510:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5516:6:14","memberName":"length","nodeType":"MemberAccess","src":"5510:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5493:29:14"},{"assignments":[1786],"declarations":[{"constant":false,"id":1786,"mutability":"mutable","name":"low","nameLocation":"5541:3:14","nodeType":"VariableDeclaration","scope":1874,"src":"5533:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"5533:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1788,"initialValue":{"hexValue":"30","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5547:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5533:15:14"},{"assignments":[1790],"declarations":[{"constant":false,"id":1790,"mutability":"mutable","name":"high","nameLocation":"5566:4:14","nodeType":"VariableDeclaration","scope":1874,"src":"5558:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"5558:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1792,"initialValue":{"id":1791,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"5573:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5558:21:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1793,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"5594:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5603:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"5594:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1826,"nodeType":"IfStatement","src":"5590:242:14","trueBody":{"id":1825,"nodeType":"Block","src":"5606:226:14","statements":[{"assignments":[1797],"declarations":[{"constant":false,"id":1797,"mutability":"mutable","name":"mid","nameLocation":"5628:3:14","nodeType":"VariableDeclaration","scope":1825,"src":"5620:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"5620:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1804,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1798,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"5634:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1801,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"5653:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1799,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"5643:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4458_$","typeString":"type(library Math)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5648:4:14","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":3962,"src":"5643:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5634:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5620:40:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1806,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"5692:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1807,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"5699:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1805,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"5678:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1585_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5678:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5704:9:14","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1582,"src":"5678:35:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1810,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"5716:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5678:47:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1823,"nodeType":"Block","src":"5776:46:14","statements":[{"expression":{"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1817,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"5794:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1818,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"5800:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5806:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5800:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5794:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1822,"nodeType":"ExpressionStatement","src":"5794:13:14"}]},"id":1824,"nodeType":"IfStatement","src":"5674:148:14","trueBody":{"id":1816,"nodeType":"Block","src":"5727:43:14","statements":[{"expression":{"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1812,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"5745:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1813,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"5752:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5745:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1815,"nodeType":"ExpressionStatement","src":"5745:10:14"}]}}]}},{"body":{"id":1858,"nodeType":"Block","src":"5861:223:14","statements":[{"assignments":[1831],"declarations":[{"constant":false,"id":1831,"mutability":"mutable","name":"mid","nameLocation":"5883:3:14","nodeType":"VariableDeclaration","scope":1858,"src":"5875:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"5875:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1837,"initialValue":{"arguments":[{"id":1834,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"5902:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1835,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"5907:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1832,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"5889:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4458_$","typeString":"type(library Math)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5894:7:14","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3658,"src":"5889:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5875:37:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1839,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"5944:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1840,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"5951:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1838,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"5930:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1585_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5930:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5956:9:14","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1582,"src":"5930:35:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1843,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"5968:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5930:47:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1856,"nodeType":"Block","src":"6028:46:14","statements":[{"expression":{"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1850,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"6046:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1851,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"6052:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6058:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6052:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6046:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1855,"nodeType":"ExpressionStatement","src":"6046:13:14"}]},"id":1857,"nodeType":"IfStatement","src":"5926:148:14","trueBody":{"id":1849,"nodeType":"Block","src":"5979:43:14","statements":[{"expression":{"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1845,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"5997:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1846,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"6004:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5997:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1848,"nodeType":"ExpressionStatement","src":"5997:10:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1827,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"5849:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1828,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"5855:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5849:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1859,"nodeType":"WhileStatement","src":"5842:242:14"},{"id":1873,"nodeType":"UncheckedBlock","src":"6094:94:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1860,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"6125:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6133:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6125:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"id":1865,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"6155:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"6162:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6169:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6162:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1864,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"6141:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1585_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6141:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6172:5:14","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1584,"src":"6141:36:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6125:52:14","trueExpression":{"hexValue":"30","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6137:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1779,"id":1872,"nodeType":"Return","src":"6118:59:14"}]}]},"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"4221:73:14","text":" @dev Lookup a value in a list of (sorted) checkpoints."},"id":1875,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointsLookup","nameLocation":"4308:18:14","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"ckpts","nameLocation":"4348:5:14","nodeType":"VariableDeclaration","scope":1875,"src":"4327:26:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1771,"nodeType":"UserDefinedTypeName","pathNode":{"id":1770,"name":"Checkpoint","nameLocations":["4327:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1585,"src":"4327:10:14"},"referencedDeclaration":1585,"src":"4327:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1772,"nodeType":"ArrayTypeName","src":"4327:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"timepoint","nameLocation":"4363:9:14","nodeType":"VariableDeclaration","scope":1875,"src":"4355:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"4355:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4326:47:14"},"returnParameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1875,"src":"4396:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"4396:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4395:9:14"},"scope":2302,"src":"4299:1895:14","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[173],"body":{"id":1888,"nodeType":"Block","src":"6336:51:14","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1883,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"6356:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6356:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1885,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"6370:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1882,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"6346:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1887,"nodeType":"ExpressionStatement","src":"6346:34:14"}]},"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"6200:70:14","text":" @dev Delegate votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":1889,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"6284:8:14","nodeType":"FunctionDefinition","overrides":{"id":1880,"nodeType":"OverrideSpecifier","overrides":[],"src":"6327:8:14"},"parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"delegatee","nameLocation":"6301:9:14","nodeType":"VariableDeclaration","scope":1889,"src":"6293:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"6293:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6292:19:14"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[],"src":"6336:0:14"},"scope":2302,"src":"6275:112:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[189],"body":{"id":1948,"nodeType":"Block","src":"6646:392:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1907,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6664:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6670:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"6664:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1909,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"6683:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6664:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6691:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""},"value":"ERC20Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""}],"id":1906,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6656:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1913,"nodeType":"ExpressionStatement","src":"6656:67:14"},{"assignments":[1915],"declarations":[{"constant":false,"id":1915,"mutability":"mutable","name":"signer","nameLocation":"6741:6:14","nodeType":"VariableDeclaration","scope":1948,"src":"6733:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"6733:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1933,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1922,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"6815:20:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1923,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"6837:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1924,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"6848:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1925,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"6855:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1920,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6804:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6808:6:14","memberName":"encode","nodeType":"MemberAccess","src":"6804:10:14","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6804:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1919,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6794:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6794:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1918,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"6777:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6777:87:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1929,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"6878:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1930,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"6893:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1931,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"6908:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1916,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"6750:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3388_$","typeString":"type(library ECDSA)"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6756:7:14","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3323,"src":"6750:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6750:169:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6733:186:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1935,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"6937:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1937,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"6956:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1936,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"6946:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6946:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6937:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6965:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""},"value":"ERC20Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""}],"id":1934,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6929:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:64:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1942,"nodeType":"ExpressionStatement","src":"6929:64:14"},{"expression":{"arguments":[{"id":1944,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"7013:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1945,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"7021:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1943,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"7003:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7003:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1947,"nodeType":"ExpressionStatement","src":"7003:28:14"}]},"documentation":{"id":1890,"nodeType":"StructuredDocumentation","src":"6393:66:14","text":" @dev Delegates votes from signer to `delegatee`"},"functionSelector":"c3cda520","id":1949,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"6473:13:14","nodeType":"FunctionDefinition","overrides":{"id":1904,"nodeType":"OverrideSpecifier","overrides":[],"src":"6637:8:14"},"parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"delegatee","nameLocation":"6504:9:14","nodeType":"VariableDeclaration","scope":1949,"src":"6496:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1891,"name":"address","nodeType":"ElementaryTypeName","src":"6496:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1894,"mutability":"mutable","name":"nonce","nameLocation":"6531:5:14","nodeType":"VariableDeclaration","scope":1949,"src":"6523:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"6523:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"expiry","nameLocation":"6554:6:14","nodeType":"VariableDeclaration","scope":1949,"src":"6546:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"6546:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"v","nameLocation":"6576:1:14","nodeType":"VariableDeclaration","scope":1949,"src":"6570:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1897,"name":"uint8","nodeType":"ElementaryTypeName","src":"6570:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"r","nameLocation":"6595:1:14","nodeType":"VariableDeclaration","scope":1949,"src":"6587:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6587:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"s","nameLocation":"6614:1:14","nodeType":"VariableDeclaration","scope":1949,"src":"6606:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6606:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6486:135:14"},"returnParameters":{"id":1905,"nodeType":"ParameterList","parameters":[],"src":"6646:0:14"},"scope":2302,"src":"6464:574:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1961,"nodeType":"Block","src":"7202:41:14","statements":[{"expression":{"expression":{"arguments":[{"id":1957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7224:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1956,"name":"uint224","nodeType":"ElementaryTypeName","src":"7224:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1955,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7219:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7219:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7233:3:14","memberName":"max","nodeType":"MemberAccess","src":"7219:17:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1954,"id":1960,"nodeType":"Return","src":"7212:24:14"}]},"documentation":{"id":1950,"nodeType":"StructuredDocumentation","src":"7044:91:14","text":" @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1)."},"id":1962,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"7149:10:14","nodeType":"FunctionDefinition","parameters":{"id":1951,"nodeType":"ParameterList","parameters":[],"src":"7159:2:14"},"returnParameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1962,"src":"7193:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1952,"name":"uint224","nodeType":"ElementaryTypeName","src":"7193:7:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"7192:9:14"},"scope":2302,"src":"7140:103:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[874],"body":{"id":1993,"nodeType":"Block","src":"7406:211:14","statements":[{"expression":{"arguments":[{"id":1974,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"7428:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1975,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"7437:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1971,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7416:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$2302_$","typeString":"type(contract super ERC20Votes)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7422:5:14","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":874,"src":"7416:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7416:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1977,"nodeType":"ExpressionStatement","src":"7416:28:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1979,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"7462:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7462:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1981,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"7479:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint224_$","typeString":"function () view returns (uint224)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7479:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"7462:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7493:50:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""},"value":"ERC20Votes: total supply risks overflowing votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""}],"id":1978,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7454:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7454:90:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1986,"nodeType":"ExpressionStatement","src":"7454:90:14"},{"expression":{"arguments":[{"id":1988,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"7572:23:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1989,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"7597:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1990,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"7603:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1987,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"7555:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7555:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1992,"nodeType":"ExpressionStatement","src":"7555:55:14"}]},"documentation":{"id":1963,"nodeType":"StructuredDocumentation","src":"7249:78:14","text":" @dev Snapshots the totalSupply after it has been increased."},"id":1994,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7341:5:14","nodeType":"FunctionDefinition","overrides":{"id":1969,"nodeType":"OverrideSpecifier","overrides":[],"src":"7397:8:14"},"parameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"account","nameLocation":"7355:7:14","nodeType":"VariableDeclaration","scope":1994,"src":"7347:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"7347:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1967,"mutability":"mutable","name":"amount","nameLocation":"7372:6:14","nodeType":"VariableDeclaration","scope":1994,"src":"7364:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"7364:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7346:33:14"},"returnParameters":{"id":1970,"nodeType":"ParameterList","parameters":[],"src":"7406:0:14"},"scope":2302,"src":"7332:285:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[946],"body":{"id":2016,"nodeType":"Block","src":"7780:116:14","statements":[{"expression":{"arguments":[{"id":2006,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"7802:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2007,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"7811:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2003,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7790:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$2302_$","typeString":"type(contract super ERC20Votes)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7796:5:14","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":946,"src":"7790:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2009,"nodeType":"ExpressionStatement","src":"7790:28:14"},{"expression":{"arguments":[{"id":2011,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"7846:23:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":2012,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"7871:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2013,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"7882:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2010,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"7829:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7829:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":2015,"nodeType":"ExpressionStatement","src":"7829:60:14"}]},"documentation":{"id":1995,"nodeType":"StructuredDocumentation","src":"7623:78:14","text":" @dev Snapshots the totalSupply after it has been decreased."},"id":2017,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7715:5:14","nodeType":"FunctionDefinition","overrides":{"id":2001,"nodeType":"OverrideSpecifier","overrides":[],"src":"7771:8:14"},"parameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"account","nameLocation":"7729:7:14","nodeType":"VariableDeclaration","scope":2017,"src":"7721:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1996,"name":"address","nodeType":"ElementaryTypeName","src":"7721:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1999,"mutability":"mutable","name":"amount","nameLocation":"7746:6:14","nodeType":"VariableDeclaration","scope":2017,"src":"7738:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1998,"name":"uint256","nodeType":"ElementaryTypeName","src":"7738:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7720:33:14"},"returnParameters":{"id":2002,"nodeType":"ParameterList","parameters":[],"src":"7780:0:14"},"scope":2302,"src":"7706:190:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1056],"body":{"id":2046,"nodeType":"Block","src":"8133:127:14","statements":[{"expression":{"arguments":[{"id":2031,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"8169:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2032,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"8175:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2033,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"8179:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2028,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8143:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$2302_$","typeString":"type(contract super ERC20Votes)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8149:19:14","memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1056,"src":"8143:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2035,"nodeType":"ExpressionStatement","src":"8143:43:14"},{"expression":{"arguments":[{"arguments":[{"id":2038,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"8224:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2037,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"8214:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8214:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2041,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"8241:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2040,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"8231:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8231:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2043,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"8246:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2036,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"8197:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8197:56:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2045,"nodeType":"ExpressionStatement","src":"8197:56:14"}]},"documentation":{"id":2018,"nodeType":"StructuredDocumentation","src":"7902:129:14","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":2047,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"8045:19:14","nodeType":"FunctionDefinition","overrides":{"id":2026,"nodeType":"OverrideSpecifier","overrides":[],"src":"8124:8:14"},"parameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"from","nameLocation":"8073:4:14","nodeType":"VariableDeclaration","scope":2047,"src":"8065:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2019,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2022,"mutability":"mutable","name":"to","nameLocation":"8087:2:14","nodeType":"VariableDeclaration","scope":2047,"src":"8079:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2021,"name":"address","nodeType":"ElementaryTypeName","src":"8079:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2024,"mutability":"mutable","name":"amount","nameLocation":"8099:6:14","nodeType":"VariableDeclaration","scope":2047,"src":"8091:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"8091:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:42:14"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[],"src":"8133:0:14"},"scope":2302,"src":"8036:224:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2085,"nodeType":"Block","src":"8505:306:14","statements":[{"assignments":[2056],"declarations":[{"constant":false,"id":2056,"mutability":"mutable","name":"currentDelegate","nameLocation":"8523:15:14","nodeType":"VariableDeclaration","scope":2085,"src":"8515:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"8515:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2060,"initialValue":{"arguments":[{"id":2058,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"8551:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2057,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"8541:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8541:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8515:46:14"},{"assignments":[2062],"declarations":[{"constant":false,"id":2062,"mutability":"mutable","name":"delegatorBalance","nameLocation":"8579:16:14","nodeType":"VariableDeclaration","scope":2085,"src":"8571:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"8571:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2066,"initialValue":{"arguments":[{"id":2064,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"8608:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2063,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"8598:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8598:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8571:47:14"},{"expression":{"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2067,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"8628:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2069,"indexExpression":{"id":2068,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"8639:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8628:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2070,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"8652:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8628:33:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2072,"nodeType":"ExpressionStatement","src":"8628:33:14"},{"eventCall":{"arguments":[{"id":2074,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"8693:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2075,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"8704:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2076,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"8721:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2073,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"8677:15:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8677:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2078,"nodeType":"EmitStatement","src":"8672:59:14"},{"expression":{"arguments":[{"id":2080,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"8759:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2081,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"8776:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2082,"name":"delegatorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"8787:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2079,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"8742:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8742:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2084,"nodeType":"ExpressionStatement","src":"8742:62:14"}]},"documentation":{"id":2048,"nodeType":"StructuredDocumentation","src":"8266:160:14","text":" @dev Change delegation for `delegator` to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":2086,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"8440:9:14","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"delegator","nameLocation":"8458:9:14","nodeType":"VariableDeclaration","scope":2086,"src":"8450:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2049,"name":"address","nodeType":"ElementaryTypeName","src":"8450:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2052,"mutability":"mutable","name":"delegatee","nameLocation":"8477:9:14","nodeType":"VariableDeclaration","scope":2086,"src":"8469:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2051,"name":"address","nodeType":"ElementaryTypeName","src":"8469:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8449:38:14"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[],"src":"8505:0:14"},"scope":2302,"src":"8431:380:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2156,"nodeType":"Block","src":"8893:521:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2095,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"8907:3:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2096,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"8914:3:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8907:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2098,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"8921:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8930:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8921:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8907:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2155,"nodeType":"IfStatement","src":"8903:505:14","trueBody":{"id":2154,"nodeType":"Block","src":"8933:475:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2102,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"8951:3:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8966:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8958:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2103,"name":"address","nodeType":"ElementaryTypeName","src":"8958:7:14","typeDescriptions":{}}},"id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8958:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8951:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2127,"nodeType":"IfStatement","src":"8947:221:14","trueBody":{"id":2126,"nodeType":"Block","src":"8970:198:14","statements":[{"assignments":[2109,2111],"declarations":[{"constant":false,"id":2109,"mutability":"mutable","name":"oldWeight","nameLocation":"8997:9:14","nodeType":"VariableDeclaration","scope":2126,"src":"8989:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2108,"name":"uint256","nodeType":"ElementaryTypeName","src":"8989:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"newWeight","nameLocation":"9016:9:14","nodeType":"VariableDeclaration","scope":2126,"src":"9008:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"9008:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2119,"initialValue":{"arguments":[{"baseExpression":{"id":2113,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"9046:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":2115,"indexExpression":{"id":2114,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"9059:3:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9046:17:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":2116,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"9065:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"9076:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2112,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"9029:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9029:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8988:95:14"},{"eventCall":{"arguments":[{"id":2121,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"9127:3:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2122,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"9132:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2123,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"9143:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2120,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"9106:20:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9106:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2125,"nodeType":"EmitStatement","src":"9101:52:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2128,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"9186:3:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9193:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2129,"name":"address","nodeType":"ElementaryTypeName","src":"9193:7:14","typeDescriptions":{}}},"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9193:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9186:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2153,"nodeType":"IfStatement","src":"9182:216:14","trueBody":{"id":2152,"nodeType":"Block","src":"9205:193:14","statements":[{"assignments":[2135,2137],"declarations":[{"constant":false,"id":2135,"mutability":"mutable","name":"oldWeight","nameLocation":"9232:9:14","nodeType":"VariableDeclaration","scope":2152,"src":"9224:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"9224:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2137,"mutability":"mutable","name":"newWeight","nameLocation":"9251:9:14","nodeType":"VariableDeclaration","scope":2152,"src":"9243:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2136,"name":"uint256","nodeType":"ElementaryTypeName","src":"9243:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2145,"initialValue":{"arguments":[{"baseExpression":{"id":2139,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"9281:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":2141,"indexExpression":{"id":2140,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"9294:3:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9281:17:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":2142,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"9300:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2143,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"9306:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2138,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"9264:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9264:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9223:90:14"},{"eventCall":{"arguments":[{"id":2147,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"9357:3:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2148,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"9362:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2149,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"9373:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2146,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"9336:20:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9336:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"EmitStatement","src":"9331:52:14"}]}}]}}]},"id":2157,"implemented":true,"kind":"function","modifiers":[],"name":"_moveVotingPower","nameLocation":"8826:16:14","nodeType":"FunctionDefinition","parameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"src","nameLocation":"8851:3:14","nodeType":"VariableDeclaration","scope":2157,"src":"8843:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2087,"name":"address","nodeType":"ElementaryTypeName","src":"8843:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2090,"mutability":"mutable","name":"dst","nameLocation":"8864:3:14","nodeType":"VariableDeclaration","scope":2157,"src":"8856:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2089,"name":"address","nodeType":"ElementaryTypeName","src":"8856:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2092,"mutability":"mutable","name":"amount","nameLocation":"8877:6:14","nodeType":"VariableDeclaration","scope":2157,"src":"8869:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"8869:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8842:42:14"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[],"src":"8893:0:14"},"scope":2302,"src":"8817:597:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2257,"nodeType":"Block","src":"9628:560:14","statements":[{"assignments":[2181],"declarations":[{"constant":false,"id":2181,"mutability":"mutable","name":"pos","nameLocation":"9646:3:14","nodeType":"VariableDeclaration","scope":2257,"src":"9638:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2180,"name":"uint256","nodeType":"ElementaryTypeName","src":"9638:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2184,"initialValue":{"expression":{"id":2182,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"9652:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9658:6:14","memberName":"length","nodeType":"MemberAccess","src":"9652:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9638:26:14"},{"id":2256,"nodeType":"UncheckedBlock","src":"9675:507:14","statements":[{"assignments":[2187],"declarations":[{"constant":false,"id":2187,"mutability":"mutable","name":"oldCkpt","nameLocation":"9717:7:14","nodeType":"VariableDeclaration","scope":2256,"src":"9699:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":2186,"nodeType":"UserDefinedTypeName","pathNode":{"id":2185,"name":"Checkpoint","nameLocations":["9699:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1585,"src":"9699:10:14"},"referencedDeclaration":1585,"src":"9699:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"id":2202,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2188,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"9727:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9727:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2196,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"9771:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2197,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"9778:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9784:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9778:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2195,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"9757:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1585_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9757:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9727:59:14","trueExpression":{"arguments":[{"hexValue":"30","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9749:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9752:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2191,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"9738:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1585_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9738:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"nodeType":"VariableDeclarationStatement","src":"9699:87:14"},{"expression":{"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2203,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9801:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2204,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"9813:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":2205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9821:5:14","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1584,"src":"9813:13:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9801:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2207,"nodeType":"ExpressionStatement","src":"9801:25:14"},{"expression":{"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2208,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"9840:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2210,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9855:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2211,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"9866:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2209,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"9852:2:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9852:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9840:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2214,"nodeType":"ExpressionStatement","src":"9840:32:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2215,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"9891:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9897:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9891:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2218,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"9902:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":2219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9910:9:14","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1582,"src":"9902:17:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2220,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"9923:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9902:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9891:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2254,"nodeType":"Block","src":"10038:134:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2244,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"10108:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10108:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":2242,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"10090:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5999_$","typeString":"type(library SafeCast)"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10099:8:14","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5161,"src":"10090:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10090:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":2249,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"10144:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2247,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"10125:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5999_$","typeString":"type(library SafeCast)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10134:9:14","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4561,"src":"10125:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10125:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":2241,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"10067:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1585_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10079:9:14","10118:5:14"],"names":["fromBlock","votes"],"nodeType":"FunctionCall","src":"10067:89:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$1585_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}],"expression":{"id":2238,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10056:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10062:4:14","memberName":"push","nodeType":"MemberAccess","src":"10056:10:14","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$1585_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,struct ERC20Votes.Checkpoint storage ref)"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:101:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2253,"nodeType":"ExpressionStatement","src":"10056:101:14"}]},"id":2255,"nodeType":"IfStatement","src":"9887:285:14","trueBody":{"id":2237,"nodeType":"Block","src":"9932:100:14","statements":[{"expression":{"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2225,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"9964:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2226,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"9971:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9977:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9971:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2224,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"9950:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1585_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9950:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":2230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9980:5:14","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1584,"src":"9950:35:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2233,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"10007:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2231,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"9988:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5999_$","typeString":"type(library SafeCast)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9997:9:14","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4561,"src":"9988:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9988:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9950:67:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2236,"nodeType":"ExpressionStatement","src":"9950:67:14"}]}}]}]},"id":2258,"implemented":true,"kind":"function","modifiers":[],"name":"_writeCheckpoint","nameLocation":"9429:16:14","nodeType":"FunctionDefinition","parameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"ckpts","nameLocation":"9476:5:14","nodeType":"VariableDeclaration","scope":2258,"src":"9455:26:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":2159,"nodeType":"UserDefinedTypeName","pathNode":{"id":2158,"name":"Checkpoint","nameLocations":["9455:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1585,"src":"9455:10:14"},"referencedDeclaration":1585,"src":"9455:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":2160,"nodeType":"ArrayTypeName","src":"9455:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":2171,"mutability":"mutable","name":"op","nameLocation":"9541:2:14","nodeType":"VariableDeclaration","scope":2258,"src":"9491:52:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":2170,"nodeType":"FunctionTypeName","parameterTypes":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2170,"src":"9500:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"9500:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2170,"src":"9509:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"9509:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9499:18:14"},"returnParameterTypes":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2170,"src":"9532:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"9532:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9531:9:14"},"src":"9491:52:14","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":2173,"mutability":"mutable","name":"delta","nameLocation":"9561:5:14","nodeType":"VariableDeclaration","scope":2258,"src":"9553:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2172,"name":"uint256","nodeType":"ElementaryTypeName","src":"9553:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9445:127:14"},"returnParameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"oldWeight","nameLocation":"9598:9:14","nodeType":"VariableDeclaration","scope":2258,"src":"9590:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"newWeight","nameLocation":"9617:9:14","nodeType":"VariableDeclaration","scope":2258,"src":"9609:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2177,"name":"uint256","nodeType":"ElementaryTypeName","src":"9609:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:38:14"},"scope":2302,"src":"9420:768:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2271,"nodeType":"Block","src":"10261:29:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2267,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"10278:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2268,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"10282:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10278:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2266,"id":2270,"nodeType":"Return","src":"10271:12:14"}]},"id":2272,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"10203:4:14","nodeType":"FunctionDefinition","parameters":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"a","nameLocation":"10216:1:14","nodeType":"VariableDeclaration","scope":2272,"src":"10208:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"10208:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"b","nameLocation":"10227:1:14","nodeType":"VariableDeclaration","scope":2272,"src":"10219:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"10219:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10207:22:14"},"returnParameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2272,"src":"10252:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"10252:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10251:9:14"},"scope":2302,"src":"10194:96:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2285,"nodeType":"Block","src":"10368:29:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"10385:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2282,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"10389:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10385:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2280,"id":2284,"nodeType":"Return","src":"10378:12:14"}]},"id":2286,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"10305:9:14","nodeType":"FunctionDefinition","parameters":{"id":2277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"a","nameLocation":"10323:1:14","nodeType":"VariableDeclaration","scope":2286,"src":"10315:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"10315:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2276,"mutability":"mutable","name":"b","nameLocation":"10334:1:14","nodeType":"VariableDeclaration","scope":2286,"src":"10326:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2275,"name":"uint256","nodeType":"ElementaryTypeName","src":"10326:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10314:22:14"},"returnParameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2286,"src":"10359:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"10359:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10358:9:14"},"scope":2302,"src":"10296:101:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2300,"nodeType":"Block","src":"10653:126:14","statements":[{"AST":{"nodeType":"YulBlock","src":"10672:101:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10693:1:14","type":"","value":"0"},{"name":"ckpts.slot","nodeType":"YulIdentifier","src":"10696:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10686:6:14"},"nodeType":"YulFunctionCall","src":"10686:21:14"},"nodeType":"YulExpressionStatement","src":"10686:21:14"},{"nodeType":"YulAssignment","src":"10720:43:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10749:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10752:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10739:9:14"},"nodeType":"YulFunctionCall","src":"10739:18:14"},{"name":"pos","nodeType":"YulIdentifier","src":"10759:3:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10735:3:14"},"nodeType":"YulFunctionCall","src":"10735:28:14"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"10720:11:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2291,"isOffset":false,"isSlot":true,"src":"10696:10:14","suffix":"slot","valueSize":1},{"declaration":2293,"isOffset":false,"isSlot":false,"src":"10759:3:14","valueSize":1},{"declaration":2297,"isOffset":false,"isSlot":true,"src":"10720:11:14","suffix":"slot","valueSize":1}],"id":2299,"nodeType":"InlineAssembly","src":"10663:110:14"}]},"documentation":{"id":2287,"nodeType":"StructuredDocumentation","src":"10403:132:14","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"10549:13:14","nodeType":"FunctionDefinition","parameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"ckpts","nameLocation":"10584:5:14","nodeType":"VariableDeclaration","scope":2301,"src":"10563:26:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":2289,"nodeType":"UserDefinedTypeName","pathNode":{"id":2288,"name":"Checkpoint","nameLocations":["10563:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1585,"src":"10563:10:14"},"referencedDeclaration":1585,"src":"10563:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":2290,"nodeType":"ArrayTypeName","src":"10563:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1585_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"pos","nameLocation":"10599:3:14","nodeType":"VariableDeclaration","scope":2301,"src":"10591:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"10591:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10562:41:14"},"returnParameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"result","nameLocation":"10645:6:14","nodeType":"VariableDeclaration","scope":2301,"src":"10626:25:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":2296,"nodeType":"UserDefinedTypeName","pathNode":{"id":2295,"name":"Checkpoint","nameLocations":["10626:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1585,"src":"10626:10:14"},"referencedDeclaration":1585,"src":"10626:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1585_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"10625:27:14"},"scope":2302,"src":"10540:239:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2303,"src":"1243:9538:14","usedErrors":[2480,2482]}],"src":"121:10661:14"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"id":15,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1135],"IERC20Metadata":[2327]},"id":2328,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2304,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2305,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2328,"sourceUnit":1136,"src":"135:23:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2307,"name":"IERC20","nameLocations":["305:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1135,"src":"305:6:15"},"id":2308,"nodeType":"InheritanceSpecifier","src":"305:6:15"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2306,"nodeType":"StructuredDocumentation","src":"160:116:15","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":2327,"linearizedBaseContracts":[2327,1135],"name":"IERC20Metadata","nameLocation":"287:14:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2309,"nodeType":"StructuredDocumentation","src":"318:54:15","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2314,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:15","nodeType":"FunctionDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[],"src":"390:2:15"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2314,"src":"416:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2311,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:15"},"scope":2327,"src":"377:54:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2315,"nodeType":"StructuredDocumentation","src":"437:56:15","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2320,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:15","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[],"src":"513:2:15"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2320,"src":"539:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2317,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:15"},"scope":2327,"src":"498:56:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2321,"nodeType":"StructuredDocumentation","src":"560:65:15","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2326,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:15","nodeType":"FunctionDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[],"src":"647:2:15"},"returnParameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2326,"src":"673:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2323,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:15"},"scope":2327,"src":"630:50:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2328,"src":"277:405:15","usedErrors":[]}],"src":"110:573:15"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"id":16,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[2363]},"id":2364,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2329,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2330,"nodeType":"StructuredDocumentation","src":"148:1963:16","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":2363,"linearizedBaseContracts":[2363],"name":"IERC20Permit","nameLocation":"2122:12:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"2141:850:16","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":2348,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3005:6:16","nodeType":"FunctionDefinition","parameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"owner","nameLocation":"3029:5:16","nodeType":"VariableDeclaration","scope":2348,"src":"3021:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2332,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"spender","nameLocation":"3052:7:16","nodeType":"VariableDeclaration","scope":2348,"src":"3044:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"3044:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"value","nameLocation":"3077:5:16","nodeType":"VariableDeclaration","scope":2348,"src":"3069:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"deadline","nameLocation":"3100:8:16","nodeType":"VariableDeclaration","scope":2348,"src":"3092:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3092:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"v","nameLocation":"3124:1:16","nodeType":"VariableDeclaration","scope":2348,"src":"3118:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2340,"name":"uint8","nodeType":"ElementaryTypeName","src":"3118:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2343,"mutability":"mutable","name":"r","nameLocation":"3143:1:16","nodeType":"VariableDeclaration","scope":2348,"src":"3135:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3135:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2345,"mutability":"mutable","name":"s","nameLocation":"3162:1:16","nodeType":"VariableDeclaration","scope":2348,"src":"3154:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3154:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3011:158:16"},"returnParameters":{"id":2347,"nodeType":"ParameterList","parameters":[],"src":"3178:0:16"},"scope":2363,"src":"2996:183:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"3185:294:16","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2356,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3493:6:16","nodeType":"FunctionDefinition","parameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"owner","nameLocation":"3508:5:16","nodeType":"VariableDeclaration","scope":2356,"src":"3500:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2350,"name":"address","nodeType":"ElementaryTypeName","src":"3500:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3499:15:16"},"returnParameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2356,"src":"3538:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2353,"name":"uint256","nodeType":"ElementaryTypeName","src":"3538:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3537:9:16"},"scope":2363,"src":"3484:63:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2357,"nodeType":"StructuredDocumentation","src":"3553:128:16","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2362,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3748:16:16","nodeType":"FunctionDefinition","parameters":{"id":2358,"nodeType":"ParameterList","parameters":[],"src":"3764:2:16"},"returnParameters":{"id":2361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2362,"src":"3790:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3790:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3789:9:16"},"scope":2363,"src":"3739:60:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2364,"src":"2112:1689:16","usedErrors":[]}],"src":"123:3679:16"}},"@openzeppelin/contracts/utils/Context.sol":{"id":17,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2393]},"id":2394,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2365,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:17"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"126:496:17","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2393,"linearizedBaseContracts":[2393],"name":"Context","nameLocation":"641:7:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":2374,"nodeType":"Block","src":"717:34:17","statements":[{"expression":{"expression":{"id":2371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:17","memberName":"sender","nodeType":"MemberAccess","src":"734:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2370,"id":2373,"nodeType":"Return","src":"727:17:17"}]},"id":2375,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:17","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[],"src":"674:2:17"},"returnParameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2375,"src":"708:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2368,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:17"},"scope":2393,"src":"655:96:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2383,"nodeType":"Block","src":"824:32:17","statements":[{"expression":{"expression":{"id":2380,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:17","memberName":"data","nodeType":"MemberAccess","src":"841:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2379,"id":2382,"nodeType":"Return","src":"834:15:17"}]},"id":2384,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:17","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[],"src":"774:2:17"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2384,"src":"808:14:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2377,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:17"},"scope":2393,"src":"757:99:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2391,"nodeType":"Block","src":"934:25:17","statements":[{"expression":{"hexValue":"30","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2388,"id":2390,"nodeType":"Return","src":"944:8:17"}]},"id":2392,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:17","nodeType":"FunctionDefinition","parameters":{"id":2385,"nodeType":"ParameterList","parameters":[],"src":"891:2:17"},"returnParameters":{"id":2388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2392,"src":"925:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2386,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:17"},"scope":2393,"src":"862:97:17","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2394,"src":"623:338:17","usedErrors":[]}],"src":"101:861:17"}},"@openzeppelin/contracts/utils/Counters.sol":{"id":18,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[2467]},"id":2468,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2395,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"112:311:18","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":2467,"linearizedBaseContracts":[2467],"name":"Counters","nameLocation":"432:8:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":2399,"members":[{"constant":false,"id":2398,"mutability":"mutable","name":"_value","nameLocation":"794:6:18","nodeType":"VariableDeclaration","scope":2399,"src":"786:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:18","nodeType":"StructDefinition","scope":2467,"src":"447:374:18","visibility":"public"},{"body":{"id":2410,"nodeType":"Block","src":"901:38:18","statements":[{"expression":{"expression":{"id":2407,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"918:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:18","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2398,"src":"918:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2406,"id":2409,"nodeType":"Return","src":"911:21:18"}]},"id":2411,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:18","nodeType":"FunctionDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"counter","nameLocation":"860:7:18","nodeType":"VariableDeclaration","scope":2411,"src":"844:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2401,"nodeType":"UserDefinedTypeName","pathNode":{"id":2400,"name":"Counter","nameLocations":["844:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"844:7:18"},"referencedDeclaration":2399,"src":"844:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:18"},"returnParameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2411,"src":"892:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:18"},"scope":2467,"src":"827:112:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2424,"nodeType":"Block","src":"998:70:18","statements":[{"id":2423,"nodeType":"UncheckedBlock","src":"1008:54:18","statements":[{"expression":{"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2417,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"1032:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:18","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2398,"src":"1032:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2422,"nodeType":"ExpressionStatement","src":"1032:19:18"}]}]},"id":2425,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:18","nodeType":"FunctionDefinition","parameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"counter","nameLocation":"980:7:18","nodeType":"VariableDeclaration","scope":2425,"src":"964:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2413,"nodeType":"UserDefinedTypeName","pathNode":{"id":2412,"name":"Counter","nameLocations":["964:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"964:7:18"},"referencedDeclaration":2399,"src":"964:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:18"},"returnParameters":{"id":2416,"nodeType":"ParameterList","parameters":[],"src":"998:0:18"},"scope":2467,"src":"945:123:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2452,"nodeType":"Block","src":"1127:176:18","statements":[{"assignments":[2432],"declarations":[{"constant":false,"id":2432,"mutability":"mutable","name":"value","nameLocation":"1145:5:18","nodeType":"VariableDeclaration","scope":2452,"src":"1137:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2435,"initialValue":{"expression":{"id":2433,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"1153:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:18","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2398,"src":"1153:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"1185:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":2436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2442,"nodeType":"ExpressionStatement","src":"1177:49:18"},{"id":2451,"nodeType":"UncheckedBlock","src":"1236:61:18","statements":[{"expression":{"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2443,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"1260:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:18","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2398,"src":"1260:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"1277:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2450,"nodeType":"ExpressionStatement","src":"1260:26:18"}]}]},"id":2453,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:18","nodeType":"FunctionDefinition","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"counter","nameLocation":"1109:7:18","nodeType":"VariableDeclaration","scope":2453,"src":"1093:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2427,"nodeType":"UserDefinedTypeName","pathNode":{"id":2426,"name":"Counter","nameLocations":["1093:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"1093:7:18"},"referencedDeclaration":2399,"src":"1093:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:18"},"returnParameters":{"id":2430,"nodeType":"ParameterList","parameters":[],"src":"1127:0:18"},"scope":2467,"src":"1074:229:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2465,"nodeType":"Block","src":"1358:35:18","statements":[{"expression":{"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2459,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"1368:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:18","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2398,"src":"1368:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2464,"nodeType":"ExpressionStatement","src":"1368:18:18"}]},"id":2466,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:18","nodeType":"FunctionDefinition","parameters":{"id":2457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2456,"mutability":"mutable","name":"counter","nameLocation":"1340:7:18","nodeType":"VariableDeclaration","scope":2466,"src":"1324:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2455,"nodeType":"UserDefinedTypeName","pathNode":{"id":2454,"name":"Counter","nameLocations":["1324:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"1324:7:18"},"referencedDeclaration":2399,"src":"1324:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:18"},"returnParameters":{"id":2458,"nodeType":"ParameterList","parameters":[],"src":"1358:0:18"},"scope":2467,"src":"1309:84:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2468,"src":"424:971:18","usedErrors":[]}],"src":"87:1309:18"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"id":19,"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2472],"ShortStrings":[2683],"StorageSlot":[2793]},"id":2684,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2469,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"106:23:19"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2684,"sourceUnit":2794,"src":"131:27:19","symbolAliases":[],"unitAlias":""},{"canonicalName":"ShortString","id":2472,"name":"ShortString","nameLocation":"333:11:19","nodeType":"UserDefinedValueTypeDefinition","src":"328:28:19","underlyingType":{"id":2471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"348:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"358:876:19","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2683,"linearizedBaseContracts":[2683],"name":"ShortStrings","nameLocation":"1243:12:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2476,"mutability":"constant","name":"_FALLBACK_SENTINEL","nameLocation":"1350:18:19","nodeType":"VariableDeclaration","scope":2683,"src":"1325:112:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1325:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:66:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2480,"name":"StringTooLong","nameLocation":"1450:13:19","nodeType":"ErrorDefinition","parameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"str","nameLocation":"1471:3:19","nodeType":"VariableDeclaration","scope":2480,"src":"1464:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2477,"name":"string","nodeType":"ElementaryTypeName","src":"1464:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1463:12:19"},"src":"1444:32:19"},{"errorSelector":"b3512b0c","id":2482,"name":"InvalidShortString","nameLocation":"1487:18:19","nodeType":"ErrorDefinition","parameters":{"id":2481,"nodeType":"ParameterList","parameters":[],"src":"1505:2:19"},"src":"1481:27:19"},{"body":{"id":2525,"nodeType":"Block","src":"1767:208:19","statements":[{"assignments":[2492],"declarations":[{"constant":false,"id":2492,"mutability":"mutable","name":"bstr","nameLocation":"1790:4:19","nodeType":"VariableDeclaration","scope":2525,"src":"1777:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2491,"name":"bytes","nodeType":"ElementaryTypeName","src":"1777:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2497,"initialValue":{"arguments":[{"id":2495,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"1803:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2493,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:19","typeDescriptions":{}}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1777:30:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2498,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"1821:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1826:6:19","memberName":"length","nodeType":"MemberAccess","src":"1821:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:2:19","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1821:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2507,"nodeType":"IfStatement","src":"1817:72:19","trueBody":{"id":2506,"nodeType":"Block","src":"1839:50:19","statements":[{"errorCall":{"arguments":[{"id":2503,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"1874:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2502,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"1860:13:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1860:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2505,"nodeType":"RevertStatement","src":"1853:25:19"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2516,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"1946:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1938:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1938:7:19","typeDescriptions":{}}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1930:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:19","typeDescriptions":{}}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1930:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2519,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"1955:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:6:19","memberName":"length","nodeType":"MemberAccess","src":"1955:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1930:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:19","typeDescriptions":{}}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1922:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2508,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"1905:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2472_$","typeString":"type(ShortString)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1917:4:19","memberName":"wrap","nodeType":"MemberAccess","src":"1905:16:19","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2472_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1905:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"functionReturnParameters":2490,"id":2524,"nodeType":"Return","src":"1898:70:19"}]},"documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"1514:170:19","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2526,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1698:13:19","nodeType":"FunctionDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"str","nameLocation":"1726:3:19","nodeType":"VariableDeclaration","scope":2526,"src":"1712:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2484,"name":"string","nodeType":"ElementaryTypeName","src":"1712:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1711:19:19"},"returnParameters":{"id":2490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2526,"src":"1754:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"},"typeName":{"id":2488,"nodeType":"UserDefinedTypeName","pathNode":{"id":2487,"name":"ShortString","nameLocations":["1754:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2472,"src":"1754:11:19"},"referencedDeclaration":2472,"src":"1754:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"visibility":"internal"}],"src":"1753:13:19"},"scope":2683,"src":"1689:286:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2551,"nodeType":"Block","src":"2133:331:19","statements":[{"assignments":[2536],"declarations":[{"constant":false,"id":2536,"mutability":"mutable","name":"len","nameLocation":"2151:3:19","nodeType":"VariableDeclaration","scope":2551,"src":"2143:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2540,"initialValue":{"arguments":[{"id":2538,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"2168:4:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}],"id":2537,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"2157:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2472_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2157:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2143:30:19"},{"assignments":[2542],"declarations":[{"constant":false,"id":2542,"mutability":"mutable","name":"str","nameLocation":"2275:3:19","nodeType":"VariableDeclaration","scope":2551,"src":"2261:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2541,"name":"string","nodeType":"ElementaryTypeName","src":"2261:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2547,"initialValue":{"arguments":[{"hexValue":"3332","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2281:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2543,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2261:34:19"},{"AST":{"nodeType":"YulBlock","src":"2357:81:19","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2378:3:19"},{"name":"len","nodeType":"YulIdentifier","src":"2383:3:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2371:6:19"},"nodeType":"YulFunctionCall","src":"2371:16:19"},"nodeType":"YulExpressionStatement","src":"2371:16:19"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2411:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2416:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2407:3:19"},"nodeType":"YulFunctionCall","src":"2407:14:19"},{"name":"sstr","nodeType":"YulIdentifier","src":"2423:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2400:6:19"},"nodeType":"YulFunctionCall","src":"2400:28:19"},"nodeType":"YulExpressionStatement","src":"2400:28:19"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2536,"isOffset":false,"isSlot":false,"src":"2383:3:19","valueSize":1},{"declaration":2530,"isOffset":false,"isSlot":false,"src":"2423:4:19","valueSize":1},{"declaration":2542,"isOffset":false,"isSlot":false,"src":"2378:3:19","valueSize":1},{"declaration":2542,"isOffset":false,"isSlot":false,"src":"2411:3:19","valueSize":1}],"id":2548,"nodeType":"InlineAssembly","src":"2348:90:19"},{"expression":{"id":2549,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"2454:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2534,"id":2550,"nodeType":"Return","src":"2447:10:19"}]},"documentation":{"id":2527,"nodeType":"StructuredDocumentation","src":"1981:73:19","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2552,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2068:8:19","nodeType":"FunctionDefinition","parameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"sstr","nameLocation":"2089:4:19","nodeType":"VariableDeclaration","scope":2552,"src":"2077:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"},"typeName":{"id":2529,"nodeType":"UserDefinedTypeName","pathNode":{"id":2528,"name":"ShortString","nameLocations":["2077:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2472,"src":"2077:11:19"},"referencedDeclaration":2472,"src":"2077:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"visibility":"internal"}],"src":"2076:18:19"},"returnParameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2552,"src":"2118:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2532,"name":"string","nodeType":"ElementaryTypeName","src":"2118:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2117:15:19"},"scope":2683,"src":"2059:405:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2583,"nodeType":"Block","src":"2606:175:19","statements":[{"assignments":[2562],"declarations":[{"constant":false,"id":2562,"mutability":"mutable","name":"result","nameLocation":"2624:6:19","nodeType":"VariableDeclaration","scope":2583,"src":"2616:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2572,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2567,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"2660:4:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}],"expression":{"id":2565,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"2641:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2472_$","typeString":"type(ShortString)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2653:6:19","memberName":"unwrap","nodeType":"MemberAccess","src":"2641:18:19","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2472_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2633:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:19","typeDescriptions":{}}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2633:40:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2616:57:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"2687:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2696:2:19","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2687:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2580,"nodeType":"IfStatement","src":"2683:69:19","trueBody":{"id":2579,"nodeType":"Block","src":"2700:52:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2576,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"2721:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2578,"nodeType":"RevertStatement","src":"2714:27:19"}]}},{"expression":{"id":2581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"2768:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2560,"id":2582,"nodeType":"Return","src":"2761:13:19"}]},"documentation":{"id":2553,"nodeType":"StructuredDocumentation","src":"2470:61:19","text":" @dev Return the length of a `ShortString`."},"id":2584,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2545:10:19","nodeType":"FunctionDefinition","parameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"sstr","nameLocation":"2568:4:19","nodeType":"VariableDeclaration","scope":2584,"src":"2556:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"},"typeName":{"id":2555,"nodeType":"UserDefinedTypeName","pathNode":{"id":2554,"name":"ShortString","nameLocations":["2556:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2472,"src":"2556:11:19"},"referencedDeclaration":2472,"src":"2556:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"visibility":"internal"}],"src":"2555:18:19"},"returnParameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2584,"src":"2597:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2596:9:19"},"scope":2683,"src":"2536:245:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2623,"nodeType":"Block","src":"3004:232:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"3024:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2595,"name":"bytes","nodeType":"ElementaryTypeName","src":"3018:5:19","typeDescriptions":{}}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3018:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3031:6:19","memberName":"length","nodeType":"MemberAccess","src":"3018:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3040:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3018:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2621,"nodeType":"Block","src":"3102:128:19","statements":[{"expression":{"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2610,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"3142:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2607,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"3116:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2793_$","typeString":"type(library StorageSlot)"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3128:13:19","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2770,"src":"3116:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2701_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2701_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3149:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2700,"src":"3116:38:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"3157:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3116:46:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2615,"nodeType":"ExpressionStatement","src":"3116:46:19"},{"expression":{"arguments":[{"id":2618,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"3200:18:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2616,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"3183:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2472_$","typeString":"type(ShortString)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3195:4:19","memberName":"wrap","nodeType":"MemberAccess","src":"3183:16:19","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2472_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3183:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"functionReturnParameters":2594,"id":2620,"nodeType":"Return","src":"3176:43:19"}]},"id":2622,"nodeType":"IfStatement","src":"3014:216:19","trueBody":{"id":2606,"nodeType":"Block","src":"3044:52:19","statements":[{"expression":{"arguments":[{"id":2603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"3079:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2602,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"3065:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2472_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3065:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"functionReturnParameters":2594,"id":2605,"nodeType":"Return","src":"3058:27:19"}]}}]},"documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"2787:103:19","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2624,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2904:25:19","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"value","nameLocation":"2944:5:19","nodeType":"VariableDeclaration","scope":2624,"src":"2930:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2586,"name":"string","nodeType":"ElementaryTypeName","src":"2930:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"store","nameLocation":"2966:5:19","nodeType":"VariableDeclaration","scope":2624,"src":"2951:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2588,"name":"string","nodeType":"ElementaryTypeName","src":"2951:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2929:43:19"},"returnParameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2624,"src":"2991:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"},"typeName":{"id":2592,"nodeType":"UserDefinedTypeName","pathNode":{"id":2591,"name":"ShortString","nameLocations":["2991:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2472,"src":"2991:11:19"},"referencedDeclaration":2472,"src":"2991:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"visibility":"internal"}],"src":"2990:13:19"},"scope":2683,"src":"2895:341:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2650,"nodeType":"Block","src":"3476:159:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"3509:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}],"expression":{"id":2635,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"3490:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2472_$","typeString":"type(ShortString)"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3502:6:19","memberName":"unwrap","nodeType":"MemberAccess","src":"3490:18:19","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2472_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3490:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2639,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"3519:18:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3490:47:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2648,"nodeType":"Block","src":"3592:37:19","statements":[{"expression":{"id":2646,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"3613:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2634,"id":2647,"nodeType":"Return","src":"3606:12:19"}]},"id":2649,"nodeType":"IfStatement","src":"3486:143:19","trueBody":{"id":2645,"nodeType":"Block","src":"3539:47:19","statements":[{"expression":{"arguments":[{"id":2642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"3569:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}],"id":2641,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"3560:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2472_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2634,"id":2644,"nodeType":"Return","src":"3553:22:19"}]}}]},"documentation":{"id":2625,"nodeType":"StructuredDocumentation","src":"3242:120:19","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2651,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3376:20:19","nodeType":"FunctionDefinition","parameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"value","nameLocation":"3409:5:19","nodeType":"VariableDeclaration","scope":2651,"src":"3397:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"},"typeName":{"id":2627,"nodeType":"UserDefinedTypeName","pathNode":{"id":2626,"name":"ShortString","nameLocations":["3397:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2472,"src":"3397:11:19"},"referencedDeclaration":2472,"src":"3397:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2630,"mutability":"mutable","name":"store","nameLocation":"3431:5:19","nodeType":"VariableDeclaration","scope":2651,"src":"3416:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2629,"name":"string","nodeType":"ElementaryTypeName","src":"3416:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3396:41:19"},"returnParameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2651,"src":"3461:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2632,"name":"string","nodeType":"ElementaryTypeName","src":"3461:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3460:15:19"},"scope":2683,"src":"3367:268:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2681,"nodeType":"Block","src":"4108:175:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"4141:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}],"expression":{"id":2662,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"4122:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2472_$","typeString":"type(ShortString)"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4134:6:19","memberName":"unwrap","nodeType":"MemberAccess","src":"4122:18:19","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2472_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4122:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2666,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"4151:18:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4122:47:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2679,"nodeType":"Block","src":"4226:51:19","statements":[{"expression":{"expression":{"arguments":[{"id":2675,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"4253:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4247:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2673,"name":"bytes","nodeType":"ElementaryTypeName","src":"4247:5:19","typeDescriptions":{}}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4260:6:19","memberName":"length","nodeType":"MemberAccess","src":"4247:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2661,"id":2678,"nodeType":"Return","src":"4240:26:19"}]},"id":2680,"nodeType":"IfStatement","src":"4118:159:19","trueBody":{"id":2672,"nodeType":"Block","src":"4171:49:19","statements":[{"expression":{"arguments":[{"id":2669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"4203:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}],"id":2668,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"4192:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2472_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2661,"id":2671,"nodeType":"Return","src":"4185:24:19"}]}}]},"documentation":{"id":2652,"nodeType":"StructuredDocumentation","src":"3641:357:19","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2682,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4012:22:19","nodeType":"FunctionDefinition","parameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"value","nameLocation":"4047:5:19","nodeType":"VariableDeclaration","scope":2682,"src":"4035:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"},"typeName":{"id":2654,"nodeType":"UserDefinedTypeName","pathNode":{"id":2653,"name":"ShortString","nameLocations":["4035:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2472,"src":"4035:11:19"},"referencedDeclaration":2472,"src":"4035:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2657,"mutability":"mutable","name":"store","nameLocation":"4069:5:19","nodeType":"VariableDeclaration","scope":2682,"src":"4054:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2656,"name":"string","nodeType":"ElementaryTypeName","src":"4054:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:41:19"},"returnParameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2682,"src":"4099:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4098:9:19"},"scope":2683,"src":"4003:280:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2684,"src":"1235:3050:19","usedErrors":[2480,2482]}],"src":"106:4180:19"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"id":20,"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2793]},"id":2794,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2685,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2686,"nodeType":"StructuredDocumentation","src":"218:1201:20","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":2793,"linearizedBaseContracts":[2793],"name":"StorageSlot","nameLocation":"1428:11:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2689,"members":[{"constant":false,"id":2688,"mutability":"mutable","name":"value","nameLocation":"1483:5:20","nodeType":"VariableDeclaration","scope":2689,"src":"1475:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2687,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:20","nodeType":"StructDefinition","scope":2793,"src":"1446:49:20","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2692,"members":[{"constant":false,"id":2691,"mutability":"mutable","name":"value","nameLocation":"1535:5:20","nodeType":"VariableDeclaration","scope":2692,"src":"1530:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2690,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:20","nodeType":"StructDefinition","scope":2793,"src":"1501:46:20","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2695,"members":[{"constant":false,"id":2694,"mutability":"mutable","name":"value","nameLocation":"1590:5:20","nodeType":"VariableDeclaration","scope":2695,"src":"1582:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:20","nodeType":"StructDefinition","scope":2793,"src":"1553:49:20","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2698,"members":[{"constant":false,"id":2697,"mutability":"mutable","name":"value","nameLocation":"1645:5:20","nodeType":"VariableDeclaration","scope":2698,"src":"1637:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2696,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:20","nodeType":"StructDefinition","scope":2793,"src":"1608:49:20","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2701,"members":[{"constant":false,"id":2700,"mutability":"mutable","name":"value","nameLocation":"1698:5:20","nodeType":"VariableDeclaration","scope":2701,"src":"1691:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2699,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:20","nodeType":"StructDefinition","scope":2793,"src":"1663:47:20","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2704,"members":[{"constant":false,"id":2703,"mutability":"mutable","name":"value","nameLocation":"1749:5:20","nodeType":"VariableDeclaration","scope":2704,"src":"1743:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2702,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:20","nodeType":"StructDefinition","scope":2793,"src":"1716:45:20","visibility":"public"},{"body":{"id":2714,"nodeType":"Block","src":"1943:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2005:38:20","statements":[{"nodeType":"YulAssignment","src":"2019:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2029:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2019:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2711,"isOffset":false,"isSlot":true,"src":"2019:6:20","suffix":"slot","valueSize":1},{"declaration":2707,"isOffset":false,"isSlot":false,"src":"2029:4:20","valueSize":1}],"id":2713,"nodeType":"InlineAssembly","src":"1996:47:20"}]},"documentation":{"id":2705,"nodeType":"StructuredDocumentation","src":"1767:87:20","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2715,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:20","nodeType":"FunctionDefinition","parameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"slot","nameLocation":"1891:4:20","nodeType":"VariableDeclaration","scope":2715,"src":"1883:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:20"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"r","nameLocation":"1940:1:20","nodeType":"VariableDeclaration","scope":2715,"src":"1920:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2689_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2710,"nodeType":"UserDefinedTypeName","pathNode":{"id":2709,"name":"AddressSlot","nameLocations":["1920:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2689,"src":"1920:11:20"},"referencedDeclaration":2689,"src":"1920:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2689_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:20"},"scope":2793,"src":"1859:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2725,"nodeType":"Block","src":"2231:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2293:38:20","statements":[{"nodeType":"YulAssignment","src":"2307:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2317:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2307:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2722,"isOffset":false,"isSlot":true,"src":"2307:6:20","suffix":"slot","valueSize":1},{"declaration":2718,"isOffset":false,"isSlot":false,"src":"2317:4:20","valueSize":1}],"id":2724,"nodeType":"InlineAssembly","src":"2284:47:20"}]},"documentation":{"id":2716,"nodeType":"StructuredDocumentation","src":"2055:87:20","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2726,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:20","nodeType":"FunctionDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"slot","nameLocation":"2179:4:20","nodeType":"VariableDeclaration","scope":2726,"src":"2171:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:20"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"r","nameLocation":"2228:1:20","nodeType":"VariableDeclaration","scope":2726,"src":"2208:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2692_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2721,"nodeType":"UserDefinedTypeName","pathNode":{"id":2720,"name":"BooleanSlot","nameLocations":["2208:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2692,"src":"2208:11:20"},"referencedDeclaration":2692,"src":"2208:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2692_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:20"},"scope":2793,"src":"2147:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2736,"nodeType":"Block","src":"2519:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2581:38:20","statements":[{"nodeType":"YulAssignment","src":"2595:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2605:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2595:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2733,"isOffset":false,"isSlot":true,"src":"2595:6:20","suffix":"slot","valueSize":1},{"declaration":2729,"isOffset":false,"isSlot":false,"src":"2605:4:20","valueSize":1}],"id":2735,"nodeType":"InlineAssembly","src":"2572:47:20"}]},"documentation":{"id":2727,"nodeType":"StructuredDocumentation","src":"2343:87:20","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2737,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:20","nodeType":"FunctionDefinition","parameters":{"id":2730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"slot","nameLocation":"2467:4:20","nodeType":"VariableDeclaration","scope":2737,"src":"2459:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:20"},"returnParameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"r","nameLocation":"2516:1:20","nodeType":"VariableDeclaration","scope":2737,"src":"2496:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2695_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2732,"nodeType":"UserDefinedTypeName","pathNode":{"id":2731,"name":"Bytes32Slot","nameLocations":["2496:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2695,"src":"2496:11:20"},"referencedDeclaration":2695,"src":"2496:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2695_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:20"},"scope":2793,"src":"2435:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2747,"nodeType":"Block","src":"2807:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2869:38:20","statements":[{"nodeType":"YulAssignment","src":"2883:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2893:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2883:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2744,"isOffset":false,"isSlot":true,"src":"2883:6:20","suffix":"slot","valueSize":1},{"declaration":2740,"isOffset":false,"isSlot":false,"src":"2893:4:20","valueSize":1}],"id":2746,"nodeType":"InlineAssembly","src":"2860:47:20"}]},"documentation":{"id":2738,"nodeType":"StructuredDocumentation","src":"2631:87:20","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2748,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:20","nodeType":"FunctionDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"slot","nameLocation":"2755:4:20","nodeType":"VariableDeclaration","scope":2748,"src":"2747:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:20"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"r","nameLocation":"2804:1:20","nodeType":"VariableDeclaration","scope":2748,"src":"2784:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2698_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2743,"nodeType":"UserDefinedTypeName","pathNode":{"id":2742,"name":"Uint256Slot","nameLocations":["2784:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2698,"src":"2784:11:20"},"referencedDeclaration":2698,"src":"2784:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2698_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:20"},"scope":2793,"src":"2723:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2758,"nodeType":"Block","src":"3092:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3154:38:20","statements":[{"nodeType":"YulAssignment","src":"3168:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"3178:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3168:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2755,"isOffset":false,"isSlot":true,"src":"3168:6:20","suffix":"slot","valueSize":1},{"declaration":2751,"isOffset":false,"isSlot":false,"src":"3178:4:20","valueSize":1}],"id":2757,"nodeType":"InlineAssembly","src":"3145:47:20"}]},"documentation":{"id":2749,"nodeType":"StructuredDocumentation","src":"2919:86:20","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2759,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:20","nodeType":"FunctionDefinition","parameters":{"id":2752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2751,"mutability":"mutable","name":"slot","nameLocation":"3041:4:20","nodeType":"VariableDeclaration","scope":2759,"src":"3033:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:20"},"returnParameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"r","nameLocation":"3089:1:20","nodeType":"VariableDeclaration","scope":2759,"src":"3070:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2701_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2754,"nodeType":"UserDefinedTypeName","pathNode":{"id":2753,"name":"StringSlot","nameLocations":["3070:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":2701,"src":"3070:10:20"},"referencedDeclaration":2701,"src":"3070:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2701_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:20"},"scope":2793,"src":"3010:188:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2769,"nodeType":"Block","src":"3400:112:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3462:44:20","statements":[{"nodeType":"YulAssignment","src":"3476:20:20","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3486:10:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3476:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2766,"isOffset":false,"isSlot":true,"src":"3476:6:20","suffix":"slot","valueSize":1},{"declaration":2762,"isOffset":false,"isSlot":true,"src":"3486:10:20","suffix":"slot","valueSize":1}],"id":2768,"nodeType":"InlineAssembly","src":"3453:53:20"}]},"documentation":{"id":2760,"nodeType":"StructuredDocumentation","src":"3204:101:20","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2770,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:20","nodeType":"FunctionDefinition","parameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"store","nameLocation":"3348:5:20","nodeType":"VariableDeclaration","scope":2770,"src":"3333:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2761,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:20"},"returnParameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"r","nameLocation":"3397:1:20","nodeType":"VariableDeclaration","scope":2770,"src":"3378:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2701_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2765,"nodeType":"UserDefinedTypeName","pathNode":{"id":2764,"name":"StringSlot","nameLocations":["3378:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":2701,"src":"3378:10:20"},"referencedDeclaration":2701,"src":"3378:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2701_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:20"},"scope":2793,"src":"3310:202:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2780,"nodeType":"Block","src":"3688:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3750:38:20","statements":[{"nodeType":"YulAssignment","src":"3764:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"3774:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3764:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2777,"isOffset":false,"isSlot":true,"src":"3764:6:20","suffix":"slot","valueSize":1},{"declaration":2773,"isOffset":false,"isSlot":false,"src":"3774:4:20","valueSize":1}],"id":2779,"nodeType":"InlineAssembly","src":"3741:47:20"}]},"documentation":{"id":2771,"nodeType":"StructuredDocumentation","src":"3518:85:20","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:20","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"slot","nameLocation":"3638:4:20","nodeType":"VariableDeclaration","scope":2781,"src":"3630:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:20"},"returnParameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"r","nameLocation":"3685:1:20","nodeType":"VariableDeclaration","scope":2781,"src":"3667:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2704_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2776,"nodeType":"UserDefinedTypeName","pathNode":{"id":2775,"name":"BytesSlot","nameLocations":["3667:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":2704,"src":"3667:9:20"},"referencedDeclaration":2704,"src":"3667:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2704_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:20"},"scope":2793,"src":"3608:186:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2791,"nodeType":"Block","src":"3991:112:20","statements":[{"AST":{"nodeType":"YulBlock","src":"4053:44:20","statements":[{"nodeType":"YulAssignment","src":"4067:20:20","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4077:10:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4067:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2788,"isOffset":false,"isSlot":true,"src":"4067:6:20","suffix":"slot","valueSize":1},{"declaration":2784,"isOffset":false,"isSlot":true,"src":"4077:10:20","suffix":"slot","valueSize":1}],"id":2790,"nodeType":"InlineAssembly","src":"4044:53:20"}]},"documentation":{"id":2782,"nodeType":"StructuredDocumentation","src":"3800:99:20","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2792,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:20","nodeType":"FunctionDefinition","parameters":{"id":2785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"store","nameLocation":"3940:5:20","nodeType":"VariableDeclaration","scope":2792,"src":"3926:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2783,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:20"},"returnParameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"r","nameLocation":"3988:1:20","nodeType":"VariableDeclaration","scope":2792,"src":"3970:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2704_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2787,"nodeType":"UserDefinedTypeName","pathNode":{"id":2786,"name":"BytesSlot","nameLocations":["3970:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":2704,"src":"3970:9:20"},"referencedDeclaration":2704,"src":"3970:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2704_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:20"},"scope":2793,"src":"3904:199:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2794,"src":"1420:2685:20","usedErrors":[]}],"src":"193:3913:20"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":21,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4458],"SignedMath":[6416],"Strings":[3022]},"id":3023,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2795,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3023,"sourceUnit":4459,"src":"126:25:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2797,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3023,"sourceUnit":6417,"src":"152:31:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2798,"nodeType":"StructuredDocumentation","src":"185:34:21","text":" @dev String operations."},"fullyImplemented":true,"id":3022,"linearizedBaseContracts":[3022],"name":"Strings","nameLocation":"228:7:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2801,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:21","nodeType":"VariableDeclaration","scope":3022,"src":"242:54:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2799,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2804,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:21","nodeType":"VariableDeclaration","scope":3022,"src":"302:43:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2802,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:21","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2851,"nodeType":"Block","src":"518:625:21","statements":[{"id":2850,"nodeType":"UncheckedBlock","src":"528:609:21","statements":[{"assignments":[2813],"declarations":[{"constant":false,"id":2813,"mutability":"mutable","name":"length","nameLocation":"560:6:21","nodeType":"VariableDeclaration","scope":2850,"src":"552:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2812,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2820,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"580:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2814,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"569:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4458_$","typeString":"type(library Math)"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:21","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4295,"src":"569:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:21"},{"assignments":[2822],"declarations":[{"constant":false,"id":2822,"mutability":"mutable","name":"buffer","nameLocation":"618:6:21","nodeType":"VariableDeclaration","scope":2850,"src":"604:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2821,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2827,"initialValue":{"arguments":[{"id":2825,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"638:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2823,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:21"},{"assignments":[2829],"declarations":[{"constant":false,"id":2829,"mutability":"mutable","name":"ptr","nameLocation":"667:3:21","nodeType":"VariableDeclaration","scope":2850,"src":"659:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2830,"nodeType":"VariableDeclarationStatement","src":"659:11:21"},{"AST":{"nodeType":"YulBlock","src":"740:67:21","statements":[{"nodeType":"YulAssignment","src":"758:35:21","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:21","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:21"},"nodeType":"YulFunctionCall","src":"777:15:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:21"},"nodeType":"YulFunctionCall","src":"765:28:21"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2822,"isOffset":false,"isSlot":false,"src":"769:6:21","valueSize":1},{"declaration":2813,"isOffset":false,"isSlot":false,"src":"785:6:21","valueSize":1},{"declaration":2829,"isOffset":false,"isSlot":false,"src":"758:3:21","valueSize":1}],"id":2831,"nodeType":"InlineAssembly","src":"731:76:21"},{"body":{"id":2846,"nodeType":"Block","src":"833:267:21","statements":[{"expression":{"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:21","subExpression":{"id":2833,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"851:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2835,"nodeType":"ExpressionStatement","src":"851:5:21"},{"AST":{"nodeType":"YulBlock","src":"934:84:21","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:21","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:21"},"nodeType":"YulFunctionCall","src":"974:14:21"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:21"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:21"},"nodeType":"YulFunctionCall","src":"969:30:21"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:21"},"nodeType":"YulFunctionCall","src":"956:44:21"},"nodeType":"YulExpressionStatement","src":"956:44:21"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2801,"isOffset":false,"isSlot":false,"src":"990:8:21","valueSize":1},{"declaration":2829,"isOffset":false,"isSlot":false,"src":"964:3:21","valueSize":1},{"declaration":2807,"isOffset":false,"isSlot":false,"src":"978:5:21","valueSize":1}],"id":2836,"nodeType":"InlineAssembly","src":"925:93:21"},{"expression":{"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"1035:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2840,"nodeType":"ExpressionStatement","src":"1035:11:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"1068:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2845,"nodeType":"IfStatement","src":"1064:21:21","trueBody":{"id":2844,"nodeType":"Break","src":"1080:5:21"}}]},"condition":{"hexValue":"74727565","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2847,"nodeType":"WhileStatement","src":"820:280:21"},{"expression":{"id":2848,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"1120:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2811,"id":2849,"nodeType":"Return","src":"1113:13:21"}]}]},"documentation":{"id":2805,"nodeType":"StructuredDocumentation","src":"352:90:21","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2852,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:21","nodeType":"FunctionDefinition","parameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"value","nameLocation":"473:5:21","nodeType":"VariableDeclaration","scope":2852,"src":"465:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2806,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:21"},"returnParameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2852,"src":"503:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2809,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:21"},"scope":3022,"src":"447:696:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2879,"nodeType":"Block","src":"1313:103:21","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"1354:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:21","trueExpression":{"hexValue":"2d","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"1400:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2871,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"1385:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6416_$","typeString":"type(library SignedMath)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:21","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6415,"src":"1385:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2870,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[2852,2880],"referencedDeclaration":2852,"src":"1376:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2862,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2860,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:21","typeDescriptions":{}}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2859,"id":2878,"nodeType":"Return","src":"1323:86:21"}]},"documentation":{"id":2853,"nodeType":"StructuredDocumentation","src":"1149:89:21","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2880,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:21","nodeType":"FunctionDefinition","parameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2855,"mutability":"mutable","name":"value","nameLocation":"1268:5:21","nodeType":"VariableDeclaration","scope":2880,"src":"1261:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2854,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:21"},"returnParameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2880,"src":"1298:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2857,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:21"},"scope":3022,"src":"1243:173:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2899,"nodeType":"Block","src":"1595:100:21","statements":[{"id":2898,"nodeType":"UncheckedBlock","src":"1605:84:21","statements":[{"expression":{"arguments":[{"id":2889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"1648:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"1667:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2890,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"1655:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4458_$","typeString":"type(library Math)"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:21","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4418,"src":"1655:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2888,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2900,2976,2996],"referencedDeclaration":2976,"src":"1636:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2887,"id":2897,"nodeType":"Return","src":"1629:49:21"}]}]},"documentation":{"id":2881,"nodeType":"StructuredDocumentation","src":"1422:94:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2900,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:21","nodeType":"FunctionDefinition","parameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"value","nameLocation":"1550:5:21","nodeType":"VariableDeclaration","scope":2900,"src":"1542:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:21"},"returnParameters":{"id":2887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2900,"src":"1580:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2885,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:21"},"scope":3022,"src":"1521:174:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2975,"nodeType":"Block","src":"1908:347:21","statements":[{"assignments":[2911],"declarations":[{"constant":false,"id":2911,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:21","nodeType":"VariableDeclaration","scope":2975,"src":"1918:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2910,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2920,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2915,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"1954:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2912,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:21"},{"expression":{"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2921,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"1975:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2923,"indexExpression":{"hexValue":"30","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2926,"nodeType":"ExpressionStatement","src":"1975:15:21"},{"expression":{"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2927,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2000:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2929,"indexExpression":{"hexValue":"31","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2932,"nodeType":"ExpressionStatement","src":"2000:15:21"},{"body":{"id":2961,"nodeType":"Block","src":"2070:83:21","statements":[{"expression":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2947,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2084:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2949,"indexExpression":{"id":2948,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"2091:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2950,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"2096:8:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2954,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"2105:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2956,"nodeType":"ExpressionStatement","src":"2084:33:21"},{"expression":{"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"2131:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2960,"nodeType":"ExpressionStatement","src":"2131:11:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2941,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"2058:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2962,"initializationExpression":{"assignments":[2934],"declarations":[{"constant":false,"id":2934,"mutability":"mutable","name":"i","nameLocation":"2038:1:21","nodeType":"VariableDeclaration","scope":2962,"src":"2030:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2933,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2940,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2936,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"2046:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:21"},"loopExpression":{"expression":{"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:21","subExpression":{"id":2944,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"2067:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2946,"nodeType":"ExpressionStatement","src":"2065:3:21"},"nodeType":"ForStatement","src":"2025:128:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"2170:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2963,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2969,"nodeType":"ExpressionStatement","src":"2162:55:21"},{"expression":{"arguments":[{"id":2972,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2241:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2970,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:21","typeDescriptions":{}}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2909,"id":2974,"nodeType":"Return","src":"2227:21:21"}]},"documentation":{"id":2901,"nodeType":"StructuredDocumentation","src":"1701:112:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2976,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:21","nodeType":"FunctionDefinition","parameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"value","nameLocation":"1847:5:21","nodeType":"VariableDeclaration","scope":2976,"src":"1839:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2905,"mutability":"mutable","name":"length","nameLocation":"1862:6:21","nodeType":"VariableDeclaration","scope":2976,"src":"1854:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:21"},"returnParameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2976,"src":"1893:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2907,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:21"},"scope":3022,"src":"1818:437:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2995,"nodeType":"Block","src":"2480:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2989,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"2525:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2987,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:21","typeDescriptions":{}}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2985,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:21","typeDescriptions":{}}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2992,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"2533:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2984,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2900,2976,2996],"referencedDeclaration":2976,"src":"2497:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2983,"id":2994,"nodeType":"Return","src":"2490:59:21"}]},"documentation":{"id":2977,"nodeType":"StructuredDocumentation","src":"2261:141:21","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2996,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:21","nodeType":"FunctionDefinition","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"addr","nameLocation":"2436:4:21","nodeType":"VariableDeclaration","scope":2996,"src":"2428:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2978,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:21"},"returnParameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2996,"src":"2465:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2981,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:21"},"scope":3022,"src":"2407:149:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3020,"nodeType":"Block","src":"2711:66:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3009,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"2744:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3007,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:21","typeDescriptions":{}}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3006,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3015,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"2767:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3013,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:21","typeDescriptions":{}}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3012,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3005,"id":3019,"nodeType":"Return","src":"2721:49:21"}]},"documentation":{"id":2997,"nodeType":"StructuredDocumentation","src":"2562:66:21","text":" @dev Returns true if the two strings are equal."},"id":3021,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:21","nodeType":"FunctionDefinition","parameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"a","nameLocation":"2662:1:21","nodeType":"VariableDeclaration","scope":3021,"src":"2648:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2998,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"b","nameLocation":"2679:1:21","nodeType":"VariableDeclaration","scope":3021,"src":"2665:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3000,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:21"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3021,"src":"2705:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3003,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:21"},"scope":3022,"src":"2633:144:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3023,"src":"220:2559:21","usedErrors":[]}],"src":"101:2679:21"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"id":22,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3388],"Math":[4458],"SignedMath":[6416],"Strings":[3022]},"id":3389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3024,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:22"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3025,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3389,"sourceUnit":3023,"src":"137:24:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3026,"nodeType":"StructuredDocumentation","src":"163:205:22","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3388,"linearizedBaseContracts":[3388],"name":"ECDSA","nameLocation":"377:5:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3032,"members":[{"id":3027,"name":"NoError","nameLocation":"417:7:22","nodeType":"EnumValue","src":"417:7:22"},{"id":3028,"name":"InvalidSignature","nameLocation":"434:16:22","nodeType":"EnumValue","src":"434:16:22"},{"id":3029,"name":"InvalidSignatureLength","nameLocation":"460:22:22","nodeType":"EnumValue","src":"460:22:22"},{"id":3030,"name":"InvalidSignatureS","nameLocation":"492:17:22","nodeType":"EnumValue","src":"492:17:22"},{"id":3031,"name":"InvalidSignatureV","nameLocation":"519:17:22","nodeType":"EnumValue","src":"519:17:22"}],"name":"RecoverError","nameLocation":"394:12:22","nodeType":"EnumDefinition","src":"389:175:22"},{"body":{"id":3075,"nodeType":"Block","src":"624:457:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3038,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"638:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3039,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"647:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3032_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:22","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3027,"src":"647:20:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3044,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"734:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3045,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"743:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3032_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:22","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3028,"src":"743:29:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3053,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"843:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3054,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"852:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3032_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:22","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3029,"src":"852:35:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3062,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"965:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3063,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"974:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3032_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:22","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3030,"src":"974:30:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3071,"nodeType":"IfStatement","src":"961:114:22","trueBody":{"id":3070,"nodeType":"Block","src":"1006:69:22","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":3066,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3069,"nodeType":"ExpressionStatement","src":"1020:44:22"}]}},"id":3072,"nodeType":"IfStatement","src":"839:236:22","trueBody":{"id":3061,"nodeType":"Block","src":"889:66:22","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":3057,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3060,"nodeType":"ExpressionStatement","src":"903:41:22"}]}},"id":3073,"nodeType":"IfStatement","src":"730:345:22","trueBody":{"id":3052,"nodeType":"Block","src":"774:59:22","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":3048,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3051,"nodeType":"ExpressionStatement","src":"788:34:22"}]}},"id":3074,"nodeType":"IfStatement","src":"634:441:22","trueBody":{"id":3043,"nodeType":"Block","src":"669:55:22","statements":[{"functionReturnParameters":3037,"id":3042,"nodeType":"Return","src":"683:7:22"}]}}]},"id":3076,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:22","nodeType":"FunctionDefinition","parameters":{"id":3036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3035,"mutability":"mutable","name":"error","nameLocation":"604:5:22","nodeType":"VariableDeclaration","scope":3076,"src":"591:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3034,"nodeType":"UserDefinedTypeName","pathNode":{"id":3033,"name":"RecoverError","nameLocations":["591:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3032,"src":"591:12:22"},"referencedDeclaration":3032,"src":"591:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:22"},"returnParameters":{"id":3037,"nodeType":"ParameterList","parameters":[],"src":"624:0:22"},"scope":3388,"src":"570:511:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3121,"nodeType":"Block","src":"2249:626:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3089,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"2263:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:22","memberName":"length","nodeType":"MemberAccess","src":"2263:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:22","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3119,"nodeType":"Block","src":"2788:81:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3111,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:22","typeDescriptions":{}}},"id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3115,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"2822:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3032_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:22","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3029,"src":"2822:35:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}}],"id":3117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3032_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3088,"id":3118,"nodeType":"Return","src":"2802:56:22"}]},"id":3120,"nodeType":"IfStatement","src":"2259:610:22","trueBody":{"id":3110,"nodeType":"Block","src":"2287:495:22","statements":[{"assignments":[3094],"declarations":[{"constant":false,"id":3094,"mutability":"mutable","name":"r","nameLocation":"2309:1:22","nodeType":"VariableDeclaration","scope":3110,"src":"2301:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3095,"nodeType":"VariableDeclarationStatement","src":"2301:9:22"},{"assignments":[3097],"declarations":[{"constant":false,"id":3097,"mutability":"mutable","name":"s","nameLocation":"2332:1:22","nodeType":"VariableDeclaration","scope":3110,"src":"2324:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3098,"nodeType":"VariableDeclarationStatement","src":"2324:9:22"},{"assignments":[3100],"declarations":[{"constant":false,"id":3100,"mutability":"mutable","name":"v","nameLocation":"2353:1:22","nodeType":"VariableDeclaration","scope":3110,"src":"2347:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3099,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3101,"nodeType":"VariableDeclarationStatement","src":"2347:7:22"},{"AST":{"nodeType":"YulBlock","src":"2555:171:22","statements":[{"nodeType":"YulAssignment","src":"2573:32:22","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:22"},"nodeType":"YulFunctionCall","src":"2584:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:22"},"nodeType":"YulFunctionCall","src":"2578:27:22"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:22"}]},{"nodeType":"YulAssignment","src":"2622:32:22","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:22"},"nodeType":"YulFunctionCall","src":"2633:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:22"},"nodeType":"YulFunctionCall","src":"2627:27:22"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:22"}]},{"nodeType":"YulAssignment","src":"2671:41:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:22","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:22"},"nodeType":"YulFunctionCall","src":"2690:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:22"},"nodeType":"YulFunctionCall","src":"2684:27:22"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:22"},"nodeType":"YulFunctionCall","src":"2676:36:22"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3094,"isOffset":false,"isSlot":false,"src":"2573:1:22","valueSize":1},{"declaration":3097,"isOffset":false,"isSlot":false,"src":"2622:1:22","valueSize":1},{"declaration":3081,"isOffset":false,"isSlot":false,"src":"2588:9:22","valueSize":1},{"declaration":3081,"isOffset":false,"isSlot":false,"src":"2637:9:22","valueSize":1},{"declaration":3081,"isOffset":false,"isSlot":false,"src":"2694:9:22","valueSize":1},{"declaration":3100,"isOffset":false,"isSlot":false,"src":"2671:1:22","valueSize":1}],"id":3102,"nodeType":"InlineAssembly","src":"2546:180:22"},{"expression":{"arguments":[{"id":3104,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"2757:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3105,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"2763:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3106,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"2766:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3107,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"2769:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3103,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3122,3196,3290],"referencedDeclaration":3290,"src":"2746:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3032_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3032_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3088,"id":3109,"nodeType":"Return","src":"2739:32:22"}]}}]},"documentation":{"id":3077,"nodeType":"StructuredDocumentation","src":"1087:1053:22","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":3122,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:22","nodeType":"FunctionDefinition","parameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"hash","nameLocation":"2173:4:22","nodeType":"VariableDeclaration","scope":3122,"src":"2165:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"signature","nameLocation":"2192:9:22","nodeType":"VariableDeclaration","scope":3122,"src":"2179:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3080,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:22"},"returnParameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3122,"src":"2226:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3083,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3122,"src":"2235:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3086,"nodeType":"UserDefinedTypeName","pathNode":{"id":3085,"name":"RecoverError","nameLocations":["2235:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3032,"src":"2235:12:22"},"referencedDeclaration":3032,"src":"2235:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:22"},"scope":3388,"src":"2145:730:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3148,"nodeType":"Block","src":"3748:140:22","statements":[{"assignments":[3133,3136],"declarations":[{"constant":false,"id":3133,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:22","nodeType":"VariableDeclaration","scope":3148,"src":"3759:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3136,"mutability":"mutable","name":"error","nameLocation":"3791:5:22","nodeType":"VariableDeclaration","scope":3148,"src":"3778:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3135,"nodeType":"UserDefinedTypeName","pathNode":{"id":3134,"name":"RecoverError","nameLocations":["3778:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3032,"src":"3778:12:22"},"referencedDeclaration":3032,"src":"3778:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":3141,"initialValue":{"arguments":[{"id":3138,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"3811:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3139,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"3817:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3137,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3122,3196,3290],"referencedDeclaration":3122,"src":"3800:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3032_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3032_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:22"},{"expression":{"arguments":[{"id":3143,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"3849:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}],"id":3142,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"3837:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3032_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3145,"nodeType":"ExpressionStatement","src":"3837:18:22"},{"expression":{"id":3146,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"3872:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3131,"id":3147,"nodeType":"Return","src":"3865:16:22"}]},"documentation":{"id":3123,"nodeType":"StructuredDocumentation","src":"2881:775:22","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":3149,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:22","nodeType":"FunctionDefinition","parameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"hash","nameLocation":"3686:4:22","nodeType":"VariableDeclaration","scope":3149,"src":"3678:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3127,"mutability":"mutable","name":"signature","nameLocation":"3705:9:22","nodeType":"VariableDeclaration","scope":3149,"src":"3692:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3126,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:22"},"returnParameters":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3149,"src":"3739:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3129,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:22"},"scope":3388,"src":"3661:227:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3195,"nodeType":"Block","src":"4245:203:22","statements":[{"assignments":[3165],"declarations":[{"constant":false,"id":3165,"mutability":"mutable","name":"s","nameLocation":"4263:1:22","nodeType":"VariableDeclaration","scope":3195,"src":"4255:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3172,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3166,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"4267:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:22","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:22","typeDescriptions":{}}},"id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:22"},{"assignments":[3174],"declarations":[{"constant":false,"id":3174,"mutability":"mutable","name":"v","nameLocation":"4363:1:22","nodeType":"VariableDeclaration","scope":3195,"src":"4357:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3173,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3187,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3179,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"4382:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3177,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:22","typeDescriptions":{}}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3183,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:22","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3175,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:22","typeDescriptions":{}}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:22"},{"expression":{"arguments":[{"id":3189,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"4427:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3190,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"4433:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3191,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"4436:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3192,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"4439:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3188,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3122,3196,3290],"referencedDeclaration":3290,"src":"4416:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3032_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3032_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3163,"id":3194,"nodeType":"Return","src":"4409:32:22"}]},"documentation":{"id":3150,"nodeType":"StructuredDocumentation","src":"3894:243:22","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":3196,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:22","nodeType":"FunctionDefinition","parameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"mutability":"mutable","name":"hash","nameLocation":"4170:4:22","nodeType":"VariableDeclaration","scope":3196,"src":"4162:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3154,"mutability":"mutable","name":"r","nameLocation":"4184:1:22","nodeType":"VariableDeclaration","scope":3196,"src":"4176:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"vs","nameLocation":"4195:2:22","nodeType":"VariableDeclaration","scope":3196,"src":"4187:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:22"},"returnParameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3196,"src":"4222:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3158,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3196,"src":"4231:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3161,"nodeType":"UserDefinedTypeName","pathNode":{"id":3160,"name":"RecoverError","nameLocations":["4231:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3032,"src":"4231:12:22"},"referencedDeclaration":3032,"src":"4231:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:22"},"scope":3388,"src":"4142:306:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3225,"nodeType":"Block","src":"4699:136:22","statements":[{"assignments":[3209,3212],"declarations":[{"constant":false,"id":3209,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:22","nodeType":"VariableDeclaration","scope":3225,"src":"4710:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3208,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3212,"mutability":"mutable","name":"error","nameLocation":"4742:5:22","nodeType":"VariableDeclaration","scope":3225,"src":"4729:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3211,"nodeType":"UserDefinedTypeName","pathNode":{"id":3210,"name":"RecoverError","nameLocations":["4729:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3032,"src":"4729:12:22"},"referencedDeclaration":3032,"src":"4729:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":3218,"initialValue":{"arguments":[{"id":3214,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"4762:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3215,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"4768:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3216,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"4771:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3213,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3122,3196,3290],"referencedDeclaration":3196,"src":"4751:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3032_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3032_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:22"},{"expression":{"arguments":[{"id":3220,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"4796:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}],"id":3219,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"4784:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3032_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3222,"nodeType":"ExpressionStatement","src":"4784:18:22"},{"expression":{"id":3223,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"4819:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3207,"id":3224,"nodeType":"Return","src":"4812:16:22"}]},"documentation":{"id":3197,"nodeType":"StructuredDocumentation","src":"4454:154:22","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":3226,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:22","nodeType":"FunctionDefinition","parameters":{"id":3204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"hash","nameLocation":"4638:4:22","nodeType":"VariableDeclaration","scope":3226,"src":"4630:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"r","nameLocation":"4652:1:22","nodeType":"VariableDeclaration","scope":3226,"src":"4644:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3203,"mutability":"mutable","name":"vs","nameLocation":"4663:2:22","nodeType":"VariableDeclaration","scope":3226,"src":"4655:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:22"},"returnParameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3226,"src":"4690:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3205,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:22"},"scope":3388,"src":"4613:222:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3289,"nodeType":"Block","src":"5120:1345:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3245,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"6016:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:22","typeDescriptions":{}}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:22","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3258,"nodeType":"IfStatement","src":"6004:161:22","trueBody":{"id":3257,"nodeType":"Block","src":"6089:76:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3249,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:22","typeDescriptions":{}}},"id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3253,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"6123:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3032_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:22","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3030,"src":"6123:30:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}}],"id":3255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3032_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3242,"id":3256,"nodeType":"Return","src":"6103:51:22"}]}},{"assignments":[3260],"declarations":[{"constant":false,"id":3260,"mutability":"mutable","name":"signer","nameLocation":"6267:6:22","nodeType":"VariableDeclaration","scope":3289,"src":"6259:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3259,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3267,"initialValue":{"arguments":[{"id":3262,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"6286:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3263,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"6292:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3264,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"6295:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3265,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"6298:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3261,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:22","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:22"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3268,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"6314:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3269,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:22","typeDescriptions":{}}},"id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3283,"nodeType":"IfStatement","src":"6310:101:22","trueBody":{"id":3282,"nodeType":"Block","src":"6336:75:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3274,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:22","typeDescriptions":{}}},"id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3278,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"6370:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3032_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:22","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3028,"src":"6370:29:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}}],"id":3280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3032_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3242,"id":3281,"nodeType":"Return","src":"6350:50:22"}]}},{"expression":{"components":[{"id":3284,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"6429:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3285,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"6437:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3032_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:22","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3027,"src":"6437:20:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}}],"id":3287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3032_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3242,"id":3288,"nodeType":"Return","src":"6421:37:22"}]},"documentation":{"id":3227,"nodeType":"StructuredDocumentation","src":"4841:163:22","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":3290,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:22","nodeType":"FunctionDefinition","parameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3229,"mutability":"mutable","name":"hash","nameLocation":"5037:4:22","nodeType":"VariableDeclaration","scope":3290,"src":"5029:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3231,"mutability":"mutable","name":"v","nameLocation":"5049:1:22","nodeType":"VariableDeclaration","scope":3290,"src":"5043:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3230,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"r","nameLocation":"5060:1:22","nodeType":"VariableDeclaration","scope":3290,"src":"5052:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3235,"mutability":"mutable","name":"s","nameLocation":"5071:1:22","nodeType":"VariableDeclaration","scope":3290,"src":"5063:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:22"},"returnParameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3290,"src":"5097:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3237,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3290,"src":"5106:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3240,"nodeType":"UserDefinedTypeName","pathNode":{"id":3239,"name":"RecoverError","nameLocations":["5106:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3032,"src":"5106:12:22"},"referencedDeclaration":3032,"src":"5106:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:22"},"scope":3388,"src":"5009:1456:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3322,"nodeType":"Block","src":"6692:138:22","statements":[{"assignments":[3305,3308],"declarations":[{"constant":false,"id":3305,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:22","nodeType":"VariableDeclaration","scope":3322,"src":"6703:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3304,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3308,"mutability":"mutable","name":"error","nameLocation":"6735:5:22","nodeType":"VariableDeclaration","scope":3322,"src":"6722:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3307,"nodeType":"UserDefinedTypeName","pathNode":{"id":3306,"name":"RecoverError","nameLocations":["6722:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3032,"src":"6722:12:22"},"referencedDeclaration":3032,"src":"6722:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":3315,"initialValue":{"arguments":[{"id":3310,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"6755:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3311,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"6761:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3312,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"6764:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3313,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"6767:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3309,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3122,3196,3290],"referencedDeclaration":3290,"src":"6744:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3032_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3032_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:22"},{"expression":{"arguments":[{"id":3317,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"6791:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3032","typeString":"enum ECDSA.RecoverError"}],"id":3316,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"6779:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3032_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3319,"nodeType":"ExpressionStatement","src":"6779:18:22"},{"expression":{"id":3320,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"6814:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3303,"id":3321,"nodeType":"Return","src":"6807:16:22"}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"6471:122:22","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3323,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:22","nodeType":"FunctionDefinition","parameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"hash","nameLocation":"6623:4:22","nodeType":"VariableDeclaration","scope":3323,"src":"6615:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3295,"mutability":"mutable","name":"v","nameLocation":"6635:1:22","nodeType":"VariableDeclaration","scope":3323,"src":"6629:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3294,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"r","nameLocation":"6646:1:22","nodeType":"VariableDeclaration","scope":3323,"src":"6638:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3299,"mutability":"mutable","name":"s","nameLocation":"6657:1:22","nodeType":"VariableDeclaration","scope":3323,"src":"6649:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:22"},"returnParameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3323,"src":"6683:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3301,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:22"},"scope":3388,"src":"6598:232:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3332,"nodeType":"Block","src":"7206:310:22","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:22","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:22","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:22"},"nodeType":"YulFunctionCall","src":"7376:48:22"},"nodeType":"YulExpressionStatement","src":"7376:48:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:22","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:22"},"nodeType":"YulFunctionCall","src":"7437:18:22"},"nodeType":"YulExpressionStatement","src":"7437:18:22"},{"nodeType":"YulAssignment","src":"7468:32:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:22","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:22","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:22"},"nodeType":"YulFunctionCall","src":"7479:21:22"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3326,"isOffset":false,"isSlot":false,"src":"7450:4:22","valueSize":1},{"declaration":3329,"isOffset":false,"isSlot":false,"src":"7468:7:22","valueSize":1}],"id":3331,"nodeType":"InlineAssembly","src":"7353:157:22"}]},"documentation":{"id":3324,"nodeType":"StructuredDocumentation","src":"6836:279:22","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3333,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:22","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3326,"mutability":"mutable","name":"hash","nameLocation":"7160:4:22","nodeType":"VariableDeclaration","scope":3333,"src":"7152:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:22"},"returnParameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"message","nameLocation":"7197:7:22","nodeType":"VariableDeclaration","scope":3333,"src":"7189:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:22"},"scope":3388,"src":"7120:396:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3354,"nodeType":"Block","src":"7881:116:22","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":3347,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"7976:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:22","memberName":"length","nodeType":"MemberAccess","src":"7976:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3345,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"7959:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3022_$","typeString":"type(library Strings)"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:22","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2852,"src":"7959:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3350,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"7987:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3342,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3341,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3340,"id":3353,"nodeType":"Return","src":"7891:99:22"}]},"documentation":{"id":3334,"nodeType":"StructuredDocumentation","src":"7522:274:22","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3355,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:22","nodeType":"FunctionDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3336,"mutability":"mutable","name":"s","nameLocation":"7846:1:22","nodeType":"VariableDeclaration","scope":3355,"src":"7833:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3335,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:22"},"returnParameters":{"id":3340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3355,"src":"7872:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:22"},"scope":3388,"src":"7801:196:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3366,"nodeType":"Block","src":"8443:290:22","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:22","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:22"},"nodeType":"YulFunctionCall","src":"8530:11:22"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:22","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:22"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:22","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:22"},"nodeType":"YulFunctionCall","src":"8554:23:22"},"nodeType":"YulExpressionStatement","src":"8554:23:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:22","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:22"},"nodeType":"YulFunctionCall","src":"8597:14:22"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:22"},"nodeType":"YulFunctionCall","src":"8590:39:22"},"nodeType":"YulExpressionStatement","src":"8590:39:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:22","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:22"},"nodeType":"YulFunctionCall","src":"8649:14:22"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:22"},"nodeType":"YulFunctionCall","src":"8642:34:22"},"nodeType":"YulExpressionStatement","src":"8642:34:22"},{"nodeType":"YulAssignment","src":"8689:28:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:22","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:22"},"nodeType":"YulFunctionCall","src":"8697:20:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3363,"isOffset":false,"isSlot":false,"src":"8689:4:22","valueSize":1},{"declaration":3358,"isOffset":false,"isSlot":false,"src":"8613:15:22","valueSize":1},{"declaration":3360,"isOffset":false,"isSlot":false,"src":"8665:10:22","valueSize":1}],"id":3365,"nodeType":"InlineAssembly","src":"8496:231:22"}]},"documentation":{"id":3356,"nodeType":"StructuredDocumentation","src":"8003:328:22","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":3367,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:22","nodeType":"FunctionDefinition","parameters":{"id":3361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:22","nodeType":"VariableDeclaration","scope":3367,"src":"8361:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3360,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:22","nodeType":"VariableDeclaration","scope":3367,"src":"8386:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:22"},"returnParameters":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"data","nameLocation":"8437:4:22","nodeType":"VariableDeclaration","scope":3367,"src":"8429:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:22"},"scope":3388,"src":"8336:397:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3386,"nodeType":"Block","src":"9048:80:22","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3381,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"9104:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3382,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"9115:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3378,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3377,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3376,"id":3385,"nodeType":"Return","src":"9058:63:22"}]},"documentation":{"id":3368,"nodeType":"StructuredDocumentation","src":"8739:193:22","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":3387,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:22","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"validator","nameLocation":"8986:9:22","nodeType":"VariableDeclaration","scope":3387,"src":"8978:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3369,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"data","nameLocation":"9010:4:22","nodeType":"VariableDeclaration","scope":3387,"src":"8997:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3371,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:22"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3387,"src":"9039:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:22"},"scope":3388,"src":"8937:191:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3389,"src":"369:8761:22","usedErrors":[]}],"src":"112:9019:22"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"id":23,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[3388],"EIP712":[3592],"IERC5267":[273],"Math":[4458],"ShortString":[2472],"ShortStrings":[2683],"SignedMath":[6416],"StorageSlot":[2793],"Strings":[3022]},"id":3593,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3390,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"113:23:23"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":3391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3593,"sourceUnit":3389,"src":"138:21:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3392,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3593,"sourceUnit":2684,"src":"160:29:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3393,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3593,"sourceUnit":274,"src":"190:39:23","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3395,"name":"IERC5267","nameLocations":["1837:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":273,"src":"1837:8:23"},"id":3396,"nodeType":"InheritanceSpecifier","src":"1837:8:23"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3394,"nodeType":"StructuredDocumentation","src":"231:1577:23","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"fullyImplemented":true,"id":3592,"linearizedBaseContracts":[3592,273],"name":"EIP712","nameLocation":"1827:6:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3398,"libraryName":{"id":3397,"name":"ShortStrings","nameLocations":["1858:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":2683,"src":"1858:12:23"},"nodeType":"UsingForDirective","src":"1852:25:23"},{"constant":true,"id":3403,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1908:10:23","nodeType":"VariableDeclaration","scope":3592,"src":"1883:141:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1939:84:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3400,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1929:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:95:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3405,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2249:22:23","nodeType":"VariableDeclaration","scope":3592,"src":"2223:48:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2223:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3407,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2303:14:23","nodeType":"VariableDeclaration","scope":3592,"src":"2277:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3409,"mutability":"immutable","name":"_cachedThis","nameLocation":"2349:11:23","nodeType":"VariableDeclaration","scope":3592,"src":"2323:37:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3408,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3411,"mutability":"immutable","name":"_hashedName","nameLocation":"2393:11:23","nodeType":"VariableDeclaration","scope":3592,"src":"2367:37:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3413,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2436:14:23","nodeType":"VariableDeclaration","scope":3592,"src":"2410:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2410:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3416,"mutability":"immutable","name":"_name","nameLocation":"2487:5:23","nodeType":"VariableDeclaration","scope":3592,"src":"2457:35:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"},"typeName":{"id":3415,"nodeType":"UserDefinedTypeName","pathNode":{"id":3414,"name":"ShortString","nameLocations":["2457:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":2472,"src":"2457:11:23"},"referencedDeclaration":2472,"src":"2457:11:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3419,"mutability":"immutable","name":"_version","nameLocation":"2528:8:23","nodeType":"VariableDeclaration","scope":3592,"src":"2498:38:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"},"typeName":{"id":3418,"nodeType":"UserDefinedTypeName","pathNode":{"id":3417,"name":"ShortString","nameLocations":["2498:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":2472,"src":"2498:11:23"},"referencedDeclaration":2472,"src":"2498:11:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3421,"mutability":"mutable","name":"_nameFallback","nameLocation":"2557:13:23","nodeType":"VariableDeclaration","scope":3592,"src":"2542:28:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3420,"name":"string","nodeType":"ElementaryTypeName","src":"2542:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3423,"mutability":"mutable","name":"_versionFallback","nameLocation":"2591:16:23","nodeType":"VariableDeclaration","scope":3592,"src":"2576:31:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3422,"name":"string","nodeType":"ElementaryTypeName","src":"2576:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3480,"nodeType":"Block","src":"3233:376:23","statements":[{"expression":{"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3431,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"3243:5:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3434,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"3282:13:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3432,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"3251:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:25:23","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2624,"src":"3251:30:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2472_$bound_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"src":"3243:53:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"id":3437,"nodeType":"ExpressionStatement","src":"3243:53:23"},{"expression":{"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3438,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"3306:8:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3441,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"3351:16:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3439,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"3317:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3325:25:23","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2624,"src":"3317:33:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2472_$bound_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3317:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"src":"3306:62:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"id":3444,"nodeType":"ExpressionStatement","src":"3306:62:23"},{"expression":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3445,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"3378:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3449,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"3408:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3447,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:23","typeDescriptions":{}}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3446,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3392:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3392:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3378:36:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3453,"nodeType":"ExpressionStatement","src":"3378:36:23"},{"expression":{"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3454,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"3424:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3458,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"3457:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3451:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3456,"name":"bytes","nodeType":"ElementaryTypeName","src":"3451:5:23","typeDescriptions":{}}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3451:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3455,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3441:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3441:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3424:42:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3462,"nodeType":"ExpressionStatement","src":"3424:42:23"},{"expression":{"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3463,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"3477:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3464,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3494:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3500:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"3494:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3477:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3467,"nodeType":"ExpressionStatement","src":"3477:30:23"},{"expression":{"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3468,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"3517:22:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3469,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"3542:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:48:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3472,"nodeType":"ExpressionStatement","src":"3517:48:23"},{"expression":{"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3473,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"3575:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3476,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3597:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3592","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3592","typeString":"contract EIP712"}],"id":3475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3589:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3474,"name":"address","nodeType":"ElementaryTypeName","src":"3589:7:23","typeDescriptions":{}}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3589:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3575:27:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3479,"nodeType":"ExpressionStatement","src":"3575:27:23"}]},"documentation":{"id":3424,"nodeType":"StructuredDocumentation","src":"2614:559:23","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3481,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"name","nameLocation":"3204:4:23","nodeType":"VariableDeclaration","scope":3481,"src":"3190:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3425,"name":"string","nodeType":"ElementaryTypeName","src":"3190:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3428,"mutability":"mutable","name":"version","nameLocation":"3224:7:23","nodeType":"VariableDeclaration","scope":3481,"src":"3210:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3427,"name":"string","nodeType":"ElementaryTypeName","src":"3210:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3189:43:23"},"returnParameters":{"id":3430,"nodeType":"ParameterList","parameters":[],"src":"3233:0:23"},"scope":3592,"src":"3178:431:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3506,"nodeType":"Block","src":"3757:200:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3489,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3779:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3592","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3592","typeString":"contract EIP712"}],"id":3488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3771:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3487,"name":"address","nodeType":"ElementaryTypeName","src":"3771:7:23","typeDescriptions":{}}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3771:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3491,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"3788:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3771:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3493,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3803:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3809:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"3803:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3495,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"3820:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3803:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3771:63:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3504,"nodeType":"Block","src":"3896:55:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3501,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"3917:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3486,"id":3503,"nodeType":"Return","src":"3910:30:23"}]},"id":3505,"nodeType":"IfStatement","src":"3767:184:23","trueBody":{"id":3500,"nodeType":"Block","src":"3836:54:23","statements":[{"expression":{"id":3498,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"3857:22:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3486,"id":3499,"nodeType":"Return","src":"3850:29:23"}]}}]},"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"3615:75:23","text":" @dev Returns the domain separator for the current chain."},"id":3507,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3704:18:23","nodeType":"FunctionDefinition","parameters":{"id":3483,"nodeType":"ParameterList","parameters":[],"src":"3722:2:23"},"returnParameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3507,"src":"3748:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3748:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3747:9:23"},"scope":3592,"src":"3695:262:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3527,"nodeType":"Block","src":"4027:116:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":3515,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"4065:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3516,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"4077:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3517,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"4090:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3518,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4106:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4112:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"4106:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3522,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4129:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3592","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3592","typeString":"contract EIP712"}],"id":3521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3520,"name":"address","nodeType":"ElementaryTypeName","src":"4121:7:23","typeDescriptions":{}}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4121:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3513,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4054:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4058:6:23","memberName":"encode","nodeType":"MemberAccess","src":"4054:10:23","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:81:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3512,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4044:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4044:92:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3511,"id":3526,"nodeType":"Return","src":"4037:99:23"}]},"id":3528,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3972:21:23","nodeType":"FunctionDefinition","parameters":{"id":3508,"nodeType":"ParameterList","parameters":[],"src":"3993:2:23"},"returnParameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3528,"src":"4018:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4018:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4017:9:23"},"scope":3592,"src":"3963:180:23","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3543,"nodeType":"Block","src":"4854:79:23","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3538,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"4893:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4893:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3540,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"4915:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3536,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"4871:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3388_$","typeString":"type(library ECDSA)"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4877:15:23","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3367,"src":"4871:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4871:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3535,"id":3542,"nodeType":"Return","src":"4864:62:23"}]},"documentation":{"id":3529,"nodeType":"StructuredDocumentation","src":"4149:614:23","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3544,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4777:16:23","nodeType":"FunctionDefinition","parameters":{"id":3532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3531,"mutability":"mutable","name":"structHash","nameLocation":"4802:10:23","nodeType":"VariableDeclaration","scope":3544,"src":"4794:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4794:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4793:20:23"},"returnParameters":{"id":3535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3544,"src":"4845:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4845:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4844:9:23"},"scope":3592,"src":"4768:165:23","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[272],"body":{"id":3590,"nodeType":"Block","src":"5366:288:23","statements":[{"expression":{"components":[{"hexValue":"0f","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5397:7:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[{"id":3567,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"5454:13:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3565,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"5427:5:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5433:20:23","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2651,"src":"5427:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2472_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_userDefinedValueType$_ShortString_$2472_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5427:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":3571,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"5512:16:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3569,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"5482:8:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2472","typeString":"ShortString"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5491:20:23","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2651,"src":"5482:29:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2472_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_userDefinedValueType$_ShortString_$2472_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5482:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3573,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5543:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5549:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"5543:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3577,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5578:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3592","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3592","typeString":"contract EIP712"}],"id":3576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5570:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3575,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:23","typeDescriptions":{}}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5570:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5605:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5597:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5597:7:23","typeDescriptions":{}}},"id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5597:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5635:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5621:13:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"5625:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3584,"nodeType":"ArrayTypeName","src":"5625:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5621:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3588,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5383:264:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3563,"id":3589,"nodeType":"Return","src":"5376:271:23"}]},"documentation":{"id":3545,"nodeType":"StructuredDocumentation","src":"4939:77:23","text":" @dev See {EIP-5267}.\n _Available since v4.9._"},"functionSelector":"84b0196e","id":3591,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5030:12:23","nodeType":"FunctionDefinition","overrides":{"id":3547,"nodeType":"OverrideSpecifier","overrides":[],"src":"5097:8:23"},"parameters":{"id":3546,"nodeType":"ParameterList","parameters":[],"src":"5042:2:23"},"returnParameters":{"id":3563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"fields","nameLocation":"5143:6:23","nodeType":"VariableDeclaration","scope":3591,"src":"5136:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3548,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5136:6:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3551,"mutability":"mutable","name":"name","nameLocation":"5177:4:23","nodeType":"VariableDeclaration","scope":3591,"src":"5163:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3550,"name":"string","nodeType":"ElementaryTypeName","src":"5163:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3553,"mutability":"mutable","name":"version","nameLocation":"5209:7:23","nodeType":"VariableDeclaration","scope":3591,"src":"5195:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3552,"name":"string","nodeType":"ElementaryTypeName","src":"5195:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3555,"mutability":"mutable","name":"chainId","nameLocation":"5238:7:23","nodeType":"VariableDeclaration","scope":3591,"src":"5230:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3557,"mutability":"mutable","name":"verifyingContract","nameLocation":"5267:17:23","nodeType":"VariableDeclaration","scope":3591,"src":"5259:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3556,"name":"address","nodeType":"ElementaryTypeName","src":"5259:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3559,"mutability":"mutable","name":"salt","nameLocation":"5306:4:23","nodeType":"VariableDeclaration","scope":3591,"src":"5298:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5298:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3562,"mutability":"mutable","name":"extensions","nameLocation":"5341:10:23","nodeType":"VariableDeclaration","scope":3591,"src":"5324:27:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3561,"nodeType":"ArrayTypeName","src":"5324:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5122:239:23"},"scope":3592,"src":"5021:633:23","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3593,"src":"1809:3847:23","usedErrors":[2480,2482]}],"src":"113:5544:23"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":24,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4458]},"id":4459,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3594,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3595,"nodeType":"StructuredDocumentation","src":"128:73:24","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4458,"linearizedBaseContracts":[4458],"name":"Math","nameLocation":"210:4:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3599,"members":[{"id":3596,"name":"Down","nameLocation":"245:4:24","nodeType":"EnumValue","src":"245:4:24"},{"id":3597,"name":"Up","nameLocation":"287:2:24","nodeType":"EnumValue","src":"287:2:24"},{"id":3598,"name":"Zero","nameLocation":"318:4:24","nodeType":"EnumValue","src":"318:4:24"}],"name":"Rounding","nameLocation":"226:8:24","nodeType":"EnumDefinition","src":"221:122:24"},{"body":{"id":3616,"nodeType":"Block","src":"480:37:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3609,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"497:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3610,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"501:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3613,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"509:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:24","trueExpression":{"id":3612,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"505:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3608,"id":3615,"nodeType":"Return","src":"490:20:24"}]},"documentation":{"id":3600,"nodeType":"StructuredDocumentation","src":"349:59:24","text":" @dev Returns the largest of two numbers."},"id":3617,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:24","nodeType":"FunctionDefinition","parameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"a","nameLocation":"434:1:24","nodeType":"VariableDeclaration","scope":3617,"src":"426:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3604,"mutability":"mutable","name":"b","nameLocation":"445:1:24","nodeType":"VariableDeclaration","scope":3617,"src":"437:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:24"},"returnParameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3617,"src":"471:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3606,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:24"},"scope":4458,"src":"413:104:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3634,"nodeType":"Block","src":"655:37:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3627,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"672:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3628,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"676:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3631,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"684:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:24","trueExpression":{"id":3630,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"680:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3626,"id":3633,"nodeType":"Return","src":"665:20:24"}]},"documentation":{"id":3618,"nodeType":"StructuredDocumentation","src":"523:60:24","text":" @dev Returns the smallest of two numbers."},"id":3635,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:24","nodeType":"FunctionDefinition","parameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3620,"mutability":"mutable","name":"a","nameLocation":"609:1:24","nodeType":"VariableDeclaration","scope":3635,"src":"601:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3619,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3622,"mutability":"mutable","name":"b","nameLocation":"620:1:24","nodeType":"VariableDeclaration","scope":3635,"src":"612:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3621,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:24"},"returnParameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3635,"src":"646:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:24"},"scope":4458,"src":"588:104:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3657,"nodeType":"Block","src":"876:82:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3645,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"931:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3646,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"935:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3648,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3649,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"941:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3650,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"945:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3652,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3644,"id":3656,"nodeType":"Return","src":"923:28:24"}]},"documentation":{"id":3636,"nodeType":"StructuredDocumentation","src":"698:102:24","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3658,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:24","nodeType":"FunctionDefinition","parameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"a","nameLocation":"830:1:24","nodeType":"VariableDeclaration","scope":3658,"src":"822:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3637,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"b","nameLocation":"841:1:24","nodeType":"VariableDeclaration","scope":3658,"src":"833:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:24"},"returnParameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3658,"src":"867:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3642,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:24"},"scope":4458,"src":"805:153:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3682,"nodeType":"Block","src":"1228:123:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3668,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"1316:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3672,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"1330:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3676,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"1339:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:24","trueExpression":{"hexValue":"30","id":3671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3667,"id":3681,"nodeType":"Return","src":"1309:35:24"}]},"documentation":{"id":3659,"nodeType":"StructuredDocumentation","src":"964:188:24","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3683,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:24","nodeType":"FunctionDefinition","parameters":{"id":3664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3661,"mutability":"mutable","name":"a","nameLocation":"1182:1:24","nodeType":"VariableDeclaration","scope":3683,"src":"1174:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3660,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3663,"mutability":"mutable","name":"b","nameLocation":"1193:1:24","nodeType":"VariableDeclaration","scope":3683,"src":"1185:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:24"},"returnParameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3683,"src":"1219:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:24"},"scope":4458,"src":"1157:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3805,"nodeType":"Block","src":"1765:4115:24","statements":[{"id":3804,"nodeType":"UncheckedBlock","src":"1775:4099:24","statements":[{"assignments":[3696],"declarations":[{"constant":false,"id":3696,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:24","nodeType":"VariableDeclaration","scope":3804,"src":"2096:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3695,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3697,"nodeType":"VariableDeclarationStatement","src":"2096:13:24"},{"assignments":[3699],"declarations":[{"constant":false,"id":3699,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:24","nodeType":"VariableDeclaration","scope":3804,"src":"2168:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3698,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3700,"nodeType":"VariableDeclarationStatement","src":"2168:13:24"},{"AST":{"nodeType":"YulBlock","src":"2248:157:24","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:24","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:24"},"nodeType":"YulFunctionCall","src":"2289:6:24"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:24"},"nodeType":"YulFunctionCall","src":"2276:20:24"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:24","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:24"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:24"},"nodeType":"YulFunctionCall","src":"2322:9:24"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:24"}]},{"nodeType":"YulAssignment","src":"2348:43:24","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:24"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:24"},"nodeType":"YulFunctionCall","src":"2361:14:24"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:24"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:24"},"nodeType":"YulFunctionCall","src":"2377:13:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:24"},"nodeType":"YulFunctionCall","src":"2357:34:24"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:24"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3696,"isOffset":false,"isSlot":false,"src":"2313:5:24","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"2369:5:24","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"2384:5:24","valueSize":1},{"declaration":3699,"isOffset":false,"isSlot":false,"src":"2348:5:24","valueSize":1},{"declaration":3686,"isOffset":false,"isSlot":false,"src":"2283:1:24","valueSize":1},{"declaration":3686,"isOffset":false,"isSlot":false,"src":"2326:1:24","valueSize":1},{"declaration":3688,"isOffset":false,"isSlot":false,"src":"2286:1:24","valueSize":1},{"declaration":3688,"isOffset":false,"isSlot":false,"src":"2329:1:24","valueSize":1}],"id":3701,"nodeType":"InlineAssembly","src":"2239:166:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3702,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"2486:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3710,"nodeType":"IfStatement","src":"2482:368:24","trueBody":{"id":3709,"nodeType":"Block","src":"2498:352:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3705,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"2816:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3706,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"2824:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3694,"id":3708,"nodeType":"Return","src":"2809:26:24"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3712,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"2960:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3713,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"2974:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":3711,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3717,"nodeType":"ExpressionStatement","src":"2952:53:24"},{"assignments":[3719],"declarations":[{"constant":false,"id":3719,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:24","nodeType":"VariableDeclaration","scope":3804,"src":"3261:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3720,"nodeType":"VariableDeclarationStatement","src":"3261:17:24"},{"AST":{"nodeType":"YulBlock","src":"3301:291:24","statements":[{"nodeType":"YulAssignment","src":"3370:38:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:24"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:24"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:24"},"nodeType":"YulFunctionCall","src":"3383:25:24"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:24"}]},{"nodeType":"YulAssignment","src":"3490:41:24","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:24"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:24"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:24"},"nodeType":"YulFunctionCall","src":"3510:20:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:24"},"nodeType":"YulFunctionCall","src":"3499:32:24"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:24"}]},{"nodeType":"YulAssignment","src":"3548:30:24","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:24"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:24"},"nodeType":"YulFunctionCall","src":"3557:21:24"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:24"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3690,"isOffset":false,"isSlot":false,"src":"3396:11:24","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"3524:5:24","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"3548:5:24","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"3561:5:24","valueSize":1},{"declaration":3699,"isOffset":false,"isSlot":false,"src":"3490:5:24","valueSize":1},{"declaration":3699,"isOffset":false,"isSlot":false,"src":"3503:5:24","valueSize":1},{"declaration":3719,"isOffset":false,"isSlot":false,"src":"3370:9:24","valueSize":1},{"declaration":3719,"isOffset":false,"isSlot":false,"src":"3513:9:24","valueSize":1},{"declaration":3719,"isOffset":false,"isSlot":false,"src":"3568:9:24","valueSize":1},{"declaration":3686,"isOffset":false,"isSlot":false,"src":"3390:1:24","valueSize":1},{"declaration":3688,"isOffset":false,"isSlot":false,"src":"3393:1:24","valueSize":1}],"id":3721,"nodeType":"InlineAssembly","src":"3292:300:24"},{"assignments":[3723],"declarations":[{"constant":false,"id":3723,"mutability":"mutable","name":"twos","nameLocation":"3907:4:24","nodeType":"VariableDeclaration","scope":3804,"src":"3899:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3722,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3731,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3724,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"3914:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:24","subExpression":{"id":3725,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"3930:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3729,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:24"},{"AST":{"nodeType":"YulBlock","src":"3969:362:24","statements":[{"nodeType":"YulAssignment","src":"4034:37:24","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:24"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:24"},"nodeType":"YulFunctionCall","src":"4049:22:24"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:24"}]},{"nodeType":"YulAssignment","src":"4138:25:24","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:24"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:24"},"nodeType":"YulFunctionCall","src":"4147:16:24"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:24"}]},{"nodeType":"YulAssignment","src":"4278:39:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:24","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:24"},"nodeType":"YulFunctionCall","src":"4294:12:24"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:24"},"nodeType":"YulFunctionCall","src":"4290:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:24"},"nodeType":"YulFunctionCall","src":"4286:31:24"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:24"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3690,"isOffset":false,"isSlot":false,"src":"4034:11:24","valueSize":1},{"declaration":3690,"isOffset":false,"isSlot":false,"src":"4053:11:24","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"4138:5:24","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"4151:5:24","valueSize":1},{"declaration":3723,"isOffset":false,"isSlot":false,"src":"4066:4:24","valueSize":1},{"declaration":3723,"isOffset":false,"isSlot":false,"src":"4158:4:24","valueSize":1},{"declaration":3723,"isOffset":false,"isSlot":false,"src":"4278:4:24","valueSize":1},{"declaration":3723,"isOffset":false,"isSlot":false,"src":"4301:4:24","valueSize":1},{"declaration":3723,"isOffset":false,"isSlot":false,"src":"4308:4:24","valueSize":1}],"id":3732,"nodeType":"InlineAssembly","src":"3960:371:24"},{"expression":{"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3733,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"4397:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3734,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"4406:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3735,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"4414:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3738,"nodeType":"ExpressionStatement","src":"4397:21:24"},{"assignments":[3740],"declarations":[{"constant":false,"id":3740,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:24","nodeType":"VariableDeclaration","scope":3804,"src":"4736:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3747,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3742,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"4759:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:24"},{"expression":{"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3748,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"4992:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3750,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"5007:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3751,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"5021:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3755,"nodeType":"ExpressionStatement","src":"4992:36:24"},{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3756,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"5061:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3758,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"5076:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3759,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"5090:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3763,"nodeType":"ExpressionStatement","src":"5061:36:24"},{"expression":{"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3764,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"5131:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3766,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"5146:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3767,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"5160:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3771,"nodeType":"ExpressionStatement","src":"5131:36:24"},{"expression":{"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3772,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"5201:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3774,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"5216:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3775,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"5230:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3779,"nodeType":"ExpressionStatement","src":"5201:36:24"},{"expression":{"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3780,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"5271:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3782,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"5286:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3783,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"5300:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3787,"nodeType":"ExpressionStatement","src":"5271:36:24"},{"expression":{"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3788,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"5342:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3790,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"5357:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3791,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"5371:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3795,"nodeType":"ExpressionStatement","src":"5342:36:24"},{"expression":{"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3796,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"5812:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3797,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"5821:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3798,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"5829:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3801,"nodeType":"ExpressionStatement","src":"5812:24:24"},{"expression":{"id":3802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"5857:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3694,"id":3803,"nodeType":"Return","src":"5850:13:24"}]}]},"documentation":{"id":3684,"nodeType":"StructuredDocumentation","src":"1357:305:24","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3806,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:24","nodeType":"FunctionDefinition","parameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3686,"mutability":"mutable","name":"x","nameLocation":"1691:1:24","nodeType":"VariableDeclaration","scope":3806,"src":"1683:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3685,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3688,"mutability":"mutable","name":"y","nameLocation":"1702:1:24","nodeType":"VariableDeclaration","scope":3806,"src":"1694:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3690,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:24","nodeType":"VariableDeclaration","scope":3806,"src":"1705:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:24"},"returnParameters":{"id":3694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"result","nameLocation":"1757:6:24","nodeType":"VariableDeclaration","scope":3806,"src":"1749:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:24"},"scope":4458,"src":"1667:4213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3849,"nodeType":"Block","src":"6122:189:24","statements":[{"assignments":[3822],"declarations":[{"constant":false,"id":3822,"mutability":"mutable","name":"result","nameLocation":"6140:6:24","nodeType":"VariableDeclaration","scope":3849,"src":"6132:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3821,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3828,"initialValue":{"arguments":[{"id":3824,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"6156:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3825,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"6159:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3826,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"6162:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3823,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3806,3850],"referencedDeclaration":3806,"src":"6149:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:24"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3829,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"6188:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3830,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"6200:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3599_$","typeString":"type(enum Math.Rounding)"}},"id":3831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:24","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3597,"src":"6200:11:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"}},"src":"6188:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3834,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"6222:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3835,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"6225:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3836,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"6228:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3833,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:24","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3846,"nodeType":"IfStatement","src":"6184:98:24","trueBody":{"id":3845,"nodeType":"Block","src":"6246:36:24","statements":[{"expression":{"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3841,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"6260:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3844,"nodeType":"ExpressionStatement","src":"6260:11:24"}]}},{"expression":{"id":3847,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"6298:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3820,"id":3848,"nodeType":"Return","src":"6291:13:24"}]},"documentation":{"id":3807,"nodeType":"StructuredDocumentation","src":"5886:121:24","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3850,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:24","nodeType":"FunctionDefinition","parameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"x","nameLocation":"6036:1:24","nodeType":"VariableDeclaration","scope":3850,"src":"6028:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3808,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3811,"mutability":"mutable","name":"y","nameLocation":"6047:1:24","nodeType":"VariableDeclaration","scope":3850,"src":"6039:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:24","nodeType":"VariableDeclaration","scope":3850,"src":"6050:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3816,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:24","nodeType":"VariableDeclaration","scope":3850,"src":"6071:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"},"typeName":{"id":3815,"nodeType":"UserDefinedTypeName","pathNode":{"id":3814,"name":"Rounding","nameLocations":["6071:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3599,"src":"6071:8:24"},"referencedDeclaration":3599,"src":"6071:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:24"},"returnParameters":{"id":3820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3850,"src":"6113:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:24"},"scope":4458,"src":"6012:299:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3961,"nodeType":"Block","src":"6587:1585:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3858,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"6601:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3864,"nodeType":"IfStatement","src":"6597:45:24","trueBody":{"id":3863,"nodeType":"Block","src":"6609:33:24","statements":[{"expression":{"hexValue":"30","id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3857,"id":3862,"nodeType":"Return","src":"6623:8:24"}]}},{"assignments":[3866],"declarations":[{"constant":false,"id":3866,"mutability":"mutable","name":"result","nameLocation":"7329:6:24","nodeType":"VariableDeclaration","scope":3961,"src":"7321:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3875,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3869,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"7349:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3868,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4130,4166],"referencedDeclaration":4130,"src":"7344:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:24"},{"id":3960,"nodeType":"UncheckedBlock","src":"7758:408:24","statements":[{"expression":{"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7782:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3877,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7792:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"7801:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3879,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7805:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3886,"nodeType":"ExpressionStatement","src":"7782:35:24"},{"expression":{"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7831:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7841:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3889,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"7850:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3890,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7854:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3897,"nodeType":"ExpressionStatement","src":"7831:35:24"},{"expression":{"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7880:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7890:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"7899:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7903:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3908,"nodeType":"ExpressionStatement","src":"7880:35:24"},{"expression":{"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7929:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7939:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3911,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"7948:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3912,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7952:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3919,"nodeType":"ExpressionStatement","src":"7929:35:24"},{"expression":{"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7978:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3921,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7988:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"7997:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"8001:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3926,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3930,"nodeType":"ExpressionStatement","src":"7978:35:24"},{"expression":{"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3931,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"8027:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"8037:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3933,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"8046:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3934,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"8050:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3941,"nodeType":"ExpressionStatement","src":"8027:35:24"},{"expression":{"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3942,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"8076:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"8086:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3944,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"8095:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3945,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"8099:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3952,"nodeType":"ExpressionStatement","src":"8076:35:24"},{"expression":{"arguments":[{"id":3954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"8136:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3955,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"8144:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"8148:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3953,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"8132:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3857,"id":3959,"nodeType":"Return","src":"8125:30:24"}]}]},"documentation":{"id":3851,"nodeType":"StructuredDocumentation","src":"6317:208:24","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3962,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:24","nodeType":"FunctionDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3853,"mutability":"mutable","name":"a","nameLocation":"6552:1:24","nodeType":"VariableDeclaration","scope":3962,"src":"6544:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:24"},"returnParameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3962,"src":"6578:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:24"},"scope":4458,"src":"6530:1642:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3997,"nodeType":"Block","src":"8348:161:24","statements":[{"id":3996,"nodeType":"UncheckedBlock","src":"8358:145:24","statements":[{"assignments":[3974],"declarations":[{"constant":false,"id":3974,"mutability":"mutable","name":"result","nameLocation":"8390:6:24","nodeType":"VariableDeclaration","scope":3996,"src":"8382:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3973,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3978,"initialValue":{"arguments":[{"id":3976,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"8404:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3975,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3962,3998],"referencedDeclaration":3962,"src":"8399:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3979,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"8427:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3980,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"8437:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3981,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"8449:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3599_$","typeString":"type(enum Math.Rounding)"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:24","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3597,"src":"8449:11:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"}},"src":"8437:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"8464:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3985,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"8473:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3987,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"8482:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:24","trueExpression":{"hexValue":"31","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3972,"id":3995,"nodeType":"Return","src":"8420:72:24"}]}]},"documentation":{"id":3963,"nodeType":"StructuredDocumentation","src":"8178:89:24","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3998,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:24","nodeType":"FunctionDefinition","parameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3965,"mutability":"mutable","name":"a","nameLocation":"8294:1:24","nodeType":"VariableDeclaration","scope":3998,"src":"8286:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3968,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:24","nodeType":"VariableDeclaration","scope":3998,"src":"8297:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"},"typeName":{"id":3967,"nodeType":"UserDefinedTypeName","pathNode":{"id":3966,"name":"Rounding","nameLocations":["8297:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3599,"src":"8297:8:24"},"referencedDeclaration":3599,"src":"8297:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:24"},"returnParameters":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3998,"src":"8339:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:24"},"scope":4458,"src":"8272:237:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4129,"nodeType":"Block","src":"8694:922:24","statements":[{"assignments":[4007],"declarations":[{"constant":false,"id":4007,"mutability":"mutable","name":"result","nameLocation":"8712:6:24","nodeType":"VariableDeclaration","scope":4129,"src":"8704:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4009,"initialValue":{"hexValue":"30","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:24"},{"id":4126,"nodeType":"UncheckedBlock","src":"8732:855:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"8760:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4024,"nodeType":"IfStatement","src":"8756:99:24","trueBody":{"id":4023,"nodeType":"Block","src":"8778:77:24","statements":[{"expression":{"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"8796:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4018,"nodeType":"ExpressionStatement","src":"8796:13:24"},{"expression":{"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4019,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"8827:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4022,"nodeType":"ExpressionStatement","src":"8827:13:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"8872:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4039,"nodeType":"IfStatement","src":"8868:96:24","trueBody":{"id":4038,"nodeType":"Block","src":"8889:75:24","statements":[{"expression":{"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"8907:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4033,"nodeType":"ExpressionStatement","src":"8907:12:24"},{"expression":{"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4034,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"8937:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4037,"nodeType":"ExpressionStatement","src":"8937:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"8981:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4054,"nodeType":"IfStatement","src":"8977:96:24","trueBody":{"id":4053,"nodeType":"Block","src":"8998:75:24","statements":[{"expression":{"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"9016:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4048,"nodeType":"ExpressionStatement","src":"9016:12:24"},{"expression":{"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"9046:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4052,"nodeType":"ExpressionStatement","src":"9046:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"9090:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4069,"nodeType":"IfStatement","src":"9086:96:24","trueBody":{"id":4068,"nodeType":"Block","src":"9107:75:24","statements":[{"expression":{"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"9125:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4063,"nodeType":"ExpressionStatement","src":"9125:12:24"},{"expression":{"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4064,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"9155:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4067,"nodeType":"ExpressionStatement","src":"9155:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"9199:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4084,"nodeType":"IfStatement","src":"9195:93:24","trueBody":{"id":4083,"nodeType":"Block","src":"9215:73:24","statements":[{"expression":{"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"9233:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4078,"nodeType":"ExpressionStatement","src":"9233:11:24"},{"expression":{"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4079,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"9262:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4082,"nodeType":"ExpressionStatement","src":"9262:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"9305:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4099,"nodeType":"IfStatement","src":"9301:93:24","trueBody":{"id":4098,"nodeType":"Block","src":"9321:73:24","statements":[{"expression":{"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"9339:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4093,"nodeType":"ExpressionStatement","src":"9339:11:24"},{"expression":{"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"9368:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4097,"nodeType":"ExpressionStatement","src":"9368:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"9411:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4114,"nodeType":"IfStatement","src":"9407:93:24","trueBody":{"id":4113,"nodeType":"Block","src":"9427:73:24","statements":[{"expression":{"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"9445:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4108,"nodeType":"ExpressionStatement","src":"9445:11:24"},{"expression":{"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4109,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"9474:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4112,"nodeType":"ExpressionStatement","src":"9474:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"9517:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4125,"nodeType":"IfStatement","src":"9513:64:24","trueBody":{"id":4124,"nodeType":"Block","src":"9533:44:24","statements":[{"expression":{"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4120,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"9551:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4123,"nodeType":"ExpressionStatement","src":"9551:11:24"}]}}]},{"expression":{"id":4127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"9603:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4005,"id":4128,"nodeType":"Return","src":"9596:13:24"}]},"documentation":{"id":3999,"nodeType":"StructuredDocumentation","src":"8515:113:24","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4130,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:24","nodeType":"FunctionDefinition","parameters":{"id":4002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4001,"mutability":"mutable","name":"value","nameLocation":"8655:5:24","nodeType":"VariableDeclaration","scope":4130,"src":"8647:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4000,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:24"},"returnParameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4130,"src":"8685:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:24"},"scope":4458,"src":"8633:983:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4165,"nodeType":"Block","src":"9849:165:24","statements":[{"id":4164,"nodeType":"UncheckedBlock","src":"9859:149:24","statements":[{"assignments":[4142],"declarations":[{"constant":false,"id":4142,"mutability":"mutable","name":"result","nameLocation":"9891:6:24","nodeType":"VariableDeclaration","scope":4164,"src":"9883:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4146,"initialValue":{"arguments":[{"id":4144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"9905:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4143,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4130,4166],"referencedDeclaration":4130,"src":"9900:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4147,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"9932:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4148,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"9942:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4149,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"9954:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3599_$","typeString":"type(enum Math.Rounding)"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:24","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3597,"src":"9954:11:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"}},"src":"9942:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4153,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"9974:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"9983:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:24","trueExpression":{"hexValue":"31","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4140,"id":4163,"nodeType":"Return","src":"9925:72:24"}]}]},"documentation":{"id":4131,"nodeType":"StructuredDocumentation","src":"9622:142:24","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4166,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:24","nodeType":"FunctionDefinition","parameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4133,"mutability":"mutable","name":"value","nameLocation":"9791:5:24","nodeType":"VariableDeclaration","scope":4166,"src":"9783:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4136,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:24","nodeType":"VariableDeclaration","scope":4166,"src":"9798:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"},"typeName":{"id":4135,"nodeType":"UserDefinedTypeName","pathNode":{"id":4134,"name":"Rounding","nameLocations":["9798:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3599,"src":"9798:8:24"},"referencedDeclaration":3599,"src":"9798:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:24"},"returnParameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4166,"src":"9840:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:24"},"scope":4458,"src":"9769:245:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4294,"nodeType":"Block","src":"10201:854:24","statements":[{"assignments":[4175],"declarations":[{"constant":false,"id":4175,"mutability":"mutable","name":"result","nameLocation":"10219:6:24","nodeType":"VariableDeclaration","scope":4294,"src":"10211:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4174,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4177,"initialValue":{"hexValue":"30","id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:24"},{"id":4291,"nodeType":"UncheckedBlock","src":"10239:787:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"10267:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4194,"nodeType":"IfStatement","src":"10263:103:24","trueBody":{"id":4193,"nodeType":"Block","src":"10286:80:24","statements":[{"expression":{"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"10304:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4188,"nodeType":"ExpressionStatement","src":"10304:17:24"},{"expression":{"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4189,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"10339:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4192,"nodeType":"ExpressionStatement","src":"10339:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"10383:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4211,"nodeType":"IfStatement","src":"10379:103:24","trueBody":{"id":4210,"nodeType":"Block","src":"10402:80:24","statements":[{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"10420:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4205,"nodeType":"ExpressionStatement","src":"10420:17:24"},{"expression":{"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"10455:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4209,"nodeType":"ExpressionStatement","src":"10455:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"10499:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4228,"nodeType":"IfStatement","src":"10495:103:24","trueBody":{"id":4227,"nodeType":"Block","src":"10518:80:24","statements":[{"expression":{"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"10536:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4222,"nodeType":"ExpressionStatement","src":"10536:17:24"},{"expression":{"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4223,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"10571:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4226,"nodeType":"ExpressionStatement","src":"10571:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"10615:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4245,"nodeType":"IfStatement","src":"10611:100:24","trueBody":{"id":4244,"nodeType":"Block","src":"10633:78:24","statements":[{"expression":{"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"10651:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4239,"nodeType":"ExpressionStatement","src":"10651:16:24"},{"expression":{"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"10685:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4243,"nodeType":"ExpressionStatement","src":"10685:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"10728:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4262,"nodeType":"IfStatement","src":"10724:100:24","trueBody":{"id":4261,"nodeType":"Block","src":"10746:78:24","statements":[{"expression":{"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"10764:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4256,"nodeType":"ExpressionStatement","src":"10764:16:24"},{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"10798:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4260,"nodeType":"ExpressionStatement","src":"10798:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"10841:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4279,"nodeType":"IfStatement","src":"10837:100:24","trueBody":{"id":4278,"nodeType":"Block","src":"10859:78:24","statements":[{"expression":{"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"10877:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4273,"nodeType":"ExpressionStatement","src":"10877:16:24"},{"expression":{"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"10911:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4277,"nodeType":"ExpressionStatement","src":"10911:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"10954:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4290,"nodeType":"IfStatement","src":"10950:66:24","trueBody":{"id":4289,"nodeType":"Block","src":"10972:44:24","statements":[{"expression":{"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"10990:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4288,"nodeType":"ExpressionStatement","src":"10990:11:24"}]}}]},{"expression":{"id":4292,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"11042:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4173,"id":4293,"nodeType":"Return","src":"11035:13:24"}]},"documentation":{"id":4167,"nodeType":"StructuredDocumentation","src":"10020:114:24","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4295,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:24","nodeType":"FunctionDefinition","parameters":{"id":4170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4169,"mutability":"mutable","name":"value","nameLocation":"10162:5:24","nodeType":"VariableDeclaration","scope":4295,"src":"10154:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4168,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:24"},"returnParameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4295,"src":"10192:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:24"},"scope":4458,"src":"10139:916:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4330,"nodeType":"Block","src":"11290:167:24","statements":[{"id":4329,"nodeType":"UncheckedBlock","src":"11300:151:24","statements":[{"assignments":[4307],"declarations":[{"constant":false,"id":4307,"mutability":"mutable","name":"result","nameLocation":"11332:6:24","nodeType":"VariableDeclaration","scope":4329,"src":"11324:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4306,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4311,"initialValue":{"arguments":[{"id":4309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"11347:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4308,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4295,4331],"referencedDeclaration":4295,"src":"11341:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"11374:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4313,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"11384:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4314,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"11396:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3599_$","typeString":"type(enum Math.Rounding)"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:24","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3597,"src":"11396:11:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"}},"src":"11384:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"11417:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"11426:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:24","trueExpression":{"hexValue":"31","id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4305,"id":4328,"nodeType":"Return","src":"11367:73:24"}]}]},"documentation":{"id":4296,"nodeType":"StructuredDocumentation","src":"11061:143:24","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4331,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:24","nodeType":"FunctionDefinition","parameters":{"id":4302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"value","nameLocation":"11232:5:24","nodeType":"VariableDeclaration","scope":4331,"src":"11224:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4297,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4301,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:24","nodeType":"VariableDeclaration","scope":4331,"src":"11239:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"},"typeName":{"id":4300,"nodeType":"UserDefinedTypeName","pathNode":{"id":4299,"name":"Rounding","nameLocations":["11239:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3599,"src":"11239:8:24"},"referencedDeclaration":3599,"src":"11239:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:24"},"returnParameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4331,"src":"11281:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:24"},"scope":4458,"src":"11209:248:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4417,"nodeType":"Block","src":"11771:600:24","statements":[{"assignments":[4340],"declarations":[{"constant":false,"id":4340,"mutability":"mutable","name":"result","nameLocation":"11789:6:24","nodeType":"VariableDeclaration","scope":4417,"src":"11781:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4339,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4342,"initialValue":{"hexValue":"30","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:24"},{"id":4414,"nodeType":"UncheckedBlock","src":"11809:533:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"11837:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4357,"nodeType":"IfStatement","src":"11833:98:24","trueBody":{"id":4356,"nodeType":"Block","src":"11855:76:24","statements":[{"expression":{"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"11873:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4351,"nodeType":"ExpressionStatement","src":"11873:13:24"},{"expression":{"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4352,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"11904:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4355,"nodeType":"ExpressionStatement","src":"11904:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"11948:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4372,"nodeType":"IfStatement","src":"11944:95:24","trueBody":{"id":4371,"nodeType":"Block","src":"11965:74:24","statements":[{"expression":{"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"11983:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4366,"nodeType":"ExpressionStatement","src":"11983:12:24"},{"expression":{"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4367,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"12013:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4370,"nodeType":"ExpressionStatement","src":"12013:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"12056:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4387,"nodeType":"IfStatement","src":"12052:95:24","trueBody":{"id":4386,"nodeType":"Block","src":"12073:74:24","statements":[{"expression":{"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"12091:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4381,"nodeType":"ExpressionStatement","src":"12091:12:24"},{"expression":{"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"12121:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4385,"nodeType":"ExpressionStatement","src":"12121:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"12164:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4402,"nodeType":"IfStatement","src":"12160:95:24","trueBody":{"id":4401,"nodeType":"Block","src":"12181:74:24","statements":[{"expression":{"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"12199:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4396,"nodeType":"ExpressionStatement","src":"12199:12:24"},{"expression":{"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4397,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"12229:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4400,"nodeType":"ExpressionStatement","src":"12229:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"12272:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4413,"nodeType":"IfStatement","src":"12268:64:24","trueBody":{"id":4412,"nodeType":"Block","src":"12288:44:24","statements":[{"expression":{"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4408,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"12306:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4411,"nodeType":"ExpressionStatement","src":"12306:11:24"}]}}]},{"expression":{"id":4415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"12358:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4338,"id":4416,"nodeType":"Return","src":"12351:13:24"}]},"documentation":{"id":4332,"nodeType":"StructuredDocumentation","src":"11463:240:24","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4418,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:24","nodeType":"FunctionDefinition","parameters":{"id":4335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4334,"mutability":"mutable","name":"value","nameLocation":"11732:5:24","nodeType":"VariableDeclaration","scope":4418,"src":"11724:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4333,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:24"},"returnParameters":{"id":4338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4418,"src":"11762:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4336,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:24"},"scope":4458,"src":"11708:663:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4456,"nodeType":"Block","src":"12608:174:24","statements":[{"id":4455,"nodeType":"UncheckedBlock","src":"12618:158:24","statements":[{"assignments":[4430],"declarations":[{"constant":false,"id":4430,"mutability":"mutable","name":"result","nameLocation":"12650:6:24","nodeType":"VariableDeclaration","scope":4455,"src":"12642:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4429,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4434,"initialValue":{"arguments":[{"id":4432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"12666:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4431,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4418,4457],"referencedDeclaration":4418,"src":"12659:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"12693:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4436,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"12703:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4437,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"12715:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3599_$","typeString":"type(enum Math.Rounding)"}},"id":4438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:24","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3597,"src":"12715:11:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"}},"src":"12703:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"12736:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"12751:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:24","trueExpression":{"hexValue":"31","id":4449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4428,"id":4454,"nodeType":"Return","src":"12686:79:24"}]}]},"documentation":{"id":4419,"nodeType":"StructuredDocumentation","src":"12377:144:24","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4457,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:24","nodeType":"FunctionDefinition","parameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4421,"mutability":"mutable","name":"value","nameLocation":"12550:5:24","nodeType":"VariableDeclaration","scope":4457,"src":"12542:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4420,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4424,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:24","nodeType":"VariableDeclaration","scope":4457,"src":"12557:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"},"typeName":{"id":4423,"nodeType":"UserDefinedTypeName","pathNode":{"id":4422,"name":"Rounding","nameLocations":["12557:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3599,"src":"12557:8:24"},"referencedDeclaration":3599,"src":"12557:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:24"},"returnParameters":{"id":4428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4457,"src":"12599:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:24"},"scope":4458,"src":"12526:256:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4459,"src":"202:12582:24","usedErrors":[]}],"src":"103:12682:24"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"id":25,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5999]},"id":6000,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4460,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4461,"nodeType":"StructuredDocumentation","src":"217:709:25","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":5999,"linearizedBaseContracts":[5999],"name":"SafeCast","nameLocation":"935:8:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":4485,"nodeType":"Block","src":"1339:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"1357:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4472,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4471,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1380:3:25","memberName":"max","nodeType":"MemberAccess","src":"1366:17:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":4469,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4479,"nodeType":"ExpressionStatement","src":"1349:78:25"},{"expression":{"arguments":[{"id":4482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"1452:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4480,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:25","typeDescriptions":{}}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1444:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4468,"id":4484,"nodeType":"Return","src":"1437:21:25"}]},"documentation":{"id":4462,"nodeType":"StructuredDocumentation","src":"950:318:25","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":4486,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:25","nodeType":"FunctionDefinition","parameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4464,"mutability":"mutable","name":"value","nameLocation":"1300:5:25","nodeType":"VariableDeclaration","scope":4486,"src":"1292:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4463,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:25"},"returnParameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4486,"src":"1330:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4466,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:25"},"scope":5999,"src":"1273:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4510,"nodeType":"Block","src":"1860:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"1878:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4497,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4496,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1887:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1901:3:25","memberName":"max","nodeType":"MemberAccess","src":"1887:17:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":4494,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1870:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4504,"nodeType":"ExpressionStatement","src":"1870:78:25"},{"expression":{"arguments":[{"id":4507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"1973:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4505,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:25","typeDescriptions":{}}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1965:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4493,"id":4509,"nodeType":"Return","src":"1958:21:25"}]},"documentation":{"id":4487,"nodeType":"StructuredDocumentation","src":"1471:318:25","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":4511,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:25","nodeType":"FunctionDefinition","parameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"value","nameLocation":"1821:5:25","nodeType":"VariableDeclaration","scope":4511,"src":"1813:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:25"},"returnParameters":{"id":4493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4511,"src":"1851:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4491,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:25"},"scope":5999,"src":"1794:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4535,"nodeType":"Block","src":"2381:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"2399:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4522,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4521,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2408:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2422:3:25","memberName":"max","nodeType":"MemberAccess","src":"2408:17:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":4519,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2391:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4529,"nodeType":"ExpressionStatement","src":"2391:78:25"},{"expression":{"arguments":[{"id":4532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"2494:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4530,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:25","typeDescriptions":{}}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2486:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4518,"id":4534,"nodeType":"Return","src":"2479:21:25"}]},"documentation":{"id":4512,"nodeType":"StructuredDocumentation","src":"1992:318:25","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":4536,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:25","nodeType":"FunctionDefinition","parameters":{"id":4515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4514,"mutability":"mutable","name":"value","nameLocation":"2342:5:25","nodeType":"VariableDeclaration","scope":4536,"src":"2334:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4513,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:25"},"returnParameters":{"id":4518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4536,"src":"2372:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4516,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:25"},"scope":5999,"src":"2315:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4560,"nodeType":"Block","src":"2902:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"2920:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4547,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4546,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2929:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2943:3:25","memberName":"max","nodeType":"MemberAccess","src":"2929:17:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":4552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":4544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4554,"nodeType":"ExpressionStatement","src":"2912:78:25"},{"expression":{"arguments":[{"id":4557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"3015:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4555,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:25","typeDescriptions":{}}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3007:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4543,"id":4559,"nodeType":"Return","src":"3000:21:25"}]},"documentation":{"id":4537,"nodeType":"StructuredDocumentation","src":"2513:318:25","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":4561,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:25","nodeType":"FunctionDefinition","parameters":{"id":4540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4539,"mutability":"mutable","name":"value","nameLocation":"2863:5:25","nodeType":"VariableDeclaration","scope":4561,"src":"2855:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4538,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:25"},"returnParameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4561,"src":"2893:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4541,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:25"},"scope":5999,"src":"2836:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4585,"nodeType":"Block","src":"3423:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"3441:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4572,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4571,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3450:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3464:3:25","memberName":"max","nodeType":"MemberAccess","src":"3450:17:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":4577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":4569,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3433:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4579,"nodeType":"ExpressionStatement","src":"3433:78:25"},{"expression":{"arguments":[{"id":4582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"3536:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4580,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:25","typeDescriptions":{}}},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3528:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4568,"id":4584,"nodeType":"Return","src":"3521:21:25"}]},"documentation":{"id":4562,"nodeType":"StructuredDocumentation","src":"3034:318:25","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":4586,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:25","nodeType":"FunctionDefinition","parameters":{"id":4565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"value","nameLocation":"3384:5:25","nodeType":"VariableDeclaration","scope":4586,"src":"3376:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:25"},"returnParameters":{"id":4568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4586,"src":"3414:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4566,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:25"},"scope":5999,"src":"3357:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4610,"nodeType":"Block","src":"3944:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"3962:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4597,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4596,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3971:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3985:3:25","memberName":"max","nodeType":"MemberAccess","src":"3971:17:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":4594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3954:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4604,"nodeType":"ExpressionStatement","src":"3954:78:25"},{"expression":{"arguments":[{"id":4607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"4057:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4605,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:25","typeDescriptions":{}}},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4593,"id":4609,"nodeType":"Return","src":"4042:21:25"}]},"documentation":{"id":4587,"nodeType":"StructuredDocumentation","src":"3555:318:25","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":4611,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:25","nodeType":"FunctionDefinition","parameters":{"id":4590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4589,"mutability":"mutable","name":"value","nameLocation":"3905:5:25","nodeType":"VariableDeclaration","scope":4611,"src":"3897:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4588,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:25"},"returnParameters":{"id":4593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4611,"src":"3935:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4591,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:25"},"scope":5999,"src":"3878:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4635,"nodeType":"Block","src":"4465:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"4483:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4622,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4621,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4492:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4506:3:25","memberName":"max","nodeType":"MemberAccess","src":"4492:17:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":4619,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4475:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4629,"nodeType":"ExpressionStatement","src":"4475:78:25"},{"expression":{"arguments":[{"id":4632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"4578:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4630,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:25","typeDescriptions":{}}},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4618,"id":4634,"nodeType":"Return","src":"4563:21:25"}]},"documentation":{"id":4612,"nodeType":"StructuredDocumentation","src":"4076:318:25","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":4636,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:25","nodeType":"FunctionDefinition","parameters":{"id":4615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4614,"mutability":"mutable","name":"value","nameLocation":"4426:5:25","nodeType":"VariableDeclaration","scope":4636,"src":"4418:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4613,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:25"},"returnParameters":{"id":4618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4636,"src":"4456:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4616,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:25"},"scope":5999,"src":"4399:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4660,"nodeType":"Block","src":"4986:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"5004:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4647,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4646,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5013:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5027:3:25","memberName":"max","nodeType":"MemberAccess","src":"5013:17:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":4644,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4996:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4654,"nodeType":"ExpressionStatement","src":"4996:78:25"},{"expression":{"arguments":[{"id":4657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"5099:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4655,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:25","typeDescriptions":{}}},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4643,"id":4659,"nodeType":"Return","src":"5084:21:25"}]},"documentation":{"id":4637,"nodeType":"StructuredDocumentation","src":"4597:318:25","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":4661,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:25","nodeType":"FunctionDefinition","parameters":{"id":4640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4639,"mutability":"mutable","name":"value","nameLocation":"4947:5:25","nodeType":"VariableDeclaration","scope":4661,"src":"4939:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4638,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:25"},"returnParameters":{"id":4643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4661,"src":"4977:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4641,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:25"},"scope":5999,"src":"4920:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4685,"nodeType":"Block","src":"5507:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"5525:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4672,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4671,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5534:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5548:3:25","memberName":"max","nodeType":"MemberAccess","src":"5534:17:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":4669,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4679,"nodeType":"ExpressionStatement","src":"5517:78:25"},{"expression":{"arguments":[{"id":4682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"5620:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4680,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:25","typeDescriptions":{}}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4668,"id":4684,"nodeType":"Return","src":"5605:21:25"}]},"documentation":{"id":4662,"nodeType":"StructuredDocumentation","src":"5118:318:25","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":4686,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:25","nodeType":"FunctionDefinition","parameters":{"id":4665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4664,"mutability":"mutable","name":"value","nameLocation":"5468:5:25","nodeType":"VariableDeclaration","scope":4686,"src":"5460:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4663,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:25"},"returnParameters":{"id":4668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4686,"src":"5498:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4666,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:25"},"scope":5999,"src":"5441:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4710,"nodeType":"Block","src":"6028:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"6046:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4697,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4696,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6055:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6069:3:25","memberName":"max","nodeType":"MemberAccess","src":"6055:17:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":4694,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4704,"nodeType":"ExpressionStatement","src":"6038:78:25"},{"expression":{"arguments":[{"id":4707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"6141:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4705,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:25","typeDescriptions":{}}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6133:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4693,"id":4709,"nodeType":"Return","src":"6126:21:25"}]},"documentation":{"id":4687,"nodeType":"StructuredDocumentation","src":"5639:318:25","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":4711,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:25","nodeType":"FunctionDefinition","parameters":{"id":4690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4689,"mutability":"mutable","name":"value","nameLocation":"5989:5:25","nodeType":"VariableDeclaration","scope":4711,"src":"5981:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4688,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:25"},"returnParameters":{"id":4693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4711,"src":"6019:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4691,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:25"},"scope":5999,"src":"5962:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4735,"nodeType":"Block","src":"6549:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"6567:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4722,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4721,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6576:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6590:3:25","memberName":"max","nodeType":"MemberAccess","src":"6576:17:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":4719,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6559:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4729,"nodeType":"ExpressionStatement","src":"6559:78:25"},{"expression":{"arguments":[{"id":4732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"6662:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4730,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:25","typeDescriptions":{}}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4718,"id":4734,"nodeType":"Return","src":"6647:21:25"}]},"documentation":{"id":4712,"nodeType":"StructuredDocumentation","src":"6160:318:25","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":4736,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:25","nodeType":"FunctionDefinition","parameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"value","nameLocation":"6510:5:25","nodeType":"VariableDeclaration","scope":4736,"src":"6502:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:25"},"returnParameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4736,"src":"6540:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4716,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:25"},"scope":5999,"src":"6483:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4760,"nodeType":"Block","src":"7070:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"7088:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4747,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4746,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7097:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7111:3:25","memberName":"max","nodeType":"MemberAccess","src":"7097:17:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":4744,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7080:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4754,"nodeType":"ExpressionStatement","src":"7080:78:25"},{"expression":{"arguments":[{"id":4757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"7183:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4755,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:25","typeDescriptions":{}}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7175:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4743,"id":4759,"nodeType":"Return","src":"7168:21:25"}]},"documentation":{"id":4737,"nodeType":"StructuredDocumentation","src":"6681:318:25","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":4761,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:25","nodeType":"FunctionDefinition","parameters":{"id":4740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4739,"mutability":"mutable","name":"value","nameLocation":"7031:5:25","nodeType":"VariableDeclaration","scope":4761,"src":"7023:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4738,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:25"},"returnParameters":{"id":4743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4761,"src":"7061:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4741,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:25"},"scope":5999,"src":"7004:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4785,"nodeType":"Block","src":"7591:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"7609:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4772,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4771,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7618:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7632:3:25","memberName":"max","nodeType":"MemberAccess","src":"7618:17:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":4769,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7601:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4779,"nodeType":"ExpressionStatement","src":"7601:78:25"},{"expression":{"arguments":[{"id":4782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"7704:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4780,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:25","typeDescriptions":{}}},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7696:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4768,"id":4784,"nodeType":"Return","src":"7689:21:25"}]},"documentation":{"id":4762,"nodeType":"StructuredDocumentation","src":"7202:318:25","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":4786,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:25","nodeType":"FunctionDefinition","parameters":{"id":4765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4764,"mutability":"mutable","name":"value","nameLocation":"7552:5:25","nodeType":"VariableDeclaration","scope":4786,"src":"7544:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4763,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:25"},"returnParameters":{"id":4768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4786,"src":"7582:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4766,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:25"},"scope":5999,"src":"7525:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4810,"nodeType":"Block","src":"8112:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"8130:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4797,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4796,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8139:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8153:3:25","memberName":"max","nodeType":"MemberAccess","src":"8139:17:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":4794,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4804,"nodeType":"ExpressionStatement","src":"8122:78:25"},{"expression":{"arguments":[{"id":4807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"8225:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4805,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:25","typeDescriptions":{}}},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8217:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4793,"id":4809,"nodeType":"Return","src":"8210:21:25"}]},"documentation":{"id":4787,"nodeType":"StructuredDocumentation","src":"7723:318:25","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":4811,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:25","nodeType":"FunctionDefinition","parameters":{"id":4790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4789,"mutability":"mutable","name":"value","nameLocation":"8073:5:25","nodeType":"VariableDeclaration","scope":4811,"src":"8065:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4788,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:25"},"returnParameters":{"id":4793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4811,"src":"8103:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4791,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:25"},"scope":5999,"src":"8046:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4835,"nodeType":"Block","src":"8633:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"8651:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4822,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4821,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8660:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8674:3:25","memberName":"max","nodeType":"MemberAccess","src":"8660:17:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":4819,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8643:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4829,"nodeType":"ExpressionStatement","src":"8643:78:25"},{"expression":{"arguments":[{"id":4832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"8746:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4830,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:25","typeDescriptions":{}}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4818,"id":4834,"nodeType":"Return","src":"8731:21:25"}]},"documentation":{"id":4812,"nodeType":"StructuredDocumentation","src":"8244:318:25","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":4836,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:25","nodeType":"FunctionDefinition","parameters":{"id":4815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4814,"mutability":"mutable","name":"value","nameLocation":"8594:5:25","nodeType":"VariableDeclaration","scope":4836,"src":"8586:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4813,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:25"},"returnParameters":{"id":4818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4836,"src":"8624:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4816,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:25"},"scope":5999,"src":"8567:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4860,"nodeType":"Block","src":"9154:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"9172:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4847,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4846,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9181:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9195:3:25","memberName":"max","nodeType":"MemberAccess","src":"9181:17:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":4844,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9164:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4854,"nodeType":"ExpressionStatement","src":"9164:78:25"},{"expression":{"arguments":[{"id":4857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"9267:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4855,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:25","typeDescriptions":{}}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9259:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4843,"id":4859,"nodeType":"Return","src":"9252:21:25"}]},"documentation":{"id":4837,"nodeType":"StructuredDocumentation","src":"8765:318:25","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":4861,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:25","nodeType":"FunctionDefinition","parameters":{"id":4840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4839,"mutability":"mutable","name":"value","nameLocation":"9115:5:25","nodeType":"VariableDeclaration","scope":4861,"src":"9107:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4838,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:25"},"returnParameters":{"id":4843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4861,"src":"9145:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4841,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:25"},"scope":5999,"src":"9088:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4885,"nodeType":"Block","src":"9675:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"9693:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4872,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4871,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9702:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9716:3:25","memberName":"max","nodeType":"MemberAccess","src":"9702:17:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":4869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9685:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4879,"nodeType":"ExpressionStatement","src":"9685:78:25"},{"expression":{"arguments":[{"id":4882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"9788:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4880,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:25","typeDescriptions":{}}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4868,"id":4884,"nodeType":"Return","src":"9773:21:25"}]},"documentation":{"id":4862,"nodeType":"StructuredDocumentation","src":"9286:318:25","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":4886,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:25","nodeType":"FunctionDefinition","parameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"value","nameLocation":"9636:5:25","nodeType":"VariableDeclaration","scope":4886,"src":"9628:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4863,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:25"},"returnParameters":{"id":4868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4886,"src":"9666:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4866,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:25"},"scope":5999,"src":"9609:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4910,"nodeType":"Block","src":"10196:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"10214:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4897,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4896,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10237:3:25","memberName":"max","nodeType":"MemberAccess","src":"10223:17:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":4894,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10206:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4904,"nodeType":"ExpressionStatement","src":"10206:78:25"},{"expression":{"arguments":[{"id":4907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"10309:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4905,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:25","typeDescriptions":{}}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10301:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4893,"id":4909,"nodeType":"Return","src":"10294:21:25"}]},"documentation":{"id":4887,"nodeType":"StructuredDocumentation","src":"9807:318:25","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":4911,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:25","nodeType":"FunctionDefinition","parameters":{"id":4890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4889,"mutability":"mutable","name":"value","nameLocation":"10157:5:25","nodeType":"VariableDeclaration","scope":4911,"src":"10149:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4888,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:25"},"returnParameters":{"id":4893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4911,"src":"10187:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4891,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:25"},"scope":5999,"src":"10130:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4935,"nodeType":"Block","src":"10717:126:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"10735:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4922,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4921,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10744:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10758:3:25","memberName":"max","nodeType":"MemberAccess","src":"10744:17:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":4919,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10727:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4929,"nodeType":"ExpressionStatement","src":"10727:78:25"},{"expression":{"arguments":[{"id":4932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"10830:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4930,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:25","typeDescriptions":{}}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10822:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4918,"id":4934,"nodeType":"Return","src":"10815:21:25"}]},"documentation":{"id":4912,"nodeType":"StructuredDocumentation","src":"10328:318:25","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":4936,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:25","nodeType":"FunctionDefinition","parameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4914,"mutability":"mutable","name":"value","nameLocation":"10678:5:25","nodeType":"VariableDeclaration","scope":4936,"src":"10670:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4913,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:25"},"returnParameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4936,"src":"10708:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4916,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:25"},"scope":5999,"src":"10651:192:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4960,"nodeType":"Block","src":"11232:123:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"11250:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4947,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4946,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11259:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11272:3:25","memberName":"max","nodeType":"MemberAccess","src":"11259:16:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":4944,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11242:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4954,"nodeType":"ExpressionStatement","src":"11242:76:25"},{"expression":{"arguments":[{"id":4957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"11342:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4955,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:25","typeDescriptions":{}}},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4943,"id":4959,"nodeType":"Return","src":"11328:20:25"}]},"documentation":{"id":4937,"nodeType":"StructuredDocumentation","src":"10849:314:25","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":4961,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:25","nodeType":"FunctionDefinition","parameters":{"id":4940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4939,"mutability":"mutable","name":"value","nameLocation":"11194:5:25","nodeType":"VariableDeclaration","scope":4961,"src":"11186:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4938,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:25"},"returnParameters":{"id":4943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4961,"src":"11224:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4941,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:25"},"scope":5999,"src":"11168:187:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4985,"nodeType":"Block","src":"11744:123:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"11762:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4972,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4971,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11771:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11784:3:25","memberName":"max","nodeType":"MemberAccess","src":"11771:16:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":4969,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11754:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4979,"nodeType":"ExpressionStatement","src":"11754:76:25"},{"expression":{"arguments":[{"id":4982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"11854:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4980,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:25","typeDescriptions":{}}},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4968,"id":4984,"nodeType":"Return","src":"11840:20:25"}]},"documentation":{"id":4962,"nodeType":"StructuredDocumentation","src":"11361:314:25","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":4986,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:25","nodeType":"FunctionDefinition","parameters":{"id":4965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4964,"mutability":"mutable","name":"value","nameLocation":"11706:5:25","nodeType":"VariableDeclaration","scope":4986,"src":"11698:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4963,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:25"},"returnParameters":{"id":4968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4986,"src":"11736:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4966,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:25"},"scope":5999,"src":"11680:187:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5010,"nodeType":"Block","src":"12256:123:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"12274:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4997,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4996,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12296:3:25","memberName":"max","nodeType":"MemberAccess","src":"12283:16:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":5002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":4994,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5004,"nodeType":"ExpressionStatement","src":"12266:76:25"},{"expression":{"arguments":[{"id":5007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"12366:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5005,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:25","typeDescriptions":{}}},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12359:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4993,"id":5009,"nodeType":"Return","src":"12352:20:25"}]},"documentation":{"id":4987,"nodeType":"StructuredDocumentation","src":"11873:314:25","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":5011,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:25","nodeType":"FunctionDefinition","parameters":{"id":4990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4989,"mutability":"mutable","name":"value","nameLocation":"12218:5:25","nodeType":"VariableDeclaration","scope":5011,"src":"12210:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4988,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:25"},"returnParameters":{"id":4993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5011,"src":"12248:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4991,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:25"},"scope":5999,"src":"12192:187:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5035,"nodeType":"Block","src":"12768:123:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"12786:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5022,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5021,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12795:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12808:3:25","memberName":"max","nodeType":"MemberAccess","src":"12795:16:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":5019,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12778:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5029,"nodeType":"ExpressionStatement","src":"12778:76:25"},{"expression":{"arguments":[{"id":5032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"12878:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5030,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:25","typeDescriptions":{}}},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12871:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5018,"id":5034,"nodeType":"Return","src":"12864:20:25"}]},"documentation":{"id":5012,"nodeType":"StructuredDocumentation","src":"12385:314:25","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5036,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:25","nodeType":"FunctionDefinition","parameters":{"id":5015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5014,"mutability":"mutable","name":"value","nameLocation":"12730:5:25","nodeType":"VariableDeclaration","scope":5036,"src":"12722:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5013,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:25"},"returnParameters":{"id":5018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5036,"src":"12760:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5016,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:25"},"scope":5999,"src":"12704:187:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5060,"nodeType":"Block","src":"13280:123:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"13298:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5047,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5046,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13307:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13320:3:25","memberName":"max","nodeType":"MemberAccess","src":"13307:16:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5044,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13290:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5054,"nodeType":"ExpressionStatement","src":"13290:76:25"},{"expression":{"arguments":[{"id":5057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"13390:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5055,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:25","typeDescriptions":{}}},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13383:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5043,"id":5059,"nodeType":"Return","src":"13376:20:25"}]},"documentation":{"id":5037,"nodeType":"StructuredDocumentation","src":"12897:314:25","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":5061,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:25","nodeType":"FunctionDefinition","parameters":{"id":5040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5039,"mutability":"mutable","name":"value","nameLocation":"13242:5:25","nodeType":"VariableDeclaration","scope":5061,"src":"13234:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:25"},"returnParameters":{"id":5043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5061,"src":"13272:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5041,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:25"},"scope":5999,"src":"13216:187:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5085,"nodeType":"Block","src":"13792:123:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"13810:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5072,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5071,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13819:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13832:3:25","memberName":"max","nodeType":"MemberAccess","src":"13819:16:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5069,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13802:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5079,"nodeType":"ExpressionStatement","src":"13802:76:25"},{"expression":{"arguments":[{"id":5082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"13902:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5080,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:25","typeDescriptions":{}}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13895:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5068,"id":5084,"nodeType":"Return","src":"13888:20:25"}]},"documentation":{"id":5062,"nodeType":"StructuredDocumentation","src":"13409:314:25","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5086,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:25","nodeType":"FunctionDefinition","parameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"value","nameLocation":"13754:5:25","nodeType":"VariableDeclaration","scope":5086,"src":"13746:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:25"},"returnParameters":{"id":5068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5086,"src":"13784:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5066,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:25"},"scope":5999,"src":"13728:187:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5110,"nodeType":"Block","src":"14304:123:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"14322:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5097,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14331:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14344:3:25","memberName":"max","nodeType":"MemberAccess","src":"14331:16:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5094,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14314:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5104,"nodeType":"ExpressionStatement","src":"14314:76:25"},{"expression":{"arguments":[{"id":5107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"14414:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5105,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:25","typeDescriptions":{}}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14407:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5093,"id":5109,"nodeType":"Return","src":"14400:20:25"}]},"documentation":{"id":5087,"nodeType":"StructuredDocumentation","src":"13921:314:25","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5111,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:25","nodeType":"FunctionDefinition","parameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"value","nameLocation":"14266:5:25","nodeType":"VariableDeclaration","scope":5111,"src":"14258:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5088,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:25"},"returnParameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5111,"src":"14296:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5091,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:25"},"scope":5999,"src":"14240:187:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5135,"nodeType":"Block","src":"14816:123:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"14834:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5122,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5121,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14843:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14856:3:25","memberName":"max","nodeType":"MemberAccess","src":"14843:16:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14826:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5129,"nodeType":"ExpressionStatement","src":"14826:76:25"},{"expression":{"arguments":[{"id":5132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"14926:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5130,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:25","typeDescriptions":{}}},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14919:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5118,"id":5134,"nodeType":"Return","src":"14912:20:25"}]},"documentation":{"id":5112,"nodeType":"StructuredDocumentation","src":"14433:314:25","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5136,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:25","nodeType":"FunctionDefinition","parameters":{"id":5115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5114,"mutability":"mutable","name":"value","nameLocation":"14778:5:25","nodeType":"VariableDeclaration","scope":5136,"src":"14770:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5113,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:25"},"returnParameters":{"id":5118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5136,"src":"14808:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5116,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:25"},"scope":5999,"src":"14752:187:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5160,"nodeType":"Block","src":"15328:123:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"15346:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5147,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5146,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15355:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15368:3:25","memberName":"max","nodeType":"MemberAccess","src":"15355:16:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":5152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5144,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15338:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5154,"nodeType":"ExpressionStatement","src":"15338:76:25"},{"expression":{"arguments":[{"id":5157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"15438:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5155,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:25","typeDescriptions":{}}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15431:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5143,"id":5159,"nodeType":"Return","src":"15424:20:25"}]},"documentation":{"id":5137,"nodeType":"StructuredDocumentation","src":"14945:314:25","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":5161,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:25","nodeType":"FunctionDefinition","parameters":{"id":5140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5139,"mutability":"mutable","name":"value","nameLocation":"15290:5:25","nodeType":"VariableDeclaration","scope":5161,"src":"15282:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5138,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:25"},"returnParameters":{"id":5143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5161,"src":"15320:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5141,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:25"},"scope":5999,"src":"15264:187:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5185,"nodeType":"Block","src":"15840:123:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"15858:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5172,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5171,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15867:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15880:3:25","memberName":"max","nodeType":"MemberAccess","src":"15867:16:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15850:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5179,"nodeType":"ExpressionStatement","src":"15850:76:25"},{"expression":{"arguments":[{"id":5182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"15950:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5180,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:25","typeDescriptions":{}}},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15943:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5168,"id":5184,"nodeType":"Return","src":"15936:20:25"}]},"documentation":{"id":5162,"nodeType":"StructuredDocumentation","src":"15457:314:25","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5186,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:25","nodeType":"FunctionDefinition","parameters":{"id":5165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5164,"mutability":"mutable","name":"value","nameLocation":"15802:5:25","nodeType":"VariableDeclaration","scope":5186,"src":"15794:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5163,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:25"},"returnParameters":{"id":5168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5186,"src":"15832:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5166,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:25"},"scope":5999,"src":"15776:187:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5210,"nodeType":"Block","src":"16352:123:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"16370:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5197,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5196,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16379:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16392:3:25","memberName":"max","nodeType":"MemberAccess","src":"16379:16:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5194,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16362:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5204,"nodeType":"ExpressionStatement","src":"16362:76:25"},{"expression":{"arguments":[{"id":5207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"16462:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5205,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:25","typeDescriptions":{}}},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16455:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5193,"id":5209,"nodeType":"Return","src":"16448:20:25"}]},"documentation":{"id":5187,"nodeType":"StructuredDocumentation","src":"15969:314:25","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":5211,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:25","nodeType":"FunctionDefinition","parameters":{"id":5190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5189,"mutability":"mutable","name":"value","nameLocation":"16314:5:25","nodeType":"VariableDeclaration","scope":5211,"src":"16306:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5188,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:25"},"returnParameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5211,"src":"16344:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5191,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:25"},"scope":5999,"src":"16288:187:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5235,"nodeType":"Block","src":"16858:120:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"16876:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5222,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5221,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16885:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16897:3:25","memberName":"max","nodeType":"MemberAccess","src":"16885:15:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5219,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16868:74:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5229,"nodeType":"ExpressionStatement","src":"16868:74:25"},{"expression":{"arguments":[{"id":5232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"16965:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5230,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:25","typeDescriptions":{}}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16959:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5218,"id":5234,"nodeType":"Return","src":"16952:19:25"}]},"documentation":{"id":5212,"nodeType":"StructuredDocumentation","src":"16481:310:25","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":5236,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:25","nodeType":"FunctionDefinition","parameters":{"id":5215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5214,"mutability":"mutable","name":"value","nameLocation":"16821:5:25","nodeType":"VariableDeclaration","scope":5236,"src":"16813:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5213,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:25"},"returnParameters":{"id":5218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5236,"src":"16851:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5216,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:25"},"scope":5999,"src":"16796:182:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5256,"nodeType":"Block","src":"17252:103:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"17270:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":5244,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17262:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5250,"nodeType":"ExpressionStatement","src":"17262:55:25"},{"expression":{"arguments":[{"id":5253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"17342:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5251,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:25","typeDescriptions":{}}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17334:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5243,"id":5255,"nodeType":"Return","src":"17327:21:25"}]},"documentation":{"id":5237,"nodeType":"StructuredDocumentation","src":"16984:198:25","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":5257,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:25","nodeType":"FunctionDefinition","parameters":{"id":5240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5239,"mutability":"mutable","name":"value","nameLocation":"17213:5:25","nodeType":"VariableDeclaration","scope":5257,"src":"17206:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5238,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:25"},"returnParameters":{"id":5243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5257,"src":"17243:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5241,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:25"},"scope":5999,"src":"17187:168:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5279,"nodeType":"Block","src":"17790:124:25","statements":[{"expression":{"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5265,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"17800:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"17820:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5266,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:25","typeDescriptions":{}}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17813:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5271,"nodeType":"ExpressionStatement","src":"17800:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5273,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"17844:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"17858:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":5272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17836:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5278,"nodeType":"ExpressionStatement","src":"17836:71:25"}]},"documentation":{"id":5258,"nodeType":"StructuredDocumentation","src":"17361:350:25","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":5280,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:25","nodeType":"FunctionDefinition","parameters":{"id":5261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5260,"mutability":"mutable","name":"value","nameLocation":"17741:5:25","nodeType":"VariableDeclaration","scope":5280,"src":"17734:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5259,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:25"},"returnParameters":{"id":5264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5263,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:25","nodeType":"VariableDeclaration","scope":5280,"src":"17771:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5262,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:25"},"scope":5999,"src":"17716:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5302,"nodeType":"Block","src":"18349:124:25","statements":[{"expression":{"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5288,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"18359:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"18379:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5289,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:25","typeDescriptions":{}}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18372:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5294,"nodeType":"ExpressionStatement","src":"18359:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5296,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"18403:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"18417:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":5295,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5301,"nodeType":"ExpressionStatement","src":"18395:71:25"}]},"documentation":{"id":5281,"nodeType":"StructuredDocumentation","src":"17920:350:25","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":5303,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:25","nodeType":"FunctionDefinition","parameters":{"id":5284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5283,"mutability":"mutable","name":"value","nameLocation":"18300:5:25","nodeType":"VariableDeclaration","scope":5303,"src":"18293:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5282,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:25"},"returnParameters":{"id":5287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5286,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:25","nodeType":"VariableDeclaration","scope":5303,"src":"18330:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5285,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:25"},"scope":5999,"src":"18275:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5325,"nodeType":"Block","src":"18908:124:25","statements":[{"expression":{"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5311,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"18918:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"18938:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5312,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:25","typeDescriptions":{}}},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18931:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5317,"nodeType":"ExpressionStatement","src":"18918:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5319,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"18962:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"18976:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":5318,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18954:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5324,"nodeType":"ExpressionStatement","src":"18954:71:25"}]},"documentation":{"id":5304,"nodeType":"StructuredDocumentation","src":"18479:350:25","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":5326,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:25","nodeType":"FunctionDefinition","parameters":{"id":5307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5306,"mutability":"mutable","name":"value","nameLocation":"18859:5:25","nodeType":"VariableDeclaration","scope":5326,"src":"18852:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5305,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:25"},"returnParameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:25","nodeType":"VariableDeclaration","scope":5326,"src":"18889:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5308,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:25"},"scope":5999,"src":"18834:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5348,"nodeType":"Block","src":"19467:124:25","statements":[{"expression":{"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5334,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"19477:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"19497:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5335,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:25","typeDescriptions":{}}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19490:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5340,"nodeType":"ExpressionStatement","src":"19477:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5342,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"19521:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"19535:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":5345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":5341,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19513:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5347,"nodeType":"ExpressionStatement","src":"19513:71:25"}]},"documentation":{"id":5327,"nodeType":"StructuredDocumentation","src":"19038:350:25","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":5349,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:25","nodeType":"FunctionDefinition","parameters":{"id":5330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5329,"mutability":"mutable","name":"value","nameLocation":"19418:5:25","nodeType":"VariableDeclaration","scope":5349,"src":"19411:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5328,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:25"},"returnParameters":{"id":5333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5332,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:25","nodeType":"VariableDeclaration","scope":5349,"src":"19448:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5331,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:25"},"scope":5999,"src":"19393:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5371,"nodeType":"Block","src":"20026:124:25","statements":[{"expression":{"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5357,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"20036:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"20056:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5358,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:25","typeDescriptions":{}}},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20049:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5363,"nodeType":"ExpressionStatement","src":"20036:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"20080:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"20094:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":5368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":5364,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20072:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5370,"nodeType":"ExpressionStatement","src":"20072:71:25"}]},"documentation":{"id":5350,"nodeType":"StructuredDocumentation","src":"19597:350:25","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":5372,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:25","nodeType":"FunctionDefinition","parameters":{"id":5353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5352,"mutability":"mutable","name":"value","nameLocation":"19977:5:25","nodeType":"VariableDeclaration","scope":5372,"src":"19970:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5351,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:25"},"returnParameters":{"id":5356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:25","nodeType":"VariableDeclaration","scope":5372,"src":"20007:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5354,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:25"},"scope":5999,"src":"19952:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5394,"nodeType":"Block","src":"20585:124:25","statements":[{"expression":{"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5380,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"20595:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"20615:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5381,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:25","typeDescriptions":{}}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20608:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5386,"nodeType":"ExpressionStatement","src":"20595:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5388,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"20639:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"20653:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":5391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":5387,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20631:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5393,"nodeType":"ExpressionStatement","src":"20631:71:25"}]},"documentation":{"id":5373,"nodeType":"StructuredDocumentation","src":"20156:350:25","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":5395,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:25","nodeType":"FunctionDefinition","parameters":{"id":5376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5375,"mutability":"mutable","name":"value","nameLocation":"20536:5:25","nodeType":"VariableDeclaration","scope":5395,"src":"20529:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5374,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:25"},"returnParameters":{"id":5379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5378,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:25","nodeType":"VariableDeclaration","scope":5395,"src":"20566:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5377,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:25"},"scope":5999,"src":"20511:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5417,"nodeType":"Block","src":"21144:124:25","statements":[{"expression":{"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5403,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"21154:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"21174:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5404,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:25","typeDescriptions":{}}},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21167:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5409,"nodeType":"ExpressionStatement","src":"21154:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5411,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"21198:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"21212:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":5414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":5410,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21190:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5416,"nodeType":"ExpressionStatement","src":"21190:71:25"}]},"documentation":{"id":5396,"nodeType":"StructuredDocumentation","src":"20715:350:25","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":5418,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:25","nodeType":"FunctionDefinition","parameters":{"id":5399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5398,"mutability":"mutable","name":"value","nameLocation":"21095:5:25","nodeType":"VariableDeclaration","scope":5418,"src":"21088:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5397,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:25"},"returnParameters":{"id":5402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5401,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:25","nodeType":"VariableDeclaration","scope":5418,"src":"21125:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5400,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:25"},"scope":5999,"src":"21070:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5440,"nodeType":"Block","src":"21703:124:25","statements":[{"expression":{"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5426,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"21713:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"21733:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5427,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:25","typeDescriptions":{}}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21726:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5432,"nodeType":"ExpressionStatement","src":"21713:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5434,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"21757:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"21771:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":5437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":5433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21749:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5439,"nodeType":"ExpressionStatement","src":"21749:71:25"}]},"documentation":{"id":5419,"nodeType":"StructuredDocumentation","src":"21274:350:25","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":5441,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:25","nodeType":"FunctionDefinition","parameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"value","nameLocation":"21654:5:25","nodeType":"VariableDeclaration","scope":5441,"src":"21647:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5420,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:25"},"returnParameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:25","nodeType":"VariableDeclaration","scope":5441,"src":"21684:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5423,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:25"},"scope":5999,"src":"21629:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5463,"nodeType":"Block","src":"22262:124:25","statements":[{"expression":{"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5449,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"22272:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"22292:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5450,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:25","typeDescriptions":{}}},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22285:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5455,"nodeType":"ExpressionStatement","src":"22272:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5457,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"22316:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"22330:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":5460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":5456,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22308:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5462,"nodeType":"ExpressionStatement","src":"22308:71:25"}]},"documentation":{"id":5442,"nodeType":"StructuredDocumentation","src":"21833:350:25","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":5464,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:25","nodeType":"FunctionDefinition","parameters":{"id":5445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5444,"mutability":"mutable","name":"value","nameLocation":"22213:5:25","nodeType":"VariableDeclaration","scope":5464,"src":"22206:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5443,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:25"},"returnParameters":{"id":5448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5447,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:25","nodeType":"VariableDeclaration","scope":5464,"src":"22243:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5446,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:25"},"scope":5999,"src":"22188:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5486,"nodeType":"Block","src":"22821:124:25","statements":[{"expression":{"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5472,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"22831:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"22851:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5473,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:25","typeDescriptions":{}}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22844:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5478,"nodeType":"ExpressionStatement","src":"22831:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5480,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"22875:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"22889:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":5483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":5479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22867:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5485,"nodeType":"ExpressionStatement","src":"22867:71:25"}]},"documentation":{"id":5465,"nodeType":"StructuredDocumentation","src":"22392:350:25","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":5487,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:25","nodeType":"FunctionDefinition","parameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"value","nameLocation":"22772:5:25","nodeType":"VariableDeclaration","scope":5487,"src":"22765:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5466,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:25"},"returnParameters":{"id":5471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5470,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:25","nodeType":"VariableDeclaration","scope":5487,"src":"22802:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5469,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:25"},"scope":5999,"src":"22747:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5509,"nodeType":"Block","src":"23380:124:25","statements":[{"expression":{"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"23390:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"23410:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5496,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:25","typeDescriptions":{}}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23403:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5501,"nodeType":"ExpressionStatement","src":"23390:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5503,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"23434:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"23448:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":5506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":5502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23426:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5508,"nodeType":"ExpressionStatement","src":"23426:71:25"}]},"documentation":{"id":5488,"nodeType":"StructuredDocumentation","src":"22951:350:25","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":5510,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:25","nodeType":"FunctionDefinition","parameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"value","nameLocation":"23331:5:25","nodeType":"VariableDeclaration","scope":5510,"src":"23324:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5489,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:25"},"returnParameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:25","nodeType":"VariableDeclaration","scope":5510,"src":"23361:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5492,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:25"},"scope":5999,"src":"23306:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5532,"nodeType":"Block","src":"23939:124:25","statements":[{"expression":{"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5518,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"23949:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"23969:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5519,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:25","typeDescriptions":{}}},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23962:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5524,"nodeType":"ExpressionStatement","src":"23949:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5526,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"23993:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24007:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":5525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23985:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5531,"nodeType":"ExpressionStatement","src":"23985:71:25"}]},"documentation":{"id":5511,"nodeType":"StructuredDocumentation","src":"23510:350:25","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":5533,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:25","nodeType":"FunctionDefinition","parameters":{"id":5514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5513,"mutability":"mutable","name":"value","nameLocation":"23890:5:25","nodeType":"VariableDeclaration","scope":5533,"src":"23883:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5512,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:25"},"returnParameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:25","nodeType":"VariableDeclaration","scope":5533,"src":"23920:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5515,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:25"},"scope":5999,"src":"23865:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5555,"nodeType":"Block","src":"24498:124:25","statements":[{"expression":{"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5541,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"24508:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"24528:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5542,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:25","typeDescriptions":{}}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24521:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5547,"nodeType":"ExpressionStatement","src":"24508:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5549,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"24552:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"24566:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":5548,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24544:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5554,"nodeType":"ExpressionStatement","src":"24544:71:25"}]},"documentation":{"id":5534,"nodeType":"StructuredDocumentation","src":"24069:350:25","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":5556,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:25","nodeType":"FunctionDefinition","parameters":{"id":5537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"value","nameLocation":"24449:5:25","nodeType":"VariableDeclaration","scope":5556,"src":"24442:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5535,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:25"},"returnParameters":{"id":5540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5539,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:25","nodeType":"VariableDeclaration","scope":5556,"src":"24479:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5538,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:25"},"scope":5999,"src":"24424:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5578,"nodeType":"Block","src":"25057:124:25","statements":[{"expression":{"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5564,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"25067:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"25087:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5565,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:25","typeDescriptions":{}}},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25080:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5570,"nodeType":"ExpressionStatement","src":"25067:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5572,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"25111:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"25125:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":5575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":5571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25103:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5577,"nodeType":"ExpressionStatement","src":"25103:71:25"}]},"documentation":{"id":5557,"nodeType":"StructuredDocumentation","src":"24628:350:25","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":5579,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:25","nodeType":"FunctionDefinition","parameters":{"id":5560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5559,"mutability":"mutable","name":"value","nameLocation":"25008:5:25","nodeType":"VariableDeclaration","scope":5579,"src":"25001:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5558,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:25"},"returnParameters":{"id":5563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5562,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:25","nodeType":"VariableDeclaration","scope":5579,"src":"25038:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5561,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:25"},"scope":5999,"src":"24983:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5601,"nodeType":"Block","src":"25616:124:25","statements":[{"expression":{"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5587,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"25626:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"25646:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5588,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:25","typeDescriptions":{}}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25639:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5593,"nodeType":"ExpressionStatement","src":"25626:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5595,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"25670:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"25684:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":5598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":5594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25662:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5600,"nodeType":"ExpressionStatement","src":"25662:71:25"}]},"documentation":{"id":5580,"nodeType":"StructuredDocumentation","src":"25187:350:25","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":5602,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:25","nodeType":"FunctionDefinition","parameters":{"id":5583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5582,"mutability":"mutable","name":"value","nameLocation":"25567:5:25","nodeType":"VariableDeclaration","scope":5602,"src":"25560:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5581,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:25"},"returnParameters":{"id":5586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5585,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:25","nodeType":"VariableDeclaration","scope":5602,"src":"25597:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5584,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:25"},"scope":5999,"src":"25542:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5624,"nodeType":"Block","src":"26175:124:25","statements":[{"expression":{"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5610,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"26185:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"26205:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5611,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:25","typeDescriptions":{}}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26198:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5616,"nodeType":"ExpressionStatement","src":"26185:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5618,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"26229:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"26243:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":5621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":5617,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26221:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5623,"nodeType":"ExpressionStatement","src":"26221:71:25"}]},"documentation":{"id":5603,"nodeType":"StructuredDocumentation","src":"25746:350:25","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":5625,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:25","nodeType":"FunctionDefinition","parameters":{"id":5606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5605,"mutability":"mutable","name":"value","nameLocation":"26126:5:25","nodeType":"VariableDeclaration","scope":5625,"src":"26119:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5604,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:25"},"returnParameters":{"id":5609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5608,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:25","nodeType":"VariableDeclaration","scope":5625,"src":"26156:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5607,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:25"},"scope":5999,"src":"26101:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5647,"nodeType":"Block","src":"26734:124:25","statements":[{"expression":{"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5633,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"26744:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"26764:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5634,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:25","typeDescriptions":{}}},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26757:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5639,"nodeType":"ExpressionStatement","src":"26744:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5641,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"26788:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"26802:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":5644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":5640,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26780:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5646,"nodeType":"ExpressionStatement","src":"26780:71:25"}]},"documentation":{"id":5626,"nodeType":"StructuredDocumentation","src":"26305:350:25","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":5648,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:25","nodeType":"FunctionDefinition","parameters":{"id":5629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5628,"mutability":"mutable","name":"value","nameLocation":"26685:5:25","nodeType":"VariableDeclaration","scope":5648,"src":"26678:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5627,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:25"},"returnParameters":{"id":5632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5631,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:25","nodeType":"VariableDeclaration","scope":5648,"src":"26715:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5630,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:25"},"scope":5999,"src":"26660:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5670,"nodeType":"Block","src":"27293:124:25","statements":[{"expression":{"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5656,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"27303:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"27323:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5657,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:25","typeDescriptions":{}}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27316:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5662,"nodeType":"ExpressionStatement","src":"27303:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5664,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"27347:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"27361:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":5663,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27339:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5669,"nodeType":"ExpressionStatement","src":"27339:71:25"}]},"documentation":{"id":5649,"nodeType":"StructuredDocumentation","src":"26864:350:25","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":5671,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:25","nodeType":"FunctionDefinition","parameters":{"id":5652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5651,"mutability":"mutable","name":"value","nameLocation":"27244:5:25","nodeType":"VariableDeclaration","scope":5671,"src":"27237:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5650,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:25"},"returnParameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:25","nodeType":"VariableDeclaration","scope":5671,"src":"27274:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5653,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:25"},"scope":5999,"src":"27219:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5693,"nodeType":"Block","src":"27852:124:25","statements":[{"expression":{"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5679,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"27862:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"27882:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5680,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:25","typeDescriptions":{}}},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27875:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5685,"nodeType":"ExpressionStatement","src":"27862:26:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5687,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"27906:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"27920:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":5686,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27898:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5692,"nodeType":"ExpressionStatement","src":"27898:71:25"}]},"documentation":{"id":5672,"nodeType":"StructuredDocumentation","src":"27423:350:25","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":5694,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:25","nodeType":"FunctionDefinition","parameters":{"id":5675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5674,"mutability":"mutable","name":"value","nameLocation":"27803:5:25","nodeType":"VariableDeclaration","scope":5694,"src":"27796:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5673,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:25"},"returnParameters":{"id":5678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5677,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:25","nodeType":"VariableDeclaration","scope":5694,"src":"27833:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5676,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:25"},"scope":5999,"src":"27778:198:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5716,"nodeType":"Block","src":"28404:122:25","statements":[{"expression":{"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5702,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"28414:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"28433:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5703,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:25","typeDescriptions":{}}},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28427:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5708,"nodeType":"ExpressionStatement","src":"28414:25:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5710,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"28457:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"28471:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":5713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":5709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28449:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5715,"nodeType":"ExpressionStatement","src":"28449:70:25"}]},"documentation":{"id":5695,"nodeType":"StructuredDocumentation","src":"27982:345:25","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":5717,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:25","nodeType":"FunctionDefinition","parameters":{"id":5698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5697,"mutability":"mutable","name":"value","nameLocation":"28356:5:25","nodeType":"VariableDeclaration","scope":5717,"src":"28349:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5696,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:25"},"returnParameters":{"id":5701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5700,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:25","nodeType":"VariableDeclaration","scope":5717,"src":"28386:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5699,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:25"},"scope":5999,"src":"28332:194:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5739,"nodeType":"Block","src":"28954:122:25","statements":[{"expression":{"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5725,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"28964:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"28983:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5726,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:25","typeDescriptions":{}}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28977:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5731,"nodeType":"ExpressionStatement","src":"28964:25:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5733,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"29007:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"29021:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":5732,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28999:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5738,"nodeType":"ExpressionStatement","src":"28999:70:25"}]},"documentation":{"id":5718,"nodeType":"StructuredDocumentation","src":"28532:345:25","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":5740,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:25","nodeType":"FunctionDefinition","parameters":{"id":5721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5720,"mutability":"mutable","name":"value","nameLocation":"28906:5:25","nodeType":"VariableDeclaration","scope":5740,"src":"28899:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5719,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:25"},"returnParameters":{"id":5724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5723,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:25","nodeType":"VariableDeclaration","scope":5740,"src":"28936:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5722,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:25"},"scope":5999,"src":"28882:194:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5762,"nodeType":"Block","src":"29504:122:25","statements":[{"expression":{"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5748,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"29514:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"29533:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5749,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:25","typeDescriptions":{}}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29527:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5754,"nodeType":"ExpressionStatement","src":"29514:25:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5756,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"29557:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"29571:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":5759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":5755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29549:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5761,"nodeType":"ExpressionStatement","src":"29549:70:25"}]},"documentation":{"id":5741,"nodeType":"StructuredDocumentation","src":"29082:345:25","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":5763,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:25","nodeType":"FunctionDefinition","parameters":{"id":5744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5743,"mutability":"mutable","name":"value","nameLocation":"29456:5:25","nodeType":"VariableDeclaration","scope":5763,"src":"29449:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5742,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:25"},"returnParameters":{"id":5747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5746,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:25","nodeType":"VariableDeclaration","scope":5763,"src":"29486:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5745,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:25"},"scope":5999,"src":"29432:194:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5785,"nodeType":"Block","src":"30054:122:25","statements":[{"expression":{"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5771,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"30064:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"30083:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5772,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:25","typeDescriptions":{}}},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30077:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5777,"nodeType":"ExpressionStatement","src":"30064:25:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5779,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"30107:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"30121:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":5782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":5778,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30099:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5784,"nodeType":"ExpressionStatement","src":"30099:70:25"}]},"documentation":{"id":5764,"nodeType":"StructuredDocumentation","src":"29632:345:25","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5786,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:25","nodeType":"FunctionDefinition","parameters":{"id":5767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"mutability":"mutable","name":"value","nameLocation":"30006:5:25","nodeType":"VariableDeclaration","scope":5786,"src":"29999:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5765,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:25"},"returnParameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5769,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:25","nodeType":"VariableDeclaration","scope":5786,"src":"30036:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5768,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:25"},"scope":5999,"src":"29982:194:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5808,"nodeType":"Block","src":"30604:122:25","statements":[{"expression":{"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5794,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"30614:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"30633:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5795,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:25","typeDescriptions":{}}},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30627:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5800,"nodeType":"ExpressionStatement","src":"30614:25:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5802,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"30657:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"30671:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5801,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30649:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5807,"nodeType":"ExpressionStatement","src":"30649:70:25"}]},"documentation":{"id":5787,"nodeType":"StructuredDocumentation","src":"30182:345:25","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":5809,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:25","nodeType":"FunctionDefinition","parameters":{"id":5790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5789,"mutability":"mutable","name":"value","nameLocation":"30556:5:25","nodeType":"VariableDeclaration","scope":5809,"src":"30549:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5788,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:25"},"returnParameters":{"id":5793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:25","nodeType":"VariableDeclaration","scope":5809,"src":"30586:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5791,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:25"},"scope":5999,"src":"30532:194:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5831,"nodeType":"Block","src":"31154:122:25","statements":[{"expression":{"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5817,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"31164:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"31183:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5818,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:25","typeDescriptions":{}}},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31177:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5823,"nodeType":"ExpressionStatement","src":"31164:25:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5825,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"31207:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"31221:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5824,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31199:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5830,"nodeType":"ExpressionStatement","src":"31199:70:25"}]},"documentation":{"id":5810,"nodeType":"StructuredDocumentation","src":"30732:345:25","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5832,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:25","nodeType":"FunctionDefinition","parameters":{"id":5813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5812,"mutability":"mutable","name":"value","nameLocation":"31106:5:25","nodeType":"VariableDeclaration","scope":5832,"src":"31099:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5811,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:25"},"returnParameters":{"id":5816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5815,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:25","nodeType":"VariableDeclaration","scope":5832,"src":"31136:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5814,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:25"},"scope":5999,"src":"31082:194:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5854,"nodeType":"Block","src":"31704:122:25","statements":[{"expression":{"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5840,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"31714:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"31733:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5841,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:25","typeDescriptions":{}}},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31727:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5846,"nodeType":"ExpressionStatement","src":"31714:25:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5848,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"31757:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"31771:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5847,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31749:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5853,"nodeType":"ExpressionStatement","src":"31749:70:25"}]},"documentation":{"id":5833,"nodeType":"StructuredDocumentation","src":"31282:345:25","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5855,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:25","nodeType":"FunctionDefinition","parameters":{"id":5836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5835,"mutability":"mutable","name":"value","nameLocation":"31656:5:25","nodeType":"VariableDeclaration","scope":5855,"src":"31649:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5834,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:25"},"returnParameters":{"id":5839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5838,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:25","nodeType":"VariableDeclaration","scope":5855,"src":"31686:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5837,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:25"},"scope":5999,"src":"31632:194:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5877,"nodeType":"Block","src":"32254:122:25","statements":[{"expression":{"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5863,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"32264:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"32283:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5864,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:25","typeDescriptions":{}}},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32277:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5869,"nodeType":"ExpressionStatement","src":"32264:25:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5871,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"32307:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"32321:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32299:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5876,"nodeType":"ExpressionStatement","src":"32299:70:25"}]},"documentation":{"id":5856,"nodeType":"StructuredDocumentation","src":"31832:345:25","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5878,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:25","nodeType":"FunctionDefinition","parameters":{"id":5859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5858,"mutability":"mutable","name":"value","nameLocation":"32206:5:25","nodeType":"VariableDeclaration","scope":5878,"src":"32199:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5857,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:25"},"returnParameters":{"id":5862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5861,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:25","nodeType":"VariableDeclaration","scope":5878,"src":"32236:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5860,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:25"},"scope":5999,"src":"32182:194:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5900,"nodeType":"Block","src":"32804:122:25","statements":[{"expression":{"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5886,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"32814:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"32833:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5887,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:25","typeDescriptions":{}}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32827:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5892,"nodeType":"ExpressionStatement","src":"32814:25:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5894,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"32857:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"32871:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5893,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32849:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5899,"nodeType":"ExpressionStatement","src":"32849:70:25"}]},"documentation":{"id":5879,"nodeType":"StructuredDocumentation","src":"32382:345:25","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":5901,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:25","nodeType":"FunctionDefinition","parameters":{"id":5882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5881,"mutability":"mutable","name":"value","nameLocation":"32756:5:25","nodeType":"VariableDeclaration","scope":5901,"src":"32749:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5880,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:25"},"returnParameters":{"id":5885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5884,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:25","nodeType":"VariableDeclaration","scope":5901,"src":"32786:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5883,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:25"},"scope":5999,"src":"32732:194:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5923,"nodeType":"Block","src":"33354:122:25","statements":[{"expression":{"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5909,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"33364:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"33383:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5910,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:25","typeDescriptions":{}}},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33377:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5915,"nodeType":"ExpressionStatement","src":"33364:25:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5917,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"33407:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"33421:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5916,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33399:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5922,"nodeType":"ExpressionStatement","src":"33399:70:25"}]},"documentation":{"id":5902,"nodeType":"StructuredDocumentation","src":"32932:345:25","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5924,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:25","nodeType":"FunctionDefinition","parameters":{"id":5905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5904,"mutability":"mutable","name":"value","nameLocation":"33306:5:25","nodeType":"VariableDeclaration","scope":5924,"src":"33299:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5903,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:25"},"returnParameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5907,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:25","nodeType":"VariableDeclaration","scope":5924,"src":"33336:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5906,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:25"},"scope":5999,"src":"33282:194:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5946,"nodeType":"Block","src":"33904:122:25","statements":[{"expression":{"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5932,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"33914:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"33933:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5933,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:25","typeDescriptions":{}}},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33927:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5938,"nodeType":"ExpressionStatement","src":"33914:25:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5940,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"33957:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"33971:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5939,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33949:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5945,"nodeType":"ExpressionStatement","src":"33949:70:25"}]},"documentation":{"id":5925,"nodeType":"StructuredDocumentation","src":"33482:345:25","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":5947,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:25","nodeType":"FunctionDefinition","parameters":{"id":5928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5927,"mutability":"mutable","name":"value","nameLocation":"33856:5:25","nodeType":"VariableDeclaration","scope":5947,"src":"33849:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5926,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:25"},"returnParameters":{"id":5931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5930,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:25","nodeType":"VariableDeclaration","scope":5947,"src":"33886:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5929,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:25"},"scope":5999,"src":"33832:194:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5969,"nodeType":"Block","src":"34447:120:25","statements":[{"expression":{"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5955,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"34457:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"34475:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5956,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:25","typeDescriptions":{}}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34470:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5961,"nodeType":"ExpressionStatement","src":"34457:24:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5963,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"34499:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"34513:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5962,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34491:69:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5968,"nodeType":"ExpressionStatement","src":"34491:69:25"}]},"documentation":{"id":5948,"nodeType":"StructuredDocumentation","src":"34032:340:25","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":5970,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:25","nodeType":"FunctionDefinition","parameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"value","nameLocation":"34400:5:25","nodeType":"VariableDeclaration","scope":5970,"src":"34393:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5949,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:25"},"returnParameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:25","nodeType":"VariableDeclaration","scope":5970,"src":"34430:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5952,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:25"},"scope":5999,"src":"34377:190:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5997,"nodeType":"Block","src":"34845:233:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"34962:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5983,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5982,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34979:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34992:3:25","memberName":"max","nodeType":"MemberAccess","src":"34979:16:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5980,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:25","typeDescriptions":{}}},"id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34971:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":5989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":5978,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34954:87:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5991,"nodeType":"ExpressionStatement","src":"34954:87:25"},{"expression":{"arguments":[{"id":5994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"35065:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5992,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:25","typeDescriptions":{}}},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35058:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5977,"id":5996,"nodeType":"Return","src":"35051:20:25"}]},"documentation":{"id":5971,"nodeType":"StructuredDocumentation","src":"34573:203:25","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":5998,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:25","nodeType":"FunctionDefinition","parameters":{"id":5974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5973,"mutability":"mutable","name":"value","nameLocation":"34807:5:25","nodeType":"VariableDeclaration","scope":5998,"src":"34799:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5972,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:25"},"returnParameters":{"id":5977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5998,"src":"34837:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5975,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:25"},"scope":5999,"src":"34781:297:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6000,"src":"927:34153:25","usedErrors":[]}],"src":"192:34889:25"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"id":26,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[6311]},"id":6312,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6001,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6002,"nodeType":"StructuredDocumentation","src":"285:196:26","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":6311,"linearizedBaseContracts":[6311],"name":"SafeMath","nameLocation":"490:8:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":6033,"nodeType":"Block","src":"717:140:26","statements":[{"id":6032,"nodeType":"UncheckedBlock","src":"727:124:26","statements":[{"assignments":[6015],"declarations":[{"constant":false,"id":6015,"mutability":"mutable","name":"c","nameLocation":"759:1:26","nodeType":"VariableDeclaration","scope":6032,"src":"751:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6014,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6019,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6016,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"763:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6017,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"767:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6020,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"786:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6021,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"790:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6027,"nodeType":"IfStatement","src":"782:28:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6013,"id":6026,"nodeType":"Return","src":"793:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":6028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":6029,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"838:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6013,"id":6031,"nodeType":"Return","src":"824:16:26"}]}]},"documentation":{"id":6003,"nodeType":"StructuredDocumentation","src":"505:131:26","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":6034,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:26","nodeType":"FunctionDefinition","parameters":{"id":6008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6005,"mutability":"mutable","name":"a","nameLocation":"665:1:26","nodeType":"VariableDeclaration","scope":6034,"src":"657:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6004,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6007,"mutability":"mutable","name":"b","nameLocation":"676:1:26","nodeType":"VariableDeclaration","scope":6034,"src":"668:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6006,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:26"},"returnParameters":{"id":6013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6034,"src":"702:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6009,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6034,"src":"708:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6011,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:26"},"scope":6311,"src":"641:216:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6061,"nodeType":"Block","src":"1078:113:26","statements":[{"id":6060,"nodeType":"UncheckedBlock","src":"1088:97:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6046,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"1116:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6047,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"1120:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6053,"nodeType":"IfStatement","src":"1112:28:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6045,"id":6052,"nodeType":"Return","src":"1123:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":6054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6055,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"1168:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6056,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"1172:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6045,"id":6059,"nodeType":"Return","src":"1154:20:26"}]}]},"documentation":{"id":6035,"nodeType":"StructuredDocumentation","src":"863:134:26","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":6062,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:26","nodeType":"FunctionDefinition","parameters":{"id":6040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"a","nameLocation":"1026:1:26","nodeType":"VariableDeclaration","scope":6062,"src":"1018:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6036,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6039,"mutability":"mutable","name":"b","nameLocation":"1037:1:26","nodeType":"VariableDeclaration","scope":6062,"src":"1029:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:26"},"returnParameters":{"id":6045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6062,"src":"1063:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6041,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6062,"src":"1069:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:26"},"scope":6311,"src":"1002:189:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6103,"nodeType":"Block","src":"1415:417:26","statements":[{"id":6102,"nodeType":"UncheckedBlock","src":"1425:401:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6074,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"1683:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6081,"nodeType":"IfStatement","src":"1679:28:26","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":6077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":6078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6073,"id":6080,"nodeType":"Return","src":"1691:16:26"}},{"assignments":[6083],"declarations":[{"constant":false,"id":6083,"mutability":"mutable","name":"c","nameLocation":"1729:1:26","nodeType":"VariableDeclaration","scope":6102,"src":"1721:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6087,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"1733:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6085,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"1737:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6088,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"1756:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6089,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"1760:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6091,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"1765:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6097,"nodeType":"IfStatement","src":"1752:33:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6095,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6073,"id":6096,"nodeType":"Return","src":"1768:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":6098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":6099,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"1813:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6073,"id":6101,"nodeType":"Return","src":"1799:16:26"}]}]},"documentation":{"id":6063,"nodeType":"StructuredDocumentation","src":"1197:137:26","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":6104,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:26","nodeType":"FunctionDefinition","parameters":{"id":6068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6065,"mutability":"mutable","name":"a","nameLocation":"1363:1:26","nodeType":"VariableDeclaration","scope":6104,"src":"1355:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6064,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6067,"mutability":"mutable","name":"b","nameLocation":"1374:1:26","nodeType":"VariableDeclaration","scope":6104,"src":"1366:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:26"},"returnParameters":{"id":6073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6104,"src":"1400:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6069,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6104,"src":"1406:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6071,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:26"},"scope":6311,"src":"1339:493:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6131,"nodeType":"Block","src":"2057:114:26","statements":[{"id":6130,"nodeType":"UncheckedBlock","src":"2067:98:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6116,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"2095:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6123,"nodeType":"IfStatement","src":"2091:29:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6115,"id":6122,"nodeType":"Return","src":"2103:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":6124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"2148:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6126,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"2152:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6115,"id":6129,"nodeType":"Return","src":"2134:20:26"}]}]},"documentation":{"id":6105,"nodeType":"StructuredDocumentation","src":"1838:138:26","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":6132,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:26","nodeType":"FunctionDefinition","parameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6107,"mutability":"mutable","name":"a","nameLocation":"2005:1:26","nodeType":"VariableDeclaration","scope":6132,"src":"1997:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6109,"mutability":"mutable","name":"b","nameLocation":"2016:1:26","nodeType":"VariableDeclaration","scope":6132,"src":"2008:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:26"},"returnParameters":{"id":6115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6132,"src":"2042:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6111,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6132,"src":"2048:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6113,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:26"},"scope":6311,"src":"1981:190:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6159,"nodeType":"Block","src":"2406:114:26","statements":[{"id":6158,"nodeType":"UncheckedBlock","src":"2416:98:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6144,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"2444:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6151,"nodeType":"IfStatement","src":"2440:29:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6143,"id":6150,"nodeType":"Return","src":"2452:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":6152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"2497:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6154,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"2501:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6156,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6143,"id":6157,"nodeType":"Return","src":"2483:20:26"}]}]},"documentation":{"id":6133,"nodeType":"StructuredDocumentation","src":"2177:148:26","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":6160,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:26","nodeType":"FunctionDefinition","parameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6135,"mutability":"mutable","name":"a","nameLocation":"2354:1:26","nodeType":"VariableDeclaration","scope":6160,"src":"2346:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6137,"mutability":"mutable","name":"b","nameLocation":"2365:1:26","nodeType":"VariableDeclaration","scope":6160,"src":"2357:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:26"},"returnParameters":{"id":6143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6160,"src":"2391:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6139,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6160,"src":"2397:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:26"},"scope":6311,"src":"2330:190:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6174,"nodeType":"Block","src":"2822:29:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6170,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"2839:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6171,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"2843:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6169,"id":6173,"nodeType":"Return","src":"2832:12:26"}]},"documentation":{"id":6161,"nodeType":"StructuredDocumentation","src":"2526:224:26","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":6175,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:26","nodeType":"FunctionDefinition","parameters":{"id":6166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6163,"mutability":"mutable","name":"a","nameLocation":"2776:1:26","nodeType":"VariableDeclaration","scope":6175,"src":"2768:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6162,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6165,"mutability":"mutable","name":"b","nameLocation":"2787:1:26","nodeType":"VariableDeclaration","scope":6175,"src":"2779:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6164,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:26"},"returnParameters":{"id":6169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6175,"src":"2813:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:26"},"scope":6311,"src":"2755:96:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6189,"nodeType":"Block","src":"3189:29:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6185,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"3206:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6186,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"3210:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6184,"id":6188,"nodeType":"Return","src":"3199:12:26"}]},"documentation":{"id":6176,"nodeType":"StructuredDocumentation","src":"2857:260:26","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":6190,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:26","nodeType":"FunctionDefinition","parameters":{"id":6181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6178,"mutability":"mutable","name":"a","nameLocation":"3143:1:26","nodeType":"VariableDeclaration","scope":6190,"src":"3135:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6177,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6180,"mutability":"mutable","name":"b","nameLocation":"3154:1:26","nodeType":"VariableDeclaration","scope":6190,"src":"3146:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6179,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:26"},"returnParameters":{"id":6184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6190,"src":"3180:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6182,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:26"},"scope":6311,"src":"3122:96:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6204,"nodeType":"Block","src":"3532:29:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6200,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"3549:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6201,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"3553:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6199,"id":6203,"nodeType":"Return","src":"3542:12:26"}]},"documentation":{"id":6191,"nodeType":"StructuredDocumentation","src":"3224:236:26","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":6205,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:26","nodeType":"FunctionDefinition","parameters":{"id":6196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6193,"mutability":"mutable","name":"a","nameLocation":"3486:1:26","nodeType":"VariableDeclaration","scope":6205,"src":"3478:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6195,"mutability":"mutable","name":"b","nameLocation":"3497:1:26","nodeType":"VariableDeclaration","scope":6205,"src":"3489:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6194,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:26"},"returnParameters":{"id":6199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6205,"src":"3523:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6197,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:26"},"scope":6311,"src":"3465:96:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6219,"nodeType":"Block","src":"3917:29:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6215,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"3934:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6216,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"3938:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6214,"id":6218,"nodeType":"Return","src":"3927:12:26"}]},"documentation":{"id":6206,"nodeType":"StructuredDocumentation","src":"3567:278:26","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":6220,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:26","nodeType":"FunctionDefinition","parameters":{"id":6211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6208,"mutability":"mutable","name":"a","nameLocation":"3871:1:26","nodeType":"VariableDeclaration","scope":6220,"src":"3863:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6207,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6210,"mutability":"mutable","name":"b","nameLocation":"3882:1:26","nodeType":"VariableDeclaration","scope":6220,"src":"3874:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6209,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:26"},"returnParameters":{"id":6214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6220,"src":"3908:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6212,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:26"},"scope":6311,"src":"3850:96:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6234,"nodeType":"Block","src":"4466:29:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6230,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"4483:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6231,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"4487:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6229,"id":6233,"nodeType":"Return","src":"4476:12:26"}]},"documentation":{"id":6221,"nodeType":"StructuredDocumentation","src":"3952:442:26","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":6235,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:26","nodeType":"FunctionDefinition","parameters":{"id":6226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6223,"mutability":"mutable","name":"a","nameLocation":"4420:1:26","nodeType":"VariableDeclaration","scope":6235,"src":"4412:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6222,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6225,"mutability":"mutable","name":"b","nameLocation":"4431:1:26","nodeType":"VariableDeclaration","scope":6235,"src":"4423:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6224,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:26"},"returnParameters":{"id":6229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6235,"src":"4457:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6227,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:26"},"scope":6311,"src":"4399:96:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6259,"nodeType":"Block","src":"5054:106:26","statements":[{"id":6258,"nodeType":"UncheckedBlock","src":"5064:90:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6248,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"5096:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6249,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6238,"src":"5101:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5096:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6251,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"5104:12:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6247,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5088:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5088:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6253,"nodeType":"ExpressionStatement","src":"5088:29:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6254,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6238,"src":"5138:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6255,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"5142:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5138:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6246,"id":6257,"nodeType":"Return","src":"5131:12:26"}]}]},"documentation":{"id":6236,"nodeType":"StructuredDocumentation","src":"4501:453:26","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":6260,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:26","nodeType":"FunctionDefinition","parameters":{"id":6243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6238,"mutability":"mutable","name":"a","nameLocation":"4980:1:26","nodeType":"VariableDeclaration","scope":6260,"src":"4972:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6237,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6240,"mutability":"mutable","name":"b","nameLocation":"4991:1:26","nodeType":"VariableDeclaration","scope":6260,"src":"4983:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6239,"name":"uint256","nodeType":"ElementaryTypeName","src":"4983:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6242,"mutability":"mutable","name":"errorMessage","nameLocation":"5008:12:26","nodeType":"VariableDeclaration","scope":6260,"src":"4994:26:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6241,"name":"string","nodeType":"ElementaryTypeName","src":"4994:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:50:26"},"returnParameters":{"id":6246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6260,"src":"5045:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6244,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5044:9:26"},"scope":6311,"src":"4959:201:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6284,"nodeType":"Block","src":"5739:105:26","statements":[{"id":6283,"nodeType":"UncheckedBlock","src":"5749:89:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6273,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"5781:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5785:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6276,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6267,"src":"5788:12:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5773:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5773:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6278,"nodeType":"ExpressionStatement","src":"5773:28:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"5822:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6280,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"5826:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5822:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6271,"id":6282,"nodeType":"Return","src":"5815:12:26"}]}]},"documentation":{"id":6261,"nodeType":"StructuredDocumentation","src":"5166:473:26","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":6285,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5653:3:26","nodeType":"FunctionDefinition","parameters":{"id":6268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6263,"mutability":"mutable","name":"a","nameLocation":"5665:1:26","nodeType":"VariableDeclaration","scope":6285,"src":"5657:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6262,"name":"uint256","nodeType":"ElementaryTypeName","src":"5657:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6265,"mutability":"mutable","name":"b","nameLocation":"5676:1:26","nodeType":"VariableDeclaration","scope":6285,"src":"5668:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6264,"name":"uint256","nodeType":"ElementaryTypeName","src":"5668:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6267,"mutability":"mutable","name":"errorMessage","nameLocation":"5693:12:26","nodeType":"VariableDeclaration","scope":6285,"src":"5679:26:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6266,"name":"string","nodeType":"ElementaryTypeName","src":"5679:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5656:50:26"},"returnParameters":{"id":6271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6285,"src":"5730:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6269,"name":"uint256","nodeType":"ElementaryTypeName","src":"5730:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5729:9:26"},"scope":6311,"src":"5644:200:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6309,"nodeType":"Block","src":"6585:105:26","statements":[{"id":6308,"nodeType":"UncheckedBlock","src":"6595:89:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6298,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"6627:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6627:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6301,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"6634:12:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6619:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6619:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6303,"nodeType":"ExpressionStatement","src":"6619:28:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"6668:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6305,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"6672:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6668:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6296,"id":6307,"nodeType":"Return","src":"6661:12:26"}]}]},"documentation":{"id":6286,"nodeType":"StructuredDocumentation","src":"5850:635:26","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":6310,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6499:3:26","nodeType":"FunctionDefinition","parameters":{"id":6293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6288,"mutability":"mutable","name":"a","nameLocation":"6511:1:26","nodeType":"VariableDeclaration","scope":6310,"src":"6503:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6287,"name":"uint256","nodeType":"ElementaryTypeName","src":"6503:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6290,"mutability":"mutable","name":"b","nameLocation":"6522:1:26","nodeType":"VariableDeclaration","scope":6310,"src":"6514:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6289,"name":"uint256","nodeType":"ElementaryTypeName","src":"6514:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6292,"mutability":"mutable","name":"errorMessage","nameLocation":"6539:12:26","nodeType":"VariableDeclaration","scope":6310,"src":"6525:26:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6291,"name":"string","nodeType":"ElementaryTypeName","src":"6525:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6502:50:26"},"returnParameters":{"id":6296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6310,"src":"6576:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6294,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6575:9:26"},"scope":6311,"src":"6490:200:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6312,"src":"482:6210:26","usedErrors":[]}],"src":"107:6586:26"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"id":27,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[6416]},"id":6417,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6313,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6314,"nodeType":"StructuredDocumentation","src":"134:80:27","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6416,"linearizedBaseContracts":[6416],"name":"SignedMath","nameLocation":"223:10:27","nodeType":"ContractDefinition","nodes":[{"body":{"id":6331,"nodeType":"Block","src":"375:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6324,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"392:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6325,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"396:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6328,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"404:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:27","trueExpression":{"id":6327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"400:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6323,"id":6330,"nodeType":"Return","src":"385:20:27"}]},"documentation":{"id":6315,"nodeType":"StructuredDocumentation","src":"240:66:27","text":" @dev Returns the largest of two signed numbers."},"id":6332,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:27","nodeType":"FunctionDefinition","parameters":{"id":6320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6317,"mutability":"mutable","name":"a","nameLocation":"331:1:27","nodeType":"VariableDeclaration","scope":6332,"src":"324:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6316,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6319,"mutability":"mutable","name":"b","nameLocation":"341:1:27","nodeType":"VariableDeclaration","scope":6332,"src":"334:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6318,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:27"},"returnParameters":{"id":6323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6332,"src":"367:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6321,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:27"},"scope":6416,"src":"311:101:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6349,"nodeType":"Block","src":"554:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6342,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"571:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6343,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"575:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6346,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"583:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:27","trueExpression":{"id":6345,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"579:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6341,"id":6348,"nodeType":"Return","src":"564:20:27"}]},"documentation":{"id":6333,"nodeType":"StructuredDocumentation","src":"418:67:27","text":" @dev Returns the smallest of two signed numbers."},"id":6350,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:27","nodeType":"FunctionDefinition","parameters":{"id":6338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"a","nameLocation":"510:1:27","nodeType":"VariableDeclaration","scope":6350,"src":"503:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6334,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6337,"mutability":"mutable","name":"b","nameLocation":"520:1:27","nodeType":"VariableDeclaration","scope":6350,"src":"513:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6336,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:27"},"returnParameters":{"id":6341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6350,"src":"546:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6339,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:27"},"scope":6416,"src":"490:101:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6393,"nodeType":"Block","src":"796:162:27","statements":[{"assignments":[6361],"declarations":[{"constant":false,"id":6361,"mutability":"mutable","name":"x","nameLocation":"865:1:27","nodeType":"VariableDeclaration","scope":6393,"src":"858:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6360,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6374,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"870:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6363,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"874:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"881:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"885:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:27"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6375,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"910:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6380,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"930:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6378,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:27","typeDescriptions":{}}},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6376,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:27","typeDescriptions":{}}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6385,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"944:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6386,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"948:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6359,"id":6392,"nodeType":"Return","src":"903:48:27"}]},"documentation":{"id":6351,"nodeType":"StructuredDocumentation","src":"597:126:27","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6394,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:27","nodeType":"FunctionDefinition","parameters":{"id":6356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6353,"mutability":"mutable","name":"a","nameLocation":"752:1:27","nodeType":"VariableDeclaration","scope":6394,"src":"745:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6352,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6355,"mutability":"mutable","name":"b","nameLocation":"762:1:27","nodeType":"VariableDeclaration","scope":6394,"src":"755:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6354,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:27"},"returnParameters":{"id":6359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6394,"src":"788:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6357,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:27"},"scope":6416,"src":"728:230:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6414,"nodeType":"Block","src":"1102:158:27","statements":[{"id":6413,"nodeType":"UncheckedBlock","src":"1112:142:27","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6404,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"1227:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":6405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:27","subExpression":{"id":6408,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"1241:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:27","trueExpression":{"id":6407,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"1236:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:27","typeDescriptions":{}}},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6401,"id":6412,"nodeType":"Return","src":"1212:31:27"}]}]},"documentation":{"id":6395,"nodeType":"StructuredDocumentation","src":"964:78:27","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6415,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:27","nodeType":"FunctionDefinition","parameters":{"id":6398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6397,"mutability":"mutable","name":"n","nameLocation":"1067:1:27","nodeType":"VariableDeclaration","scope":6415,"src":"1060:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6396,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:27"},"returnParameters":{"id":6401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6415,"src":"1093:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6399,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:27"},"scope":6416,"src":"1047:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6417,"src":"215:1047:27","usedErrors":[]}],"src":"109:1154:27"}},"contracts/SpenderContract.sol":{"id":28,"ast":{"absolutePath":"contracts/SpenderContract.sol","exportedSymbols":{"Context":[2393],"Counters":[2467],"ECDSA":[3388],"EIP712":[3592],"ERC20":[1057],"ERC20Burnable":[1179],"ERC20FlashMint":[1396],"ERC20Permit":[1568],"ERC20Votes":[2302],"IERC20":[1135],"IERC20Metadata":[2327],"IERC20Permit":[2363],"IERC3156FlashBorrower":[210],"IERC3156FlashLender":[248],"IERC5267":[273],"IERC5805":[282],"IERC6372":[297],"IVotes":[190],"Math":[4458],"Ownable":[112],"Pausable":[405],"ReentrancyGuard":[470],"SafeCast":[5999],"SafeMath":[6311],"ShortString":[2472],"ShortStrings":[2683],"SignedMath":[6416],"StorageSlot":[2793],"Strings":[3022],"VotingContract":[8249]},"id":8250,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6418,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"33:23:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6419,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8250,"sourceUnit":1136,"src":"58:56:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":6420,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8250,"sourceUnit":6312,"src":"116:57:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":6421,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8250,"sourceUnit":471,"src":"175:62:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"@openzeppelin/contracts/security/Pausable.sol","id":6422,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8250,"sourceUnit":406,"src":"239:55:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6423,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8250,"sourceUnit":113,"src":"296:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":6424,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8250,"sourceUnit":1058,"src":"351:55:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":6425,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8250,"sourceUnit":1180,"src":"408:74:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"@openzeppelin/contracts/security/Pausable.sol","id":6426,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8250,"sourceUnit":406,"src":"484:55:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6427,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8250,"sourceUnit":113,"src":"541:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":6428,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8250,"sourceUnit":1569,"src":"595:72:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":6429,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8250,"sourceUnit":2303,"src":"669:71:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol","id":6430,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8250,"sourceUnit":1397,"src":"742:75:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6431,"name":"ReentrancyGuard","nameLocations":["850:15:28"],"nodeType":"IdentifierPath","referencedDeclaration":470,"src":"850:15:28"},"id":6432,"nodeType":"InheritanceSpecifier","src":"850:15:28"},{"baseName":{"id":6433,"name":"Pausable","nameLocations":["868:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":405,"src":"868:8:28"},"id":6434,"nodeType":"InheritanceSpecifier","src":"868:8:28"},{"baseName":{"id":6435,"name":"Ownable","nameLocations":["877:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"877:7:28"},"id":6436,"nodeType":"InheritanceSpecifier","src":"877:7:28"}],"canonicalName":"VotingContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8249,"linearizedBaseContracts":[8249,112,405,2393,470],"name":"VotingContract","nameLocation":"832:14:28","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":6443,"mutability":"constant","name":"MAX_UINT256","nameLocation":"910:11:28","nodeType":"VariableDeclaration","scope":8249,"src":"893:48:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6437,"name":"uint256","nodeType":"ElementaryTypeName","src":"893:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":6440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"929:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6439,"name":"uint256","nodeType":"ElementaryTypeName","src":"929:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6438,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"924:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"924:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"938:3:28","memberName":"max","nodeType":"MemberAccess","src":"924:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"functionSelector":"b8fcf937","id":6445,"mutability":"mutable","name":"myToken","nameLocation":"963:7:28","nodeType":"VariableDeclaration","scope":8249,"src":"948:22:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6444,"name":"address","nodeType":"ElementaryTypeName","src":"948:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"global":false,"id":6449,"libraryName":{"id":6446,"name":"Counters","nameLocations":["1015:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":2467,"src":"1015:8:28"},"nodeType":"UsingForDirective","src":"1009:36:28","typeName":{"id":6448,"nodeType":"UserDefinedTypeName","pathNode":{"id":6447,"name":"Counters.Counter","nameLocations":["1028:8:28","1037:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"1028:16:28"},"referencedDeclaration":2399,"src":"1028:16:28","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":6452,"mutability":"mutable","name":"_proposalIds","nameLocation":"1076:12:28","nodeType":"VariableDeclaration","scope":8249,"src":"1051:37:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage","typeString":"struct Counters.Counter"},"typeName":{"id":6451,"nodeType":"UserDefinedTypeName","pathNode":{"id":6450,"name":"Counters.Counter","nameLocations":["1051:8:28","1060:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"1051:16:28"},"referencedDeclaration":2399,"src":"1051:16:28","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"id":6455,"mutability":"mutable","name":"_UserStakeIdCounter","nameLocation":"1120:19:28","nodeType":"VariableDeclaration","scope":8249,"src":"1095:44:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage","typeString":"struct Counters.Counter"},"typeName":{"id":6454,"nodeType":"UserDefinedTypeName","pathNode":{"id":6453,"name":"Counters.Counter","nameLocations":["1095:8:28","1104:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"1095:16:28"},"referencedDeclaration":2399,"src":"1095:16:28","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"body":{"id":6464,"nodeType":"Block","src":"1218:37:28","statements":[{"expression":{"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6460,"name":"myToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"1229:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6461,"name":"_myToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6457,"src":"1239:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1229:18:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6463,"nodeType":"ExpressionStatement","src":"1229:18:28"}]},"id":6465,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6457,"mutability":"mutable","name":"_myToken","nameLocation":"1208:8:28","nodeType":"VariableDeclaration","scope":6465,"src":"1200:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6456,"name":"address","nodeType":"ElementaryTypeName","src":"1200:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1199:18:28"},"returnParameters":{"id":6459,"nodeType":"ParameterList","parameters":[],"src":"1218:0:28"},"scope":8249,"src":"1188:67:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"anonymous":false,"eventSelector":"59e04c3f0d44b7caf6e8ef854b61d9a51cf1960d7a88ff6356cc5e946b4b5832","id":6473,"name":"Received","nameLocation":"1269:8:28","nodeType":"EventDefinition","parameters":{"id":6472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6467,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"1286:6:28","nodeType":"VariableDeclaration","scope":6473,"src":"1278:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6466,"name":"address","nodeType":"ElementaryTypeName","src":"1278:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6469,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1299:6:28","nodeType":"VariableDeclaration","scope":6473,"src":"1294:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6468,"name":"uint","nodeType":"ElementaryTypeName","src":"1294:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6471,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"1314:7:28","nodeType":"VariableDeclaration","scope":6473,"src":"1307:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6470,"name":"string","nodeType":"ElementaryTypeName","src":"1307:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1277:45:28"},"src":"1263:60:28"},{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":6479,"name":"Deposited","nameLocation":"1335:9:28","nodeType":"EventDefinition","parameters":{"id":6478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6475,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1361:4:28","nodeType":"VariableDeclaration","scope":6479,"src":"1345:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6474,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6477,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1372:6:28","nodeType":"VariableDeclaration","scope":6479,"src":"1367:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6476,"name":"uint","nodeType":"ElementaryTypeName","src":"1367:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1344:35:28"},"src":"1329:51:28"},{"anonymous":false,"eventSelector":"7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5","id":6485,"name":"Withdrawn","nameLocation":"1392:9:28","nodeType":"EventDefinition","parameters":{"id":6484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6481,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1418:4:28","nodeType":"VariableDeclaration","scope":6485,"src":"1402:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6480,"name":"address","nodeType":"ElementaryTypeName","src":"1402:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6483,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1429:6:28","nodeType":"VariableDeclaration","scope":6485,"src":"1424:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6482,"name":"uint","nodeType":"ElementaryTypeName","src":"1424:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1401:35:28"},"src":"1386:51:28"},{"anonymous":false,"eventSelector":"c32b42768a47a585121e9b8d7a2ab9d3f34c326a192dee11ee1732e3d18313f3","id":6495,"name":"Voted","nameLocation":"1449:5:28","nodeType":"EventDefinition","parameters":{"id":6494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6487,"indexed":true,"mutability":"mutable","name":"_address","nameLocation":"1471:8:28","nodeType":"VariableDeclaration","scope":6495,"src":"1455:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6486,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6489,"indexed":true,"mutability":"mutable","name":"_proposalId","nameLocation":"1497:11:28","nodeType":"VariableDeclaration","scope":6495,"src":"1481:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1481:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6491,"indexed":true,"mutability":"mutable","name":"_optionId","nameLocation":"1526:9:28","nodeType":"VariableDeclaration","scope":6495,"src":"1510:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6490,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6493,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"1545:7:28","nodeType":"VariableDeclaration","scope":6495,"src":"1537:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1537:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1454:99:28"},"src":"1443:111:28"},{"anonymous":false,"eventSelector":"7c7fcc3525cb8fda523bcb491b600327083e8ffa58842db2a3582e0204655708","id":6506,"name":"ProposalAndOptionsSubmitted","nameLocation":"1566:27:28","nodeType":"EventDefinition","parameters":{"id":6505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6497,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1610:4:28","nodeType":"VariableDeclaration","scope":6506,"src":"1594:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6496,"name":"address","nodeType":"ElementaryTypeName","src":"1594:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6499,"indexed":true,"mutability":"mutable","name":"proposalIndex","nameLocation":"1632:13:28","nodeType":"VariableDeclaration","scope":6506,"src":"1616:29:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6498,"name":"uint256","nodeType":"ElementaryTypeName","src":"1616:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6501,"indexed":false,"mutability":"mutable","name":"proposalDescription","nameLocation":"1654:19:28","nodeType":"VariableDeclaration","scope":6506,"src":"1647:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6500,"name":"string","nodeType":"ElementaryTypeName","src":"1647:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6504,"indexed":false,"mutability":"mutable","name":"optionDescriptions","nameLocation":"1684:18:28","nodeType":"VariableDeclaration","scope":6506,"src":"1675:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6502,"name":"string","nodeType":"ElementaryTypeName","src":"1675:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6503,"nodeType":"ArrayTypeName","src":"1675:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"1593:110:28"},"src":"1560:144:28"},{"anonymous":false,"eventSelector":"5cdc4619b6f85de86a2b0f98ff2be3aad917b79b78f3829a4b948c3fcbef3085","id":6518,"name":"DepositForProposal","nameLocation":"1716:18:28","nodeType":"EventDefinition","parameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6508,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"1751:6:28","nodeType":"VariableDeclaration","scope":6518,"src":"1735:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6507,"name":"address","nodeType":"ElementaryTypeName","src":"1735:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6510,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1767:6:28","nodeType":"VariableDeclaration","scope":6518,"src":"1759:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1759:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6512,"indexed":false,"mutability":"mutable","name":"staked","nameLocation":"1780:6:28","nodeType":"VariableDeclaration","scope":6518,"src":"1775:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6511,"name":"bool","nodeType":"ElementaryTypeName","src":"1775:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6514,"indexed":false,"mutability":"mutable","name":"unlockTime","nameLocation":"1796:10:28","nodeType":"VariableDeclaration","scope":6518,"src":"1788:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1788:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6516,"indexed":true,"mutability":"mutable","name":"stakeIndex","nameLocation":"1824:10:28","nodeType":"VariableDeclaration","scope":6518,"src":"1808:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1808:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1734:101:28"},"src":"1710:126:28"},{"anonymous":false,"eventSelector":"9851629be966df862ee0cfd4f2544aed401a8672ab1fee2cb3bc8a89a44953e0","id":6526,"name":"TokensStaked","nameLocation":"1848:12:28","nodeType":"EventDefinition","parameters":{"id":6525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6520,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1877:4:28","nodeType":"VariableDeclaration","scope":6526,"src":"1861:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6519,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6522,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1891:6:28","nodeType":"VariableDeclaration","scope":6526,"src":"1883:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1883:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6524,"indexed":false,"mutability":"mutable","name":"isForProposal","nameLocation":"1904:13:28","nodeType":"VariableDeclaration","scope":6526,"src":"1899:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6523,"name":"bool","nodeType":"ElementaryTypeName","src":"1899:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1860:58:28"},"src":"1842:77:28"},{"anonymous":false,"eventSelector":"465657ffaa3aa3d50487c62c8f39c4b59a6b333d8b255d8d3d9cb2ca1897a7c8","id":6534,"name":"FundsSettledForAverageQuality","nameLocation":"1931:29:28","nodeType":"EventDefinition","parameters":{"id":6533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6528,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"1977:10:28","nodeType":"VariableDeclaration","scope":6534,"src":"1961:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1961:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6530,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"2005:8:28","nodeType":"VariableDeclaration","scope":6534,"src":"1989:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6529,"name":"address","nodeType":"ElementaryTypeName","src":"1989:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6532,"indexed":false,"mutability":"mutable","name":"amountToReturn","nameLocation":"2023:14:28","nodeType":"VariableDeclaration","scope":6534,"src":"2015:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6531,"name":"uint256","nodeType":"ElementaryTypeName","src":"2015:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1960:78:28"},"src":"1925:114:28"},{"anonymous":false,"eventSelector":"55e0c24f2a6dc742ae33c30061a9ff6c9ae57eabdfdbf696a8a1f0410ad3c25c","id":6542,"name":"WithdrawalDetailed","nameLocation":"2051:18:28","nodeType":"EventDefinition","parameters":{"id":6541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6536,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2086:4:28","nodeType":"VariableDeclaration","scope":6542,"src":"2070:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6535,"name":"address","nodeType":"ElementaryTypeName","src":"2070:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6538,"indexed":false,"mutability":"mutable","name":"amountWithdrawn","nameLocation":"2100:15:28","nodeType":"VariableDeclaration","scope":6542,"src":"2092:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6537,"name":"uint256","nodeType":"ElementaryTypeName","src":"2092:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6540,"indexed":false,"mutability":"mutable","name":"balanceAfterWithdrawal","nameLocation":"2125:22:28","nodeType":"VariableDeclaration","scope":6542,"src":"2117:30:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6539,"name":"uint256","nodeType":"ElementaryTypeName","src":"2117:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2069:79:28"},"src":"2045:104:28"},{"anonymous":false,"eventSelector":"72dfc6aae5d2371c5da47f722fc615b78f5b0fa713798ff2ad1ff40ec149c809","id":6550,"name":"UnlockTimeUpdated","nameLocation":"2161:17:28","nodeType":"EventDefinition","parameters":{"id":6549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6544,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"2195:6:28","nodeType":"VariableDeclaration","scope":6550,"src":"2179:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6543,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6546,"indexed":true,"mutability":"mutable","name":"stakeIndex","nameLocation":"2219:10:28","nodeType":"VariableDeclaration","scope":6550,"src":"2203:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6545,"name":"uint256","nodeType":"ElementaryTypeName","src":"2203:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6548,"indexed":false,"mutability":"mutable","name":"newUnlockTime","nameLocation":"2239:13:28","nodeType":"VariableDeclaration","scope":6550,"src":"2231:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2231:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2178:75:28"},"src":"2155:99:28"},{"anonymous":false,"eventSelector":"ddd89621ebb152aa5989781cb35db99e8f31caf44575bcc1ac2cd0eb5b5e8368","id":6558,"name":"FundsPenalizedForNonCompliance","nameLocation":"2266:30:28","nodeType":"EventDefinition","parameters":{"id":6557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6552,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"2313:10:28","nodeType":"VariableDeclaration","scope":6558,"src":"2297:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6551,"name":"uint256","nodeType":"ElementaryTypeName","src":"2297:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6554,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"2341:8:28","nodeType":"VariableDeclaration","scope":6558,"src":"2325:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6553,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6556,"indexed":false,"mutability":"mutable","name":"penalty","nameLocation":"2359:7:28","nodeType":"VariableDeclaration","scope":6558,"src":"2351:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6555,"name":"uint256","nodeType":"ElementaryTypeName","src":"2351:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2296:71:28"},"src":"2260:108:28"},{"anonymous":false,"eventSelector":"68e3ce211a37937184ed2d0165534a314cff3c8b8bd7dcdd845523b07698450f","id":6564,"name":"ProposalStatusChanged","nameLocation":"2380:21:28","nodeType":"EventDefinition","parameters":{"id":6563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6560,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"2410:10:28","nodeType":"VariableDeclaration","scope":6564,"src":"2402:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6559,"name":"uint256","nodeType":"ElementaryTypeName","src":"2402:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6562,"indexed":false,"mutability":"mutable","name":"isActive","nameLocation":"2427:8:28","nodeType":"VariableDeclaration","scope":6564,"src":"2422:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6561,"name":"bool","nodeType":"ElementaryTypeName","src":"2422:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2401:35:28"},"src":"2374:63:28"},{"anonymous":false,"eventSelector":"9881fec5d892a663ff01483c3d9ea7c153c2ca7ca7fcd7eac040e32f792700ec","id":6570,"name":"ProposalEndTime","nameLocation":"2449:15:28","nodeType":"EventDefinition","parameters":{"id":6569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6566,"indexed":false,"mutability":"mutable","name":"_proposalId","nameLocation":"2473:11:28","nodeType":"VariableDeclaration","scope":6570,"src":"2465:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6565,"name":"uint256","nodeType":"ElementaryTypeName","src":"2465:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6568,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"2494:7:28","nodeType":"VariableDeclaration","scope":6570,"src":"2486:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2486:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2464:38:28"},"src":"2443:60:28"},{"anonymous":false,"eventSelector":"5f2ba7f92706dd3552cbb77ea64a29ff03f8d16a053d327c22305d3281ab6948","id":6583,"name":"ProposalForUser","nameLocation":"2515:15:28","nodeType":"EventDefinition","parameters":{"id":6582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6572,"indexed":true,"mutability":"mutable","name":"userAddress","nameLocation":"2547:11:28","nodeType":"VariableDeclaration","scope":6583,"src":"2531:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6571,"name":"address","nodeType":"ElementaryTypeName","src":"2531:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6574,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"2576:10:28","nodeType":"VariableDeclaration","scope":6583,"src":"2560:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6573,"name":"uint256","nodeType":"ElementaryTypeName","src":"2560:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6576,"indexed":false,"mutability":"mutable","name":"proposalDescription","nameLocation":"2595:19:28","nodeType":"VariableDeclaration","scope":6583,"src":"2588:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6575,"name":"string","nodeType":"ElementaryTypeName","src":"2588:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6578,"indexed":false,"mutability":"mutable","name":"stakeAmount","nameLocation":"2624:11:28","nodeType":"VariableDeclaration","scope":6583,"src":"2616:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6577,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6581,"indexed":false,"mutability":"mutable","name":"optionDescriptions","nameLocation":"2646:18:28","nodeType":"VariableDeclaration","scope":6583,"src":"2637:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6579,"name":"string","nodeType":"ElementaryTypeName","src":"2637:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6580,"nodeType":"ArrayTypeName","src":"2637:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"2530:135:28"},"src":"2509:157:28"},{"anonymous":false,"eventSelector":"a793c384ec01dc23084e8f2804320118e562185632f38268728b0465b9f895ab","id":6593,"name":"StakeReleased","nameLocation":"2678:13:28","nodeType":"EventDefinition","parameters":{"id":6592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6585,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2708:4:28","nodeType":"VariableDeclaration","scope":6593,"src":"2692:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6584,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6587,"indexed":false,"mutability":"mutable","name":"stakeIndex","nameLocation":"2722:10:28","nodeType":"VariableDeclaration","scope":6593,"src":"2714:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6586,"name":"uint256","nodeType":"ElementaryTypeName","src":"2714:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6589,"indexed":false,"mutability":"mutable","name":"penalized","nameLocation":"2739:9:28","nodeType":"VariableDeclaration","scope":6593,"src":"2734:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6588,"name":"bool","nodeType":"ElementaryTypeName","src":"2734:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6591,"indexed":false,"mutability":"mutable","name":"amountReleased","nameLocation":"2758:14:28","nodeType":"VariableDeclaration","scope":6593,"src":"2750:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6590,"name":"uint256","nodeType":"ElementaryTypeName","src":"2750:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2691:82:28"},"src":"2672:102:28"},{"anonymous":false,"eventSelector":"712354cc8b71a852b959baf9994ba8b6dba9bc7f8d2cc4ec7d1f4898b31bd7c1","id":6599,"name":"ProposalEnded","nameLocation":"2786:13:28","nodeType":"EventDefinition","parameters":{"id":6598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6595,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"2816:10:28","nodeType":"VariableDeclaration","scope":6599,"src":"2800:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6594,"name":"uint256","nodeType":"ElementaryTypeName","src":"2800:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6597,"indexed":false,"mutability":"mutable","name":"isActive","nameLocation":"2833:8:28","nodeType":"VariableDeclaration","scope":6599,"src":"2828:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6596,"name":"bool","nodeType":"ElementaryTypeName","src":"2828:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2799:43:28"},"src":"2780:63:28"},{"anonymous":false,"eventSelector":"628c5b5fb646e7f6c763f5e3b6fdcbee619fe1c1bc595643a1c70415a6f11349","id":6605,"name":"ProposalConcluded","nameLocation":"2855:17:28","nodeType":"EventDefinition","parameters":{"id":6604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6601,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"2889:10:28","nodeType":"VariableDeclaration","scope":6605,"src":"2873:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6600,"name":"uint256","nodeType":"ElementaryTypeName","src":"2873:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6603,"indexed":false,"mutability":"mutable","name":"isActive","nameLocation":"2906:8:28","nodeType":"VariableDeclaration","scope":6605,"src":"2901:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6602,"name":"bool","nodeType":"ElementaryTypeName","src":"2901:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2872:43:28"},"src":"2849:67:28"},{"anonymous":false,"eventSelector":"149b6d96cac1333a3f37f0b420d3b2d92b3c941f8ddd2c6454a19d1800f558fa","id":6615,"name":"RewardDistributed","nameLocation":"2928:17:28","nodeType":"EventDefinition","parameters":{"id":6614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6607,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"2962:5:28","nodeType":"VariableDeclaration","scope":6615,"src":"2946:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6606,"name":"address","nodeType":"ElementaryTypeName","src":"2946:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6609,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"2977:10:28","nodeType":"VariableDeclaration","scope":6615,"src":"2969:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6608,"name":"uint256","nodeType":"ElementaryTypeName","src":"2969:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6611,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2997:6:28","nodeType":"VariableDeclaration","scope":6615,"src":"2989:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6610,"name":"uint256","nodeType":"ElementaryTypeName","src":"2989:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6613,"indexed":false,"mutability":"mutable","name":"isWinner","nameLocation":"3010:8:28","nodeType":"VariableDeclaration","scope":6615,"src":"3005:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6612,"name":"bool","nodeType":"ElementaryTypeName","src":"3005:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2945:74:28"},"src":"2922:98:28"},{"constant":false,"functionSelector":"0f174002","id":6619,"mutability":"mutable","name":"votingEndTimes","nameLocation":"3065:14:28","nodeType":"VariableDeclaration","scope":8249,"src":"3030:49:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":6618,"keyType":{"id":6616,"name":"uint256","nodeType":"ElementaryTypeName","src":"3038:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3030:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":6617,"name":"uint256","nodeType":"ElementaryTypeName","src":"3049:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"27e235e3","id":6623,"mutability":"mutable","name":"balances","nameLocation":"3144:8:28","nodeType":"VariableDeclaration","scope":8249,"src":"3109:43:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6622,"keyType":{"id":6620,"name":"address","nodeType":"ElementaryTypeName","src":"3117:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3109:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":6621,"name":"uint256","nodeType":"ElementaryTypeName","src":"3128:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"ab89437c","id":6628,"mutability":"mutable","name":"proposalVoters","nameLocation":"3198:14:28","nodeType":"VariableDeclaration","scope":8249,"src":"3161:51:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":6627,"keyType":{"id":6624,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3161:29:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueType":{"baseType":{"id":6625,"name":"address","nodeType":"ElementaryTypeName","src":"3180:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6626,"nodeType":"ArrayTypeName","src":"3180:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"canonicalName":"VotingContract.Proposal","id":6643,"members":[{"constant":false,"id":6630,"mutability":"mutable","name":"proposer","nameLocation":"3273:8:28","nodeType":"VariableDeclaration","scope":6643,"src":"3265:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6629,"name":"address","nodeType":"ElementaryTypeName","src":"3265:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6632,"mutability":"mutable","name":"description","nameLocation":"3318:11:28","nodeType":"VariableDeclaration","scope":6643,"src":"3311:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6631,"name":"string","nodeType":"ElementaryTypeName","src":"3311:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6634,"mutability":"mutable","name":"stakeAmount","nameLocation":"3364:11:28","nodeType":"VariableDeclaration","scope":6643,"src":"3356:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6633,"name":"uint256","nodeType":"ElementaryTypeName","src":"3356:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6636,"mutability":"mutable","name":"active","nameLocation":"3413:6:28","nodeType":"VariableDeclaration","scope":6643,"src":"3408:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6635,"name":"bool","nodeType":"ElementaryTypeName","src":"3408:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6638,"mutability":"mutable","name":"isSettled","nameLocation":"3457:9:28","nodeType":"VariableDeclaration","scope":6643,"src":"3452:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6637,"name":"bool","nodeType":"ElementaryTypeName","src":"3452:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6640,"mutability":"mutable","name":"isWagered","nameLocation":"3528:9:28","nodeType":"VariableDeclaration","scope":6643,"src":"3523:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6639,"name":"bool","nodeType":"ElementaryTypeName","src":"3523:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6642,"mutability":"mutable","name":"endTime","nameLocation":"3556:7:28","nodeType":"VariableDeclaration","scope":6643,"src":"3548:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6641,"name":"uint256","nodeType":"ElementaryTypeName","src":"3548:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Proposal","nameLocation":"3245:8:28","nodeType":"StructDefinition","scope":8249,"src":"3238:333:28","visibility":"public"},{"canonicalName":"VotingContract.Option","id":6648,"members":[{"constant":false,"id":6645,"mutability":"mutable","name":"description","nameLocation":"3630:11:28","nodeType":"VariableDeclaration","scope":6648,"src":"3623:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6644,"name":"string","nodeType":"ElementaryTypeName","src":"3623:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6647,"mutability":"mutable","name":"voteCount","nameLocation":"3676:9:28","nodeType":"VariableDeclaration","scope":6648,"src":"3668:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6646,"name":"uint256","nodeType":"ElementaryTypeName","src":"3668:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Option","nameLocation":"3605:6:28","nodeType":"StructDefinition","scope":8249,"src":"3598:139:28","visibility":"public"},{"canonicalName":"VotingContract.Stake","id":6657,"members":[{"constant":false,"id":6650,"mutability":"mutable","name":"amount","nameLocation":"3777:6:28","nodeType":"VariableDeclaration","scope":6657,"src":"3769:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6649,"name":"uint256","nodeType":"ElementaryTypeName","src":"3769:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6652,"mutability":"mutable","name":"unlockTime","nameLocation":"3826:10:28","nodeType":"VariableDeclaration","scope":6657,"src":"3818:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6651,"name":"uint256","nodeType":"ElementaryTypeName","src":"3818:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6654,"mutability":"mutable","name":"staker","nameLocation":"3881:6:28","nodeType":"VariableDeclaration","scope":6657,"src":"3873:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6653,"name":"address","nodeType":"ElementaryTypeName","src":"3873:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6656,"mutability":"mutable","name":"isWagered","nameLocation":"3927:9:28","nodeType":"VariableDeclaration","scope":6657,"src":"3922:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6655,"name":"bool","nodeType":"ElementaryTypeName","src":"3922:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Stake","nameLocation":"3752:5:28","nodeType":"StructDefinition","scope":8249,"src":"3745:199:28","visibility":"public"},{"canonicalName":"VotingContract.VoteRecord","id":6664,"members":[{"constant":false,"id":6659,"mutability":"mutable","name":"proposalId","nameLocation":"3989:10:28","nodeType":"VariableDeclaration","scope":6664,"src":"3981:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6658,"name":"uint256","nodeType":"ElementaryTypeName","src":"3981:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6661,"mutability":"mutable","name":"optionId","nameLocation":"4030:8:28","nodeType":"VariableDeclaration","scope":6664,"src":"4022:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6660,"name":"uint256","nodeType":"ElementaryTypeName","src":"4022:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6663,"mutability":"mutable","name":"amount","nameLocation":"4086:6:28","nodeType":"VariableDeclaration","scope":6664,"src":"4078:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6662,"name":"uint256","nodeType":"ElementaryTypeName","src":"4078:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VoteRecord","nameLocation":"3959:10:28","nodeType":"StructDefinition","scope":8249,"src":"3952:168:28","visibility":"public"},{"constant":false,"functionSelector":"23ee36bb","id":6670,"mutability":"mutable","name":"userVotingHistory","nameLocation":"4168:17:28","nodeType":"VariableDeclaration","scope":8249,"src":"4128:57:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_$","typeString":"mapping(address => struct VotingContract.VoteRecord[])"},"typeName":{"id":6669,"keyType":{"id":6665,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4128:32:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_$","typeString":"mapping(address => struct VotingContract.VoteRecord[])"},"valueType":{"baseType":{"id":6667,"nodeType":"UserDefinedTypeName","pathNode":{"id":6666,"name":"VoteRecord","nameLocations":["4147:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":6664,"src":"4147:10:28"},"referencedDeclaration":6664,"src":"4147:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$6664_storage_ptr","typeString":"struct VotingContract.VoteRecord"}},"id":6668,"nodeType":"ArrayTypeName","src":"4147:12:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_ptr","typeString":"struct VotingContract.VoteRecord[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"2f4c5bdf","id":6676,"mutability":"mutable","name":"stakesForUser","nameLocation":"4267:13:28","nodeType":"VariableDeclaration","scope":8249,"src":"4232:48:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Stake_$6657_storage_$dyn_storage_$","typeString":"mapping(address => struct VotingContract.Stake[])"},"typeName":{"id":6675,"keyType":{"id":6671,"name":"address","nodeType":"ElementaryTypeName","src":"4240:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4232:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Stake_$6657_storage_$dyn_storage_$","typeString":"mapping(address => struct VotingContract.Stake[])"},"valueType":{"baseType":{"id":6673,"nodeType":"UserDefinedTypeName","pathNode":{"id":6672,"name":"Stake","nameLocations":["4251:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":6657,"src":"4251:5:28"},"referencedDeclaration":6657,"src":"4251:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$6657_storage_ptr","typeString":"struct VotingContract.Stake"}},"id":6674,"nodeType":"ArrayTypeName","src":"4251:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$6657_storage_$dyn_storage_ptr","typeString":"struct VotingContract.Stake[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"013cf08b","id":6680,"mutability":"mutable","name":"proposals","nameLocation":"4305:9:28","nodeType":"VariableDeclaration","scope":8249,"src":"4287:27:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal[]"},"typeName":{"baseType":{"id":6678,"nodeType":"UserDefinedTypeName","pathNode":{"id":6677,"name":"Proposal","nameLocations":["4287:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":6643,"src":"4287:8:28"},"referencedDeclaration":6643,"src":"4287:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal"}},"id":6679,"nodeType":"ArrayTypeName","src":"4287:10:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage_ptr","typeString":"struct VotingContract.Proposal[]"}},"visibility":"public"},{"constant":false,"functionSelector":"a93b4ba1","id":6686,"mutability":"mutable","name":"proposalOptions","nameLocation":"4373:15:28","nodeType":"VariableDeclaration","scope":8249,"src":"4337:51:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$6648_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct VotingContract.Option[])"},"typeName":{"id":6685,"keyType":{"id":6681,"name":"uint256","nodeType":"ElementaryTypeName","src":"4345:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4337:28:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$6648_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct VotingContract.Option[])"},"valueType":{"baseType":{"id":6683,"nodeType":"UserDefinedTypeName","pathNode":{"id":6682,"name":"Option","nameLocations":["4356:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":6648,"src":"4356:6:28"},"referencedDeclaration":6648,"src":"4356:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$6648_storage_ptr","typeString":"struct VotingContract.Option"}},"id":6684,"nodeType":"ArrayTypeName","src":"4356:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$6648_storage_$dyn_storage_ptr","typeString":"struct VotingContract.Option[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"5c134d66","id":6692,"mutability":"mutable","name":"voters","nameLocation":"4483:6:28","nodeType":"VariableDeclaration","scope":8249,"src":"4431:58:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"typeName":{"id":6691,"keyType":{"id":6687,"name":"address","nodeType":"ElementaryTypeName","src":"4439:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4431:44:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueType":{"id":6690,"keyType":{"id":6688,"name":"uint256","nodeType":"ElementaryTypeName","src":"4458:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4450:24:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueType":{"id":6689,"name":"bool","nodeType":"ElementaryTypeName","src":"4469:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"dd5c0da2","id":6696,"mutability":"mutable","name":"proposalTokenDeposits","nameLocation":"4533:21:28","nodeType":"VariableDeclaration","scope":8249,"src":"4498:56:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6695,"keyType":{"id":6693,"name":"address","nodeType":"ElementaryTypeName","src":"4506:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4498:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":6694,"name":"uint256","nodeType":"ElementaryTypeName","src":"4517:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"1940278f","id":6700,"mutability":"mutable","name":"usedVotingRights","nameLocation":"4596:16:28","nodeType":"VariableDeclaration","scope":8249,"src":"4561:51:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6699,"keyType":{"id":6697,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4561:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":6698,"name":"uint256","nodeType":"ElementaryTypeName","src":"4580:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"48e395a3","id":6703,"mutability":"mutable","name":"UserStakerAddresses","nameLocation":"4638:19:28","nodeType":"VariableDeclaration","scope":8249,"src":"4621:36:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":6701,"name":"address","nodeType":"ElementaryTypeName","src":"4621:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6702,"nodeType":"ArrayTypeName","src":"4621:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"ed4516c9","id":6706,"mutability":"mutable","name":"UserSstakeAmounts","nameLocation":"4706:17:28","nodeType":"VariableDeclaration","scope":8249,"src":"4689:34:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":6704,"name":"uint256","nodeType":"ElementaryTypeName","src":"4689:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6705,"nodeType":"ArrayTypeName","src":"4689:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"3a3ddd91","id":6712,"mutability":"mutable","name":"votingRecords","nameLocation":"4790:13:28","nodeType":"VariableDeclaration","scope":8249,"src":"4735:68:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":6711,"keyType":{"id":6707,"name":"address","nodeType":"ElementaryTypeName","src":"4743:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4735:47:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueType":{"id":6710,"keyType":{"id":6708,"name":"uint256","nodeType":"ElementaryTypeName","src":"4762:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4754:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":6709,"name":"uint256","nodeType":"ElementaryTypeName","src":"4773:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"44daa227","id":6718,"mutability":"mutable","name":"added_proposal","nameLocation":"4865:14:28","nodeType":"VariableDeclaration","scope":8249,"src":"4810:69:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":6717,"keyType":{"id":6713,"name":"address","nodeType":"ElementaryTypeName","src":"4818:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4810:47:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueType":{"id":6716,"keyType":{"id":6714,"name":"uint256","nodeType":"ElementaryTypeName","src":"4837:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4829:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":6715,"name":"uint256","nodeType":"ElementaryTypeName","src":"4848:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"eda0b804","id":6723,"mutability":"mutable","name":"voterAddressesByProposal","nameLocation":"4925:24:28","nodeType":"VariableDeclaration","scope":8249,"src":"4888:61:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":6722,"keyType":{"id":6719,"name":"uint256","nodeType":"ElementaryTypeName","src":"4896:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4888:29:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueType":{"baseType":{"id":6720,"name":"address","nodeType":"ElementaryTypeName","src":"4907:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6721,"nodeType":"ArrayTypeName","src":"4907:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"e2b239c8","id":6728,"mutability":"mutable","name":"optionIdsByProposal","nameLocation":"4993:19:28","nodeType":"VariableDeclaration","scope":8249,"src":"4956:56:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"typeName":{"id":6727,"keyType":{"id":6724,"name":"uint256","nodeType":"ElementaryTypeName","src":"4964:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4956:29:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"valueType":{"baseType":{"id":6725,"name":"uint256","nodeType":"ElementaryTypeName","src":"4975:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6726,"nodeType":"ArrayTypeName","src":"4975:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"a9bc3711","id":6733,"mutability":"mutable","name":"voteCountsByProposal","nameLocation":"5056:20:28","nodeType":"VariableDeclaration","scope":8249,"src":"5019:57:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"typeName":{"id":6732,"keyType":{"id":6729,"name":"uint256","nodeType":"ElementaryTypeName","src":"5027:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5019:29:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"valueType":{"baseType":{"id":6730,"name":"uint256","nodeType":"ElementaryTypeName","src":"5038:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6731,"nodeType":"ArrayTypeName","src":"5038:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"f496baa0","id":6739,"mutability":"mutable","name":"voterIndexInProposal","nameLocation":"5138:20:28","nodeType":"VariableDeclaration","scope":8249,"src":"5083:75:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":6738,"keyType":{"id":6734,"name":"address","nodeType":"ElementaryTypeName","src":"5091:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"5083:47:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueType":{"id":6737,"keyType":{"id":6735,"name":"uint256","nodeType":"ElementaryTypeName","src":"5110:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5102:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":6736,"name":"uint256","nodeType":"ElementaryTypeName","src":"5121:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"body":{"id":6778,"nodeType":"Block","src":"5236:255:28","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":6749,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5298:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5302:6:28","memberName":"sender","nodeType":"MemberAccess","src":"5298:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6753,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5318:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_VotingContract_$8249","typeString":"contract VotingContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VotingContract_$8249","typeString":"contract VotingContract"}],"id":6752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5310:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6751,"name":"address","nodeType":"ElementaryTypeName","src":"5310:7:28","typeDescriptions":{}}},"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5310:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6755,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"5325:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6746,"name":"myToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"5276:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6745,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"5269:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1135_$","typeString":"type(contract IERC20)"}},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5269:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1135","typeString":"contract IERC20"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5285:12:28","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1134,"src":"5269:28:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5269:63:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":6757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5347:17:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":6744,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5247:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5247:128:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6759,"nodeType":"ExpressionStatement","src":"5247:128:28"},{"expression":{"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6760,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"5386:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6763,"indexExpression":{"expression":{"id":6761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5395:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5399:6:28","memberName":"sender","nodeType":"MemberAccess","src":"5395:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5386:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6764,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"5409:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6767,"indexExpression":{"expression":{"id":6765,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5418:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5422:6:28","memberName":"sender","nodeType":"MemberAccess","src":"5418:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5409:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6768,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"5432:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5409:29:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5386:52:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6771,"nodeType":"ExpressionStatement","src":"5386:52:28"},{"eventCall":{"arguments":[{"expression":{"id":6773,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5464:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5468:6:28","memberName":"sender","nodeType":"MemberAccess","src":"5464:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6775,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"5476:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6772,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"5454:9:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5454:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6777,"nodeType":"EmitStatement","src":"5449:34:28"}]},"functionSelector":"b6b55f25","id":6779,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"5205:7:28","nodeType":"FunctionDefinition","parameters":{"id":6742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6741,"mutability":"mutable","name":"amount","nameLocation":"5221:6:28","nodeType":"VariableDeclaration","scope":6779,"src":"5213:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6740,"name":"uint256","nodeType":"ElementaryTypeName","src":"5213:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5212:16:28"},"returnParameters":{"id":6743,"nodeType":"ParameterList","parameters":[],"src":"5236:0:28"},"scope":8249,"src":"5196:295:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6877,"nodeType":"Block","src":"5573:961:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6787,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"5602:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6790,"indexExpression":{"expression":{"id":6788,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5611:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5615:6:28","memberName":"sender","nodeType":"MemberAccess","src":"5611:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5602:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6791,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"5626:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5602:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":6793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5634:22:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":6786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5594:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5594:63:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6795,"nodeType":"ExpressionStatement","src":"5594:63:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6797,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"5676:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6800,"indexExpression":{"expression":{"id":6798,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5685:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5689:6:28","memberName":"sender","nodeType":"MemberAccess","src":"5685:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5676:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":6801,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"5699:16:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6804,"indexExpression":{"expression":{"id":6802,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5716:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5720:6:28","memberName":"sender","nodeType":"MemberAccess","src":"5716:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5699:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5676:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6806,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"5731:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5676:61:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":6808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5739:22:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":6796,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5668:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:94:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6810,"nodeType":"ExpressionStatement","src":"5668:94:28"},{"assignments":[6812],"declarations":[{"constant":false,"id":6812,"mutability":"mutable","name":"unlockTime","nameLocation":"5781:10:28","nodeType":"VariableDeclaration","scope":6877,"src":"5773:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6811,"name":"uint256","nodeType":"ElementaryTypeName","src":"5773:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6817,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6813,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5794:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5800:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"5794:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"37","id":6815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5812:6:28","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"src":"5794:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5773:45:28"},{"assignments":[6819],"declarations":[{"constant":false,"id":6819,"mutability":"mutable","name":"User_stakeIndex","nameLocation":"5862:15:28","nodeType":"VariableDeclaration","scope":6877,"src":"5854:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6818,"name":"uint256","nodeType":"ElementaryTypeName","src":"5854:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6823,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6820,"name":"_UserStakeIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"5880:19:28","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage","typeString":"struct Counters.Counter storage ref"}},"id":6821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5900:7:28","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"5880:27:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2399_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2399_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5880:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5854:55:28"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6824,"name":"_UserStakeIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"5920:19:28","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage","typeString":"struct Counters.Counter storage ref"}},"id":6826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5940:9:28","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"5920:29:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2399_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2399_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5920:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6828,"nodeType":"ExpressionStatement","src":"5920:31:28"},{"assignments":[6830],"declarations":[{"constant":false,"id":6830,"mutability":"mutable","name":"isWagered","nameLocation":"6046:9:28","nodeType":"VariableDeclaration","scope":6877,"src":"6041:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6829,"name":"bool","nodeType":"ElementaryTypeName","src":"6041:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6831,"nodeType":"VariableDeclarationStatement","src":"6041:14:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6832,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"6070:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6079:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6070:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6851,"nodeType":"Block","src":"6189:44:28","statements":[{"expression":{"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6847,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"6204:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6216:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6204:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6850,"nodeType":"ExpressionStatement","src":"6204:17:28"}]},"id":6852,"nodeType":"IfStatement","src":"6066:167:28","trueBody":{"id":6846,"nodeType":"Block","src":"6082:101:28","statements":[{"expression":{"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6835,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"6097:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6109:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6097:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6838,"nodeType":"ExpressionStatement","src":"6097:16:28"},{"expression":{"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6839,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"6128:21:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6842,"indexExpression":{"expression":{"id":6840,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6150:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6154:6:28","memberName":"sender","nodeType":"MemberAccess","src":"6150:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6128:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6843,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"6165:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6128:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6845,"nodeType":"ExpressionStatement","src":"6128:43:28"}]}},{"expression":{"arguments":[{"expression":{"id":6856,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6270:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6274:6:28","memberName":"sender","nodeType":"MemberAccess","src":"6270:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6853,"name":"UserStakerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"6245:19:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6265:4:28","memberName":"push","nodeType":"MemberAccess","src":"6245:24:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6245:36:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6859,"nodeType":"ExpressionStatement","src":"6245:36:28"},{"expression":{"arguments":[{"id":6863,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"6315:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6860,"name":"UserSstakeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"6292:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6310:4:28","memberName":"push","nodeType":"MemberAccess","src":"6292:22:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6865,"nodeType":"ExpressionStatement","src":"6292:30:28"},{"eventCall":{"arguments":[{"expression":{"id":6867,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6357:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6361:6:28","memberName":"sender","nodeType":"MemberAccess","src":"6357:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6869,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"6369:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6870,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"6377:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6871,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"6388:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6872,"name":"User_stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"6400:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6866,"name":"DepositForProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"6338:18:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,bool,uint256,uint256)"}},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6874,"nodeType":"EmitStatement","src":"6333:83:28"},{"expression":{"id":6875,"name":"User_stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"6434:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6785,"id":6876,"nodeType":"Return","src":"6427:22:28"}]},"functionSelector":"bbebdd25","id":6878,"implemented":true,"kind":"function","modifiers":[],"name":"submitProposalForReview","nameLocation":"5510:23:28","nodeType":"FunctionDefinition","parameters":{"id":6782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6781,"mutability":"mutable","name":"amount","nameLocation":"5542:6:28","nodeType":"VariableDeclaration","scope":6878,"src":"5534:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6780,"name":"uint256","nodeType":"ElementaryTypeName","src":"5534:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5533:16:28"},"returnParameters":{"id":6785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6878,"src":"5565:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6783,"name":"uint256","nodeType":"ElementaryTypeName","src":"5565:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5564:9:28"},"scope":8249,"src":"5501:1033:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6971,"nodeType":"Block","src":"6756:1059:28","statements":[{"assignments":[6895],"declarations":[{"constant":false,"id":6895,"mutability":"mutable","name":"proposalId","nameLocation":"6800:10:28","nodeType":"VariableDeclaration","scope":6971,"src":"6792:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6894,"name":"uint256","nodeType":"ElementaryTypeName","src":"6792:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6899,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6896,"name":"_proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"6813:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage","typeString":"struct Counters.Counter storage ref"}},"id":6897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6826:7:28","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"6813:20:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2399_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2399_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6813:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6792:43:28"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6900,"name":"_proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"6870:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage","typeString":"struct Counters.Counter storage ref"}},"id":6902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6883:9:28","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"6870:22:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2399_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2399_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6870:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6904,"nodeType":"ExpressionStatement","src":"6870:24:28"},{"assignments":[6906],"declarations":[{"constant":false,"id":6906,"mutability":"mutable","name":"isWagered","nameLocation":"6930:9:28","nodeType":"VariableDeclaration","scope":6971,"src":"6925:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6905,"name":"bool","nodeType":"ElementaryTypeName","src":"6925:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6910,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6907,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6885,"src":"6942:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6951:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6942:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"6925:27:28"},{"assignments":[6912],"declarations":[{"constant":false,"id":6912,"mutability":"mutable","name":"unlockTime","nameLocation":"6973:10:28","nodeType":"VariableDeclaration","scope":6971,"src":"6965:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6911,"name":"uint256","nodeType":"ElementaryTypeName","src":"6965:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6920,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6913,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6986:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6992:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"6986:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6915,"name":"endtime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"7005:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":6916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7015:6:28","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"7005:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6918,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7004:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6986:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6965:57:28"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":6925,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7116:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7120:6:28","memberName":"sender","nodeType":"MemberAccess","src":"7116:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6927,"name":"proposalDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"7154:19:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6928,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6885,"src":"7201:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":6929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7230:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":6930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7260:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":6931,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"7291:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6932,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"7324:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6924,"name":"Proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"7082:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Proposal_$6643_storage_ptr_$","typeString":"type(struct VotingContract.Proposal storage pointer)"}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7106:8:28","7141:11:28","7188:11:28","7222:6:28","7249:9:28","7280:9:28","7315:7:28"],"names":["proposer","description","stakeAmount","active","isSettled","isWagered","endTime"],"nodeType":"FunctionCall","src":"7082:264:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_memory_ptr","typeString":"struct VotingContract.Proposal memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Proposal_$6643_memory_ptr","typeString":"struct VotingContract.Proposal memory"}],"expression":{"id":6921,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"7067:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7077:4:28","memberName":"push","nodeType":"MemberAccess","src":"7067:14:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$6643_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage_ptr_$","typeString":"function (struct VotingContract.Proposal storage ref[] storage pointer,struct VotingContract.Proposal storage ref)"}},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7067:280:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6935,"nodeType":"ExpressionStatement","src":"7067:280:28"},{"body":{"id":6959,"nodeType":"Block","src":"7447:168:28","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":6952,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"7534:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6954,"indexExpression":{"id":6953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"7553:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7534:21:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7585:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6951,"name":"Option","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"7495:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Option_$6648_storage_ptr_$","typeString":"type(struct VotingContract.Option storage pointer)"}},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7521:11:28","7574:9:28"],"names":["description","voteCount"],"nodeType":"FunctionCall","src":"7495:107:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Option_$6648_memory_ptr","typeString":"struct VotingContract.Option memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Option_$6648_memory_ptr","typeString":"struct VotingContract.Option memory"}],"expression":{"baseExpression":{"id":6947,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"7462:15:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$6648_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct VotingContract.Option storage ref[] storage ref)"}},"id":6949,"indexExpression":{"id":6948,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6895,"src":"7478:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7462:27:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$6648_storage_$dyn_storage","typeString":"struct VotingContract.Option storage ref[] storage ref"}},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7490:4:28","memberName":"push","nodeType":"MemberAccess","src":"7462:32:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Option_$6648_storage_$dyn_storage_ptr_$_t_struct$_Option_$6648_storage_$returns$__$bound_to$_t_array$_t_struct$_Option_$6648_storage_$dyn_storage_ptr_$","typeString":"function (struct VotingContract.Option storage ref[] storage pointer,struct VotingContract.Option storage ref)"}},"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7462:141:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6958,"nodeType":"ExpressionStatement","src":"7462:141:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6940,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"7411:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6941,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"7415:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7434:6:28","memberName":"length","nodeType":"MemberAccess","src":"7415:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7411:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6960,"initializationExpression":{"assignments":[6937],"declarations":[{"constant":false,"id":6937,"mutability":"mutable","name":"i","nameLocation":"7404:1:28","nodeType":"VariableDeclaration","scope":6960,"src":"7399:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6936,"name":"uint","nodeType":"ElementaryTypeName","src":"7399:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6939,"initialValue":{"hexValue":"30","id":6938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7408:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7399:10:28"},"loopExpression":{"expression":{"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7442:3:28","subExpression":{"id":6944,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"7442:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6946,"nodeType":"ExpressionStatement","src":"7442:3:28"},"nodeType":"ForStatement","src":"7394:221:28"},{"eventCall":{"arguments":[{"expression":{"id":6962,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7683:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7687:6:28","memberName":"sender","nodeType":"MemberAccess","src":"7683:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6964,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6895,"src":"7695:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6965,"name":"proposalDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"7707:19:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6966,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"7728:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}],"id":6961,"name":"ProposalAndOptionsSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"7655:27:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory,string memory[] memory)"}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7655:92:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6968,"nodeType":"EmitStatement","src":"7650:97:28"},{"expression":{"id":6969,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6895,"src":"7767:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6893,"id":6970,"nodeType":"Return","src":"7760:17:28"}]},"functionSelector":"3257917a","id":6972,"implemented":true,"kind":"function","modifiers":[{"id":6890,"kind":"modifierInvocation","modifierName":{"id":6889,"name":"onlyOwner","nameLocations":["6728:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"6728:9:28"},"nodeType":"ModifierInvocation","src":"6728:9:28"}],"name":"createProposalWithOptions","nameLocation":"6551:25:28","nodeType":"FunctionDefinition","parameters":{"id":6888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6880,"mutability":"mutable","name":"proposalDescription","nameLocation":"6601:19:28","nodeType":"VariableDeclaration","scope":6972,"src":"6587:33:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6879,"name":"string","nodeType":"ElementaryTypeName","src":"6587:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6883,"mutability":"mutable","name":"optionDescriptions","nameLocation":"6647:18:28","nodeType":"VariableDeclaration","scope":6972,"src":"6631:34:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6881,"name":"string","nodeType":"ElementaryTypeName","src":"6631:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6882,"nodeType":"ArrayTypeName","src":"6631:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":6885,"mutability":"mutable","name":"amount","nameLocation":"6681:6:28","nodeType":"VariableDeclaration","scope":6972,"src":"6676:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6884,"name":"uint","nodeType":"ElementaryTypeName","src":"6676:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6887,"mutability":"mutable","name":"endtime","nameLocation":"6706:7:28","nodeType":"VariableDeclaration","scope":6972,"src":"6698:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6886,"name":"uint256","nodeType":"ElementaryTypeName","src":"6698:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6576:144:28"},"returnParameters":{"id":6893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6972,"src":"6747:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6891,"name":"uint256","nodeType":"ElementaryTypeName","src":"6747:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6746:9:28"},"scope":8249,"src":"6542:1273:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7105,"nodeType":"Block","src":"8103:1367:28","statements":[{"assignments":[6993],"declarations":[{"constant":false,"id":6993,"mutability":"mutable","name":"UserAddress","nameLocation":"8124:11:28","nodeType":"VariableDeclaration","scope":7105,"src":"8116:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6992,"name":"address","nodeType":"ElementaryTypeName","src":"8116:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6997,"initialValue":{"baseExpression":{"id":6994,"name":"UserStakerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"8138:19:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6996,"indexExpression":{"id":6995,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"8158:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8138:31:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8116:53:28"},{"assignments":[6999],"declarations":[{"constant":false,"id":6999,"mutability":"mutable","name":"UserAmount","nameLocation":"8188:10:28","nodeType":"VariableDeclaration","scope":7105,"src":"8180:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6998,"name":"uint256","nodeType":"ElementaryTypeName","src":"8180:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7003,"initialValue":{"baseExpression":{"id":7000,"name":"UserSstakeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"8201:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7002,"indexExpression":{"id":7001,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"8219:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8201:29:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8180:50:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7005,"name":"UserAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"8249:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7006,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"8264:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8249:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7468652061646472657373206973206e6f742073616d65","id":7008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8277:25:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b428292f52eeb58e472551bd37ca5d8ad653dce4e49543125a54784ef3543cf","typeString":"literal_string \"the address is not same\""},"value":"the address is not same"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b428292f52eeb58e472551bd37ca5d8ad653dce4e49543125a54784ef3543cf","typeString":"literal_string \"the address is not same\""}],"id":7004,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8241:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8241:62:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7010,"nodeType":"ExpressionStatement","src":"8241:62:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7012,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"8322:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7013,"name":"UserAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"8337:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8322:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b656420616d6f756e7420646f6573206e6f74206d61746368206f7220696e73756666696369656e74","id":7015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8349:46:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fc8842c844f53bc2029576c87ad41a7dc243e6c939b339e369ba4b16dd600a1","typeString":"literal_string \"Staked amount does not match or insufficient\""},"value":"Staked amount does not match or insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fc8842c844f53bc2029576c87ad41a7dc243e6c939b339e369ba4b16dd600a1","typeString":"literal_string \"Staked amount does not match or insufficient\""}],"id":7011,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8314:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8314:82:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7017,"nodeType":"ExpressionStatement","src":"8314:82:28"},{"assignments":[7019],"declarations":[{"constant":false,"id":7019,"mutability":"mutable","name":"unlockTime","nameLocation":"8417:10:28","nodeType":"VariableDeclaration","scope":7105,"src":"8409:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7018,"name":"uint256","nodeType":"ElementaryTypeName","src":"8409:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7027,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7020,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8430:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8436:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"8430:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7022,"name":"endtime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"8449:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":7023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8459:6:28","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"8449:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8448:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8430:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8409:57:28"},{"assignments":[7029],"declarations":[{"constant":false,"id":7029,"mutability":"mutable","name":"isWagered","nameLocation":"8516:9:28","nodeType":"VariableDeclaration","scope":7105,"src":"8511:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7028,"name":"bool","nodeType":"ElementaryTypeName","src":"8511:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7030,"nodeType":"VariableDeclarationStatement","src":"8511:14:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7031,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"8540:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8554:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8540:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7043,"nodeType":"Block","src":"8606:44:28","statements":[{"expression":{"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7039,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"8621:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8633:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8621:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7042,"nodeType":"ExpressionStatement","src":"8621:17:28"}]},"id":7044,"nodeType":"IfStatement","src":"8536:114:28","trueBody":{"id":7038,"nodeType":"Block","src":"8557:43:28","statements":[{"expression":{"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7034,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"8572:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8584:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8572:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7037,"nodeType":"ExpressionStatement","src":"8572:16:28"}]}},{"expression":{"arguments":[{"arguments":[{"id":7049,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"8709:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7050,"name":"proposalDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"8748:19:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7051,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"8795:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":7052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8829:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":7053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8859:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":7054,"name":"isWagered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"8890:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7055,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"8923:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7048,"name":"Proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"8675:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Proposal_$6643_storage_ptr_$","typeString":"type(struct VotingContract.Proposal storage pointer)"}},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8699:8:28","8735:11:28","8782:11:28","8821:6:28","8848:9:28","8879:9:28","8914:7:28"],"names":["proposer","description","stakeAmount","active","isSettled","isWagered","endTime"],"nodeType":"FunctionCall","src":"8675:270:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_memory_ptr","typeString":"struct VotingContract.Proposal memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Proposal_$6643_memory_ptr","typeString":"struct VotingContract.Proposal memory"}],"expression":{"id":7045,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"8660:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8670:4:28","memberName":"push","nodeType":"MemberAccess","src":"8660:14:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$6643_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage_ptr_$","typeString":"function (struct VotingContract.Proposal storage ref[] storage pointer,struct VotingContract.Proposal storage ref)"}},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8660:286:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7058,"nodeType":"ExpressionStatement","src":"8660:286:28"},{"assignments":[7060],"declarations":[{"constant":false,"id":7060,"mutability":"mutable","name":"proposalId","nameLocation":"8966:10:28","nodeType":"VariableDeclaration","scope":7105,"src":"8958:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7059,"name":"uint256","nodeType":"ElementaryTypeName","src":"8958:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7064,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7061,"name":"_proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"8979:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage","typeString":"struct Counters.Counter storage ref"}},"id":7062,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8992:7:28","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"8979:20:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2399_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2399_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8979:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8958:43:28"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7065,"name":"_proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"9036:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage","typeString":"struct Counters.Counter storage ref"}},"id":7067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9049:9:28","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"9036:22:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2399_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2399_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9036:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7069,"nodeType":"ExpressionStatement","src":"9036:24:28"},{"body":{"id":7093,"nodeType":"Block","src":"9147:168:28","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":7086,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"9234:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7088,"indexExpression":{"id":7087,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"9253:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9234:21:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9285:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7085,"name":"Option","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"9195:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Option_$6648_storage_ptr_$","typeString":"type(struct VotingContract.Option storage pointer)"}},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9221:11:28","9274:9:28"],"names":["description","voteCount"],"nodeType":"FunctionCall","src":"9195:107:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Option_$6648_memory_ptr","typeString":"struct VotingContract.Option memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Option_$6648_memory_ptr","typeString":"struct VotingContract.Option memory"}],"expression":{"baseExpression":{"id":7081,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"9162:15:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$6648_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct VotingContract.Option storage ref[] storage ref)"}},"id":7083,"indexExpression":{"id":7082,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"9178:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9162:27:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$6648_storage_$dyn_storage","typeString":"struct VotingContract.Option storage ref[] storage ref"}},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9190:4:28","memberName":"push","nodeType":"MemberAccess","src":"9162:32:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Option_$6648_storage_$dyn_storage_ptr_$_t_struct$_Option_$6648_storage_$returns$__$bound_to$_t_array$_t_struct$_Option_$6648_storage_$dyn_storage_ptr_$","typeString":"function (struct VotingContract.Option storage ref[] storage pointer,struct VotingContract.Option storage ref)"}},"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:141:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7092,"nodeType":"ExpressionStatement","src":"9162:141:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7074,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"9111:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7075,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"9115:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9134:6:28","memberName":"length","nodeType":"MemberAccess","src":"9115:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9111:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7094,"initializationExpression":{"assignments":[7071],"declarations":[{"constant":false,"id":7071,"mutability":"mutable","name":"i","nameLocation":"9104:1:28","nodeType":"VariableDeclaration","scope":7094,"src":"9096:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7070,"name":"uint256","nodeType":"ElementaryTypeName","src":"9096:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7073,"initialValue":{"hexValue":"30","id":7072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9108:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9096:13:28"},"loopExpression":{"expression":{"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9142:3:28","subExpression":{"id":7078,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"9142:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7080,"nodeType":"ExpressionStatement","src":"9142:3:28"},"nodeType":"ForStatement","src":"9091:224:28"},{"eventCall":{"arguments":[{"id":7096,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"9356:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7097,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"9369:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7098,"name":"proposalDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"9381:19:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7099,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"9402:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7100,"name":"optionDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"9415:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}],"id":7095,"name":"ProposalForUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6583,"src":"9340:15:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory,uint256,string memory[] memory)"}},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9340:94:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7102,"nodeType":"EmitStatement","src":"9335:99:28"},{"expression":{"id":7103,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"9452:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6991,"id":7104,"nodeType":"Return","src":"9445:17:28"}]},"functionSelector":"a46188ad","id":7106,"implemented":true,"kind":"function","modifiers":[{"id":6988,"kind":"modifierInvocation","modifierName":{"id":6987,"name":"onlyOwner","nameLocations":["8076:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"8076:9:28"},"nodeType":"ModifierInvocation","src":"8076:9:28"}],"name":"processUserStakedProposal","nameLocation":"7832:25:28","nodeType":"FunctionDefinition","parameters":{"id":6986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6974,"mutability":"mutable","name":"userAddress","nameLocation":"7876:11:28","nodeType":"VariableDeclaration","scope":7106,"src":"7868:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6973,"name":"address","nodeType":"ElementaryTypeName","src":"7868:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6976,"mutability":"mutable","name":"proposalDescription","nameLocation":"7912:19:28","nodeType":"VariableDeclaration","scope":7106,"src":"7898:33:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6975,"name":"string","nodeType":"ElementaryTypeName","src":"7898:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6978,"mutability":"mutable","name":"stakeAmount","nameLocation":"7950:11:28","nodeType":"VariableDeclaration","scope":7106,"src":"7942:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6977,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6981,"mutability":"mutable","name":"optionDescriptions","nameLocation":"7988:18:28","nodeType":"VariableDeclaration","scope":7106,"src":"7972:34:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6979,"name":"string","nodeType":"ElementaryTypeName","src":"7972:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6980,"nodeType":"ArrayTypeName","src":"7972:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":6983,"mutability":"mutable","name":"stakeIndex","nameLocation":"8025:10:28","nodeType":"VariableDeclaration","scope":7106,"src":"8017:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6982,"name":"uint256","nodeType":"ElementaryTypeName","src":"8017:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6985,"mutability":"mutable","name":"endtime","nameLocation":"8054:7:28","nodeType":"VariableDeclaration","scope":7106,"src":"8046:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6984,"name":"uint256","nodeType":"ElementaryTypeName","src":"8046:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7857:211:28"},"returnParameters":{"id":6991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7106,"src":"8095:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6989,"name":"uint256","nodeType":"ElementaryTypeName","src":"8095:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8094:9:28"},"scope":8249,"src":"7823:1647:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7161,"nodeType":"Block","src":"9533:560:28","statements":[{"assignments":[7114],"declarations":[{"constant":false,"id":7114,"mutability":"mutable","name":"availableBalance","nameLocation":"9606:16:28","nodeType":"VariableDeclaration","scope":7161,"src":"9598:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7113,"name":"uint256","nodeType":"ElementaryTypeName","src":"9598:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7119,"initialValue":{"arguments":[{"expression":{"id":7116,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9653:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9657:6:28","memberName":"sender","nodeType":"MemberAccess","src":"9653:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7115,"name":"getAvailableWithdrawBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"9625:27:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9625:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9598:66:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7121,"name":"availableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"9683:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7122,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"9703:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9683:27:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f75676820617661696c61626c652062616c616e636520746f207769746864726177","id":7124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9712:42:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79504c74d22af25dc4748c6c8eea2c8196164c9caf60558494e9eba4af6624d","typeString":"literal_string \"Not enough available balance to withdraw\""},"value":"Not enough available balance to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79504c74d22af25dc4748c6c8eea2c8196164c9caf60558494e9eba4af6624d","typeString":"literal_string \"Not enough available balance to withdraw\""}],"id":7120,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9675:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9675:80:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7126,"nodeType":"ExpressionStatement","src":"9675:80:28"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":7132,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9844:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9848:6:28","memberName":"sender","nodeType":"MemberAccess","src":"9844:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7134,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"9856:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7129,"name":"myToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"9826:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7128,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"9819:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1135_$","typeString":"type(contract IERC20)"}},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9819:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1135","typeString":"contract IERC20"}},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9835:8:28","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1102,"src":"9819:24:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9819:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":7136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9866:17:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":7127,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9811:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9811:73:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7138,"nodeType":"ExpressionStatement","src":"9811:73:28"},{"expression":{"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7139,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"9922:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7142,"indexExpression":{"expression":{"id":7140,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9931:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9935:6:28","memberName":"sender","nodeType":"MemberAccess","src":"9931:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9922:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7143,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"9945:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7146,"indexExpression":{"expression":{"id":7144,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9954:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9958:6:28","memberName":"sender","nodeType":"MemberAccess","src":"9954:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9945:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7147,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"9968:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9945:30:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9922:53:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7150,"nodeType":"ExpressionStatement","src":"9922:53:28"},{"eventCall":{"arguments":[{"expression":{"id":7152,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10043:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10047:6:28","memberName":"sender","nodeType":"MemberAccess","src":"10043:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7154,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"10055:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":7155,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"10064:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7158,"indexExpression":{"expression":{"id":7156,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10073:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10077:6:28","memberName":"sender","nodeType":"MemberAccess","src":"10073:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10064:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7151,"name":"WithdrawalDetailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"10024:18:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10024:61:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7160,"nodeType":"EmitStatement","src":"10019:66:28"}]},"functionSelector":"2e1a7d4d","id":7162,"implemented":true,"kind":"function","modifiers":[{"id":7111,"kind":"modifierInvocation","modifierName":{"id":7110,"name":"nonReentrant","nameLocations":["9520:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":435,"src":"9520:12:28"},"nodeType":"ModifierInvocation","src":"9520:12:28"}],"name":"withdraw","nameLocation":"9487:8:28","nodeType":"FunctionDefinition","parameters":{"id":7109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7108,"mutability":"mutable","name":"_amount","nameLocation":"9504:7:28","nodeType":"VariableDeclaration","scope":7162,"src":"9496:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7107,"name":"uint256","nodeType":"ElementaryTypeName","src":"9496:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9495:17:28"},"returnParameters":{"id":7112,"nodeType":"ParameterList","parameters":[],"src":"9533:0:28"},"scope":8249,"src":"9478:615:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7202,"nodeType":"Block","src":"10182:386:28","statements":[{"assignments":[7170],"declarations":[{"constant":false,"id":7170,"mutability":"mutable","name":"totalBalance","nameLocation":"10201:12:28","nodeType":"VariableDeclaration","scope":7202,"src":"10193:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7169,"name":"uint256","nodeType":"ElementaryTypeName","src":"10193:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7174,"initialValue":{"baseExpression":{"id":7171,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"10216:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7173,"indexExpression":{"id":7172,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"10225:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10216:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10193:37:28"},{"assignments":[7176],"declarations":[{"constant":false,"id":7176,"mutability":"mutable","name":"lockedForVoting","nameLocation":"10249:15:28","nodeType":"VariableDeclaration","scope":7202,"src":"10241:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7175,"name":"uint256","nodeType":"ElementaryTypeName","src":"10241:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7180,"initialValue":{"baseExpression":{"id":7177,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"10267:16:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7179,"indexExpression":{"id":7178,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"10284:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10267:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10241:48:28"},{"assignments":[7182],"declarations":[{"constant":false,"id":7182,"mutability":"mutable","name":"lockedInProposals","nameLocation":"10308:17:28","nodeType":"VariableDeclaration","scope":7202,"src":"10300:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7181,"name":"uint256","nodeType":"ElementaryTypeName","src":"10300:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7186,"initialValue":{"baseExpression":{"id":7183,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"10328:21:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7185,"indexExpression":{"id":7184,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"10350:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10328:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10300:55:28"},{"assignments":[7188],"declarations":[{"constant":false,"id":7188,"mutability":"mutable","name":"totalLocked","nameLocation":"10434:11:28","nodeType":"VariableDeclaration","scope":7202,"src":"10426:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7187,"name":"uint256","nodeType":"ElementaryTypeName","src":"10426:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7192,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7189,"name":"lockedForVoting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"10448:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7190,"name":"lockedInProposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7182,"src":"10466:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10448:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10426:57:28"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7193,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"10501:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7194,"name":"totalLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7188,"src":"10516:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10501:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":7199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10559:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10501:59:28","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7196,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"10530:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7197,"name":"totalLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7188,"src":"10545:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10530:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7168,"id":7201,"nodeType":"Return","src":"10494:66:28"}]},"functionSelector":"bcfc4429","id":7203,"implemented":true,"kind":"function","modifiers":[],"name":"getAvailableWithdrawBalance","nameLocation":"10110:27:28","nodeType":"FunctionDefinition","parameters":{"id":7165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7164,"mutability":"mutable","name":"user","nameLocation":"10146:4:28","nodeType":"VariableDeclaration","scope":7203,"src":"10138:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7163,"name":"address","nodeType":"ElementaryTypeName","src":"10138:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10137:14:28"},"returnParameters":{"id":7168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7203,"src":"10173:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7166,"name":"uint256","nodeType":"ElementaryTypeName","src":"10173:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10172:9:28"},"scope":8249,"src":"10101:467:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7249,"nodeType":"Block","src":"10665:388:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7213,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"10684:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7214,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"10698:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10708:6:28","memberName":"length","nodeType":"MemberAccess","src":"10698:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10684:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f74206578697374","id":7217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10716:25:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf","typeString":"literal_string \"Proposal does not exist\""},"value":"Proposal does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf","typeString":"literal_string \"Proposal does not exist\""}],"id":7212,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10676:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10676:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7219,"nodeType":"ExpressionStatement","src":"10676:66:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7221,"name":"_newEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"10761:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":7222,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10776:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10782:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"10776:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10761:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e657720656e642074696d65206d75737420626520696e2074686520667574757265","id":7225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10793:36:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec90f3609c0acd8dbd6d2b2e60325a4187cedf7e007e1a4c20325911a80ecee8","typeString":"literal_string \"New end time must be in the future\""},"value":"New end time must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec90f3609c0acd8dbd6d2b2e60325a4187cedf7e007e1a4c20325911a80ecee8","typeString":"literal_string \"New end time must be in the future\""}],"id":7220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10753:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10753:77:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7227,"nodeType":"ExpressionStatement","src":"10753:77:28"},{"assignments":[7230],"declarations":[{"constant":false,"id":7230,"mutability":"mutable","name":"proposal","nameLocation":"10860:8:28","nodeType":"VariableDeclaration","scope":7249,"src":"10843:25:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal"},"typeName":{"id":7229,"nodeType":"UserDefinedTypeName","pathNode":{"id":7228,"name":"Proposal","nameLocations":["10843:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":6643,"src":"10843:8:28"},"referencedDeclaration":6643,"src":"10843:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal"}},"visibility":"internal"}],"id":7234,"initialValue":{"baseExpression":{"id":7231,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"10871:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":7233,"indexExpression":{"id":7232,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"10881:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10871:22:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage","typeString":"struct VotingContract.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10843:50:28"},{"expression":{"id":7242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7235,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"10948:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10957:7:28","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":6642,"src":"10948:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7238,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10967:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10973:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"10967:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10985:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10967:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10948:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7243,"nodeType":"ExpressionStatement","src":"10948:38:28"},{"eventCall":{"arguments":[{"id":7245,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"11020:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7246,"name":"_newEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"11033:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7244,"name":"ProposalEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"11004:15:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11004:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7248,"nodeType":"EmitStatement","src":"10999:46:28"}]},"functionSelector":"3c2bb910","id":7250,"implemented":true,"kind":"function","modifiers":[{"id":7210,"kind":"modifierInvocation","modifierName":{"id":7209,"name":"onlyOwner","nameLocations":["10655:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"10655:9:28"},"nodeType":"ModifierInvocation","src":"10655:9:28"}],"name":"setProposalEndTime","nameLocation":"10587:18:28","nodeType":"FunctionDefinition","parameters":{"id":7208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7205,"mutability":"mutable","name":"_proposalId","nameLocation":"10614:11:28","nodeType":"VariableDeclaration","scope":7250,"src":"10606:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7204,"name":"uint256","nodeType":"ElementaryTypeName","src":"10606:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7207,"mutability":"mutable","name":"_newEndTime","nameLocation":"10635:11:28","nodeType":"VariableDeclaration","scope":7250,"src":"10627:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7206,"name":"uint256","nodeType":"ElementaryTypeName","src":"10627:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10605:42:28"},"returnParameters":{"id":7211,"nodeType":"ParameterList","parameters":[],"src":"10665:0:28"},"scope":8249,"src":"10578:475:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7267,"nodeType":"Block","src":"11134:102:28","statements":[{"assignments":[7259],"declarations":[{"constant":false,"id":7259,"mutability":"mutable","name":"proposal","nameLocation":"11162:8:28","nodeType":"VariableDeclaration","scope":7267,"src":"11145:25:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal"},"typeName":{"id":7258,"nodeType":"UserDefinedTypeName","pathNode":{"id":7257,"name":"Proposal","nameLocations":["11145:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":6643,"src":"11145:8:28"},"referencedDeclaration":6643,"src":"11145:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal"}},"visibility":"internal"}],"id":7263,"initialValue":{"baseExpression":{"id":7260,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"11173:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":7262,"indexExpression":{"id":7261,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"11183:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11173:22:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage","typeString":"struct VotingContract.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11145:50:28"},{"expression":{"expression":{"id":7264,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"11213:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11222:6:28","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"11213:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7256,"id":7266,"nodeType":"Return","src":"11206:22:28"}]},"functionSelector":"401853b7","id":7268,"implemented":true,"kind":"function","modifiers":[],"name":"getProposalStatus","nameLocation":"11070:17:28","nodeType":"FunctionDefinition","parameters":{"id":7253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7252,"mutability":"mutable","name":"_proposalId","nameLocation":"11096:11:28","nodeType":"VariableDeclaration","scope":7268,"src":"11088:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7251,"name":"uint256","nodeType":"ElementaryTypeName","src":"11088:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11087:21:28"},"returnParameters":{"id":7256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7268,"src":"11129:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7254,"name":"bool","nodeType":"ElementaryTypeName","src":"11129:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11128:6:28"},"scope":8249,"src":"11061:175:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7432,"nodeType":"Block","src":"11351:1352:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7280,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"11370:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7281,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"11384:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11394:6:28","memberName":"length","nodeType":"MemberAccess","src":"11384:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11370:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652070726f706f73616c20646f6573206e6f74206578697374","id":7284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11402:29:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad4c13d2602241c2440d2ed12e7215064e17577673a7db0a3a701fd396ed1105","typeString":"literal_string \"The proposal does not exist\""},"value":"The proposal does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad4c13d2602241c2440d2ed12e7215064e17577673a7db0a3a701fd396ed1105","typeString":"literal_string \"The proposal does not exist\""}],"id":7279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11362:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7286,"nodeType":"ExpressionStatement","src":"11362:70:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7288,"name":"_optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"11451:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":7289,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"11463:15:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$6648_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct VotingContract.Option storage ref[] storage ref)"}},"id":7291,"indexExpression":{"id":7290,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"11479:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11463:28:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$6648_storage_$dyn_storage","typeString":"struct VotingContract.Option storage ref[] storage ref"}},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:28","memberName":"length","nodeType":"MemberAccess","src":"11463:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11451:47:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546865206f7074696f6e20646f6573206e6f74206578697374","id":7294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11500:27:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1baf05c7f68b4988263a981f9d85ceddefc7d241b7e390c5696cb7040c54464","typeString":"literal_string \"The option does not exist\""},"value":"The option does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1baf05c7f68b4988263a981f9d85ceddefc7d241b7e390c5696cb7040c54464","typeString":"literal_string \"The option does not exist\""}],"id":7287,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11443:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11443:85:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7296,"nodeType":"ExpressionStatement","src":"11443:85:28"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7298,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"11547:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":7300,"indexExpression":{"id":7299,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"11557:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11547:22:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage","typeString":"struct VotingContract.Proposal storage ref"}},"id":7301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11570:6:28","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"11547:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652070726f706f73616c206973206e6f7420616374697665","id":7302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11578:28:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_56fd10b741520e640eddaf183a07f1da2c5968fd6e99a056932e64166c0fffa7","typeString":"literal_string \"The proposal is not active\""},"value":"The proposal is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56fd10b741520e640eddaf183a07f1da2c5968fd6e99a056932e64166c0fffa7","typeString":"literal_string \"The proposal is not active\""}],"id":7297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11539:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11539:68:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7304,"nodeType":"ExpressionStatement","src":"11539:68:28"},{"assignments":[7306],"declarations":[{"constant":false,"id":7306,"mutability":"mutable","name":"remainingVotingRights","nameLocation":"11628:21:28","nodeType":"VariableDeclaration","scope":7432,"src":"11620:29:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7305,"name":"uint256","nodeType":"ElementaryTypeName","src":"11620:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7321,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7307,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"11652:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7310,"indexExpression":{"expression":{"id":7308,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11661:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11665:6:28","memberName":"sender","nodeType":"MemberAccess","src":"11661:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11652:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":7311,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"11675:16:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7314,"indexExpression":{"expression":{"id":7312,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11692:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11696:6:28","memberName":"sender","nodeType":"MemberAccess","src":"11692:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11675:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11652:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":7316,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"11706:21:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7319,"indexExpression":{"expression":{"id":7317,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11728:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11732:6:28","memberName":"sender","nodeType":"MemberAccess","src":"11728:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11706:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11652:87:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11620:119:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7323,"name":"remainingVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7306,"src":"11758:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7324,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"11783:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11758:32:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420766f74696e6720726967687473","id":7326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11792:28:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_08708e61edb6abda4b4e5f0a6b7fa9f2f9eb4447ccbaba9e67b398d115d75673","typeString":"literal_string \"Insufficient voting rights\""},"value":"Insufficient voting rights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_08708e61edb6abda4b4e5f0a6b7fa9f2f9eb4447ccbaba9e67b398d115d75673","typeString":"literal_string \"Insufficient voting rights\""}],"id":7322,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11750:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11750:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7328,"nodeType":"ExpressionStatement","src":"11750:71:28"},{"expression":{"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7329,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"11834:16:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7332,"indexExpression":{"expression":{"id":7330,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11851:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11855:6:28","memberName":"sender","nodeType":"MemberAccess","src":"11851:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11834:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7333,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"11865:16:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7336,"indexExpression":{"expression":{"id":7334,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11882:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11886:6:28","memberName":"sender","nodeType":"MemberAccess","src":"11882:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11865:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7337,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"11896:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11865:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11834:69:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7340,"nodeType":"ExpressionStatement","src":"11834:69:28"},{"expression":{"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":7341,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"11914:15:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$6648_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct VotingContract.Option storage ref[] storage ref)"}},"id":7344,"indexExpression":{"id":7342,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"11930:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11914:28:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$6648_storage_$dyn_storage","typeString":"struct VotingContract.Option storage ref[] storage ref"}},"id":7345,"indexExpression":{"id":7343,"name":"_optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"11943:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11914:39:28","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$6648_storage","typeString":"struct VotingContract.Option storage ref"}},"id":7346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11954:9:28","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":6647,"src":"11914:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7347,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"11967:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11914:60:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7349,"nodeType":"ExpressionStatement","src":"11914:60:28"},{"expression":{"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7350,"name":"votingRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"11985:13:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":7354,"indexExpression":{"expression":{"id":7351,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11999:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12003:6:28","memberName":"sender","nodeType":"MemberAccess","src":"11999:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11985:25:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7355,"indexExpression":{"id":7353,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"12011:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11985:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7356,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"12027:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11985:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7358,"nodeType":"ExpressionStatement","src":"11985:49:28"},{"expression":{"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7359,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"12045:6:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":7363,"indexExpression":{"expression":{"id":7360,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12052:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12056:6:28","memberName":"sender","nodeType":"MemberAccess","src":"12052:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12045:18:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":7364,"indexExpression":{"id":7362,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"12064:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12045:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12079:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12045:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7367,"nodeType":"ExpressionStatement","src":"12045:38:28"},{"expression":{"arguments":[{"arguments":[{"id":7374,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"12140:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7375,"name":"_optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"12153:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7376,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"12164:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7373,"name":"VoteRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"12129:10:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_VoteRecord_$6664_storage_ptr_$","typeString":"type(struct VotingContract.VoteRecord storage pointer)"}},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$6664_memory_ptr","typeString":"struct VotingContract.VoteRecord memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VoteRecord_$6664_memory_ptr","typeString":"struct VotingContract.VoteRecord memory"}],"expression":{"baseExpression":{"id":7368,"name":"userVotingHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"12094:17:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_$","typeString":"mapping(address => struct VotingContract.VoteRecord storage ref[] storage ref)"}},"id":7371,"indexExpression":{"expression":{"id":7369,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12112:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12116:6:28","memberName":"sender","nodeType":"MemberAccess","src":"12112:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12094:29:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage","typeString":"struct VotingContract.VoteRecord storage ref[] storage ref"}},"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12124:4:28","memberName":"push","nodeType":"MemberAccess","src":"12094:34:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_ptr_$_t_struct$_VoteRecord_$6664_storage_$returns$__$bound_to$_t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_ptr_$","typeString":"function (struct VotingContract.VoteRecord storage ref[] storage pointer,struct VotingContract.VoteRecord storage ref)"}},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12094:79:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7379,"nodeType":"ExpressionStatement","src":"12094:79:28"},{"expression":{"arguments":[{"expression":{"id":7384,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12217:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12221:6:28","memberName":"sender","nodeType":"MemberAccess","src":"12217:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":7380,"name":"proposalVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"12184:14:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":7382,"indexExpression":{"id":7381,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"12199:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12184:27:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12212:4:28","memberName":"push","nodeType":"MemberAccess","src":"12184:32:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12184:44:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7387,"nodeType":"ExpressionStatement","src":"12184:44:28"},{"expression":{"arguments":[{"expression":{"id":7392,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12341:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12345:6:28","memberName":"sender","nodeType":"MemberAccess","src":"12341:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":7388,"name":"voterAddressesByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"12298:24:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":7390,"indexExpression":{"id":7389,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"12323:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12298:37:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12336:4:28","memberName":"push","nodeType":"MemberAccess","src":"12298:42:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":7394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12298:54:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7395,"nodeType":"ExpressionStatement","src":"12298:54:28"},{"expression":{"arguments":[{"id":7400,"name":"_optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"12401:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":7396,"name":"optionIdsByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"12363:19:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":7398,"indexExpression":{"id":7397,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"12383:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12363:32:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12396:4:28","memberName":"push","nodeType":"MemberAccess","src":"12363:37:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12363:48:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7402,"nodeType":"ExpressionStatement","src":"12363:48:28"},{"expression":{"arguments":[{"id":7407,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"12461:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":7403,"name":"voteCountsByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"12422:20:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":7405,"indexExpression":{"id":7404,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"12443:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12422:33:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12456:4:28","memberName":"push","nodeType":"MemberAccess","src":"12422:38:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12422:47:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7409,"nodeType":"ExpressionStatement","src":"12422:47:28"},{"expression":{"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7410,"name":"voterIndexInProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"12531:20:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":7414,"indexExpression":{"expression":{"id":7411,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12552:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12556:6:28","memberName":"sender","nodeType":"MemberAccess","src":"12552:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12531:32:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7415,"indexExpression":{"id":7413,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"12564:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12531:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7416,"name":"voterAddressesByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"12579:24:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":7418,"indexExpression":{"id":7417,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"12604:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12579:37:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12617:6:28","memberName":"length","nodeType":"MemberAccess","src":"12579:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12579:48:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12531:96:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7423,"nodeType":"ExpressionStatement","src":"12531:96:28"},{"eventCall":{"arguments":[{"expression":{"id":7425,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12651:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12655:6:28","memberName":"sender","nodeType":"MemberAccess","src":"12651:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7427,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"12663:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7428,"name":"_optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"12676:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7429,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"12687:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7424,"name":"Voted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"12645:5:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12645:50:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7431,"nodeType":"EmitStatement","src":"12640:55:28"}]},"functionSelector":"8a6655d6","id":7433,"implemented":true,"kind":"function","modifiers":[{"id":7277,"kind":"modifierInvocation","modifierName":{"id":7276,"name":"whenNotPaused","nameLocations":["11337:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":332,"src":"11337:13:28"},"nodeType":"ModifierInvocation","src":"11337:13:28"}],"name":"vote","nameLocation":"11268:4:28","nodeType":"FunctionDefinition","parameters":{"id":7275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7270,"mutability":"mutable","name":"_proposalId","nameLocation":"11281:11:28","nodeType":"VariableDeclaration","scope":7433,"src":"11273:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7269,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7272,"mutability":"mutable","name":"_optionId","nameLocation":"11302:9:28","nodeType":"VariableDeclaration","scope":7433,"src":"11294:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7271,"name":"uint256","nodeType":"ElementaryTypeName","src":"11294:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7274,"mutability":"mutable","name":"_amount","nameLocation":"11321:7:28","nodeType":"VariableDeclaration","scope":7433,"src":"11313:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7273,"name":"uint256","nodeType":"ElementaryTypeName","src":"11313:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11272:57:28"},"returnParameters":{"id":7278,"nodeType":"ParameterList","parameters":[],"src":"11351:0:28"},"scope":8249,"src":"11259:1444:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7448,"nodeType":"Block","src":"12826:66:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":7444,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12878:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_VotingContract_$8249","typeString":"contract VotingContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VotingContract_$8249","typeString":"contract VotingContract"}],"id":7443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12870:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7442,"name":"address","nodeType":"ElementaryTypeName","src":"12870:7:28","typeDescriptions":{}}},"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7439,"name":"myToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"12851:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7438,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"12844:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1135_$","typeString":"type(contract IERC20)"}},"id":7440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12844:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1135","typeString":"contract IERC20"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12860:9:28","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1092,"src":"12844:25:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12844:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7437,"id":7447,"nodeType":"Return","src":"12837:47:28"}]},"functionSelector":"6f9fb98a","id":7449,"implemented":true,"kind":"function","modifiers":[],"name":"getContractBalance","nameLocation":"12778:18:28","nodeType":"FunctionDefinition","parameters":{"id":7434,"nodeType":"ParameterList","parameters":[],"src":"12796:2:28"},"returnParameters":{"id":7437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7449,"src":"12820:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7435,"name":"uint","nodeType":"ElementaryTypeName","src":"12820:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12819:6:28"},"scope":8249,"src":"12769:123:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7457,"nodeType":"Block","src":"12934:27:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7454,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"12945:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12945:8:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7456,"nodeType":"ExpressionStatement","src":"12945:8:28"}]},"functionSelector":"8456cb59","id":7458,"implemented":true,"kind":"function","modifiers":[{"id":7452,"kind":"modifierInvocation","modifierName":{"id":7451,"name":"onlyOwner","nameLocations":["12924:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"12924:9:28"},"nodeType":"ModifierInvocation","src":"12924:9:28"}],"name":"pause","nameLocation":"12909:5:28","nodeType":"FunctionDefinition","parameters":{"id":7450,"nodeType":"ParameterList","parameters":[],"src":"12914:2:28"},"returnParameters":{"id":7453,"nodeType":"ParameterList","parameters":[],"src":"12934:0:28"},"scope":8249,"src":"12900:61:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7466,"nodeType":"Block","src":"13005:29:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7463,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"13016:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13016:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7465,"nodeType":"ExpressionStatement","src":"13016:10:28"}]},"functionSelector":"3f4ba83a","id":7467,"implemented":true,"kind":"function","modifiers":[{"id":7461,"kind":"modifierInvocation","modifierName":{"id":7460,"name":"onlyOwner","nameLocations":["12995:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"12995:9:28"},"nodeType":"ModifierInvocation","src":"12995:9:28"}],"name":"unpause","nameLocation":"12978:7:28","nodeType":"FunctionDefinition","parameters":{"id":7459,"nodeType":"ParameterList","parameters":[],"src":"12985:2:28"},"returnParameters":{"id":7462,"nodeType":"ParameterList","parameters":[],"src":"13005:0:28"},"scope":8249,"src":"12969:65:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7557,"nodeType":"Block","src":"13276:446:28","statements":[{"assignments":[7485],"declarations":[{"constant":false,"id":7485,"mutability":"mutable","name":"records","nameLocation":"13308:7:28","nodeType":"VariableDeclaration","scope":7557,"src":"13287:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_ptr","typeString":"struct VotingContract.VoteRecord[]"},"typeName":{"baseType":{"id":7483,"nodeType":"UserDefinedTypeName","pathNode":{"id":7482,"name":"VoteRecord","nameLocations":["13287:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":6664,"src":"13287:10:28"},"referencedDeclaration":6664,"src":"13287:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$6664_storage_ptr","typeString":"struct VotingContract.VoteRecord"}},"id":7484,"nodeType":"ArrayTypeName","src":"13287:12:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_ptr","typeString":"struct VotingContract.VoteRecord[]"}},"visibility":"internal"}],"id":7489,"initialValue":{"baseExpression":{"id":7486,"name":"userVotingHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"13318:17:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_$","typeString":"mapping(address => struct VotingContract.VoteRecord storage ref[] storage ref)"}},"id":7488,"indexExpression":{"id":7487,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"13336:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13318:24:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage","typeString":"struct VotingContract.VoteRecord storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13287:55:28"},{"expression":{"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7490,"name":"proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"13353:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7494,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"13381:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_ptr","typeString":"struct VotingContract.VoteRecord storage ref[] storage pointer"}},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13389:6:28","memberName":"length","nodeType":"MemberAccess","src":"13381:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13367:13:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":7491,"name":"uint256","nodeType":"ElementaryTypeName","src":"13371:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7492,"nodeType":"ArrayTypeName","src":"13371:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13367:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"13353:43:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7498,"nodeType":"ExpressionStatement","src":"13353:43:28"},{"expression":{"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7499,"name":"optionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"13407:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7503,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"13433:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_ptr","typeString":"struct VotingContract.VoteRecord storage ref[] storage pointer"}},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13441:6:28","memberName":"length","nodeType":"MemberAccess","src":"13433:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13419:13:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":7500,"name":"uint256","nodeType":"ElementaryTypeName","src":"13423:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7501,"nodeType":"ArrayTypeName","src":"13423:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13419:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"13407:41:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7507,"nodeType":"ExpressionStatement","src":"13407:41:28"},{"expression":{"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7508,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"13459:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7512,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"13483:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_ptr","typeString":"struct VotingContract.VoteRecord storage ref[] storage pointer"}},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13491:6:28","memberName":"length","nodeType":"MemberAccess","src":"13483:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13469:13:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":7509,"name":"uint256","nodeType":"ElementaryTypeName","src":"13473:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7510,"nodeType":"ArrayTypeName","src":"13473:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13469:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"13459:39:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7516,"nodeType":"ExpressionStatement","src":"13459:39:28"},{"body":{"id":7555,"nodeType":"Block","src":"13556:159:28","statements":[{"expression":{"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7528,"name":"proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"13571:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7530,"indexExpression":{"id":7529,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"13583:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13571:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":7531,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"13588:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_ptr","typeString":"struct VotingContract.VoteRecord storage ref[] storage pointer"}},"id":7533,"indexExpression":{"id":7532,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"13596:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13588:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$6664_storage","typeString":"struct VotingContract.VoteRecord storage ref"}},"id":7534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13599:10:28","memberName":"proposalId","nodeType":"MemberAccess","referencedDeclaration":6659,"src":"13588:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13571:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7536,"nodeType":"ExpressionStatement","src":"13571:38:28"},{"expression":{"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7537,"name":"optionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"13624:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7539,"indexExpression":{"id":7538,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"13634:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13624:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":7540,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"13639:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_ptr","typeString":"struct VotingContract.VoteRecord storage ref[] storage pointer"}},"id":7542,"indexExpression":{"id":7541,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"13647:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13639:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$6664_storage","typeString":"struct VotingContract.VoteRecord storage ref"}},"id":7543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13650:8:28","memberName":"optionId","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"13639:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13624:34:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7545,"nodeType":"ExpressionStatement","src":"13624:34:28"},{"expression":{"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7546,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"13673:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7548,"indexExpression":{"id":7547,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"13681:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13673:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":7549,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"13686:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_ptr","typeString":"struct VotingContract.VoteRecord storage ref[] storage pointer"}},"id":7551,"indexExpression":{"id":7550,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"13694:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13686:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_VoteRecord_$6664_storage","typeString":"struct VotingContract.VoteRecord storage ref"}},"id":7552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13697:6:28","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6663,"src":"13686:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13673:30:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7554,"nodeType":"ExpressionStatement","src":"13673:30:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7521,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"13531:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7522,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"13535:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VoteRecord_$6664_storage_$dyn_storage_ptr","typeString":"struct VotingContract.VoteRecord storage ref[] storage pointer"}},"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13543:6:28","memberName":"length","nodeType":"MemberAccess","src":"13535:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13531:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7556,"initializationExpression":{"assignments":[7518],"declarations":[{"constant":false,"id":7518,"mutability":"mutable","name":"i","nameLocation":"13524:1:28","nodeType":"VariableDeclaration","scope":7556,"src":"13516:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7517,"name":"uint256","nodeType":"ElementaryTypeName","src":"13516:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7520,"initialValue":{"hexValue":"30","id":7519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13528:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13516:13:28"},"loopExpression":{"expression":{"id":7526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13551:3:28","subExpression":{"id":7525,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"13551:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7527,"nodeType":"ExpressionStatement","src":"13551:3:28"},"nodeType":"ForStatement","src":"13511:204:28"}]},"functionSelector":"0ff7c4a5","id":7558,"implemented":true,"kind":"function","modifiers":[],"name":"getUserVotingHistory","nameLocation":"13053:20:28","nodeType":"FunctionDefinition","parameters":{"id":7470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7469,"mutability":"mutable","name":"_user","nameLocation":"13082:5:28","nodeType":"VariableDeclaration","scope":7558,"src":"13074:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7468,"name":"address","nodeType":"ElementaryTypeName","src":"13074:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13073:15:28"},"returnParameters":{"id":7480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7473,"mutability":"mutable","name":"proposalIds","nameLocation":"13168:11:28","nodeType":"VariableDeclaration","scope":7558,"src":"13151:28:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7471,"name":"uint256","nodeType":"ElementaryTypeName","src":"13151:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7472,"nodeType":"ArrayTypeName","src":"13151:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7476,"mutability":"mutable","name":"optionIds","nameLocation":"13211:9:28","nodeType":"VariableDeclaration","scope":7558,"src":"13194:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7474,"name":"uint256","nodeType":"ElementaryTypeName","src":"13194:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7475,"nodeType":"ArrayTypeName","src":"13194:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7479,"mutability":"mutable","name":"amounts","nameLocation":"13252:7:28","nodeType":"VariableDeclaration","scope":7558,"src":"13235:24:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7477,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7478,"nodeType":"ArrayTypeName","src":"13235:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13136:134:28"},"scope":8249,"src":"13044:678:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7566,"nodeType":"Block","src":"13787:42:28","statements":[{"expression":{"expression":{"id":7563,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"13805:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":7564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13815:6:28","memberName":"length","nodeType":"MemberAccess","src":"13805:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7562,"id":7565,"nodeType":"Return","src":"13798:23:28"}]},"functionSelector":"44c7c867","id":7567,"implemented":true,"kind":"function","modifiers":[],"name":"proposalsLength","nameLocation":"13739:15:28","nodeType":"FunctionDefinition","parameters":{"id":7559,"nodeType":"ParameterList","parameters":[],"src":"13754:2:28"},"returnParameters":{"id":7562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7567,"src":"13778:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7560,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13777:9:28"},"scope":8249,"src":"13730:99:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7579,"nodeType":"Block","src":"13912:60:28","statements":[{"expression":{"expression":{"baseExpression":{"id":7574,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"13930:15:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$6648_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct VotingContract.Option storage ref[] storage ref)"}},"id":7576,"indexExpression":{"id":7575,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"13946:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13930:27:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$6648_storage_$dyn_storage","typeString":"struct VotingContract.Option storage ref[] storage ref"}},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13958:6:28","memberName":"length","nodeType":"MemberAccess","src":"13930:34:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7573,"id":7578,"nodeType":"Return","src":"13923:41:28"}]},"functionSelector":"517a6257","id":7580,"implemented":true,"kind":"function","modifiers":[],"name":"getOptionsCount","nameLocation":"13846:15:28","nodeType":"FunctionDefinition","parameters":{"id":7570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7569,"mutability":"mutable","name":"proposalId","nameLocation":"13870:10:28","nodeType":"VariableDeclaration","scope":7580,"src":"13862:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7568,"name":"uint256","nodeType":"ElementaryTypeName","src":"13862:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13861:20:28"},"returnParameters":{"id":7573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7580,"src":"13903:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7571,"name":"uint256","nodeType":"ElementaryTypeName","src":"13903:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13902:9:28"},"scope":8249,"src":"13837:135:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7614,"nodeType":"Block","src":"14079:248:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7590,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"14098:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7591,"name":"proposalsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"14111:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14111:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14098:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f742065786973742e","id":7594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14130:26:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""},"value":"Proposal does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""}],"id":7589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14090:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14090:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7596,"nodeType":"ExpressionStatement","src":"14090:67:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7598,"name":"optionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7584,"src":"14176:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":7599,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"14190:15:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$6648_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct VotingContract.Option storage ref[] storage ref)"}},"id":7601,"indexExpression":{"id":7600,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"14206:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14190:27:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$6648_storage_$dyn_storage","typeString":"struct VotingContract.Option storage ref[] storage ref"}},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14218:6:28","memberName":"length","nodeType":"MemberAccess","src":"14190:34:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14176:48:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7074696f6e20646f6573206e6f742065786973742e","id":7604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14226:24:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c96351760664d5f0ce55d0d1dc357029f6c2dc2bf4d3c92c17f779822745bb8","typeString":"literal_string \"Option does not exist.\""},"value":"Option does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0c96351760664d5f0ce55d0d1dc357029f6c2dc2bf4d3c92c17f779822745bb8","typeString":"literal_string \"Option does not exist.\""}],"id":7597,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14168:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14168:83:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7606,"nodeType":"ExpressionStatement","src":"14168:83:28"},{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":7607,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"14269:15:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$6648_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct VotingContract.Option storage ref[] storage ref)"}},"id":7609,"indexExpression":{"id":7608,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"14285:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14269:27:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$6648_storage_$dyn_storage","typeString":"struct VotingContract.Option storage ref[] storage ref"}},"id":7611,"indexExpression":{"id":7610,"name":"optionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7584,"src":"14297:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14269:40:28","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$6648_storage","typeString":"struct VotingContract.Option storage ref"}},"id":7612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14310:9:28","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":6647,"src":"14269:50:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7588,"id":7613,"nodeType":"Return","src":"14262:57:28"}]},"functionSelector":"63e9a61d","id":7615,"implemented":true,"kind":"function","modifiers":[],"name":"getOptionVoteCount","nameLocation":"13989:18:28","nodeType":"FunctionDefinition","parameters":{"id":7585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7582,"mutability":"mutable","name":"proposalId","nameLocation":"14016:10:28","nodeType":"VariableDeclaration","scope":7615,"src":"14008:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7581,"name":"uint256","nodeType":"ElementaryTypeName","src":"14008:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7584,"mutability":"mutable","name":"optionIndex","nameLocation":"14036:11:28","nodeType":"VariableDeclaration","scope":7615,"src":"14028:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7583,"name":"uint256","nodeType":"ElementaryTypeName","src":"14028:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14007:41:28"},"returnParameters":{"id":7588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7615,"src":"14070:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7586,"name":"uint256","nodeType":"ElementaryTypeName","src":"14070:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14069:9:28"},"scope":8249,"src":"13980:347:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7643,"nodeType":"Block","src":"14397:501:28","statements":[{"assignments":[7621],"declarations":[{"constant":false,"id":7621,"mutability":"mutable","name":"proposalArrayLength","nameLocation":"14416:19:28","nodeType":"VariableDeclaration","scope":7643,"src":"14408:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7620,"name":"uint256","nodeType":"ElementaryTypeName","src":"14408:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7624,"initialValue":{"expression":{"id":7622,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"14438:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14448:6:28","memberName":"length","nodeType":"MemberAccess","src":"14438:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14408:46:28"},{"assignments":[7626],"declarations":[{"constant":false,"id":7626,"mutability":"mutable","name":"currentCounterValue","nameLocation":"14473:19:28","nodeType":"VariableDeclaration","scope":7643,"src":"14465:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7625,"name":"uint256","nodeType":"ElementaryTypeName","src":"14465:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7630,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7627,"name":"_proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"14495:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2399_storage","typeString":"struct Counters.Counter storage ref"}},"id":7628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14508:7:28","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"14495:20:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2399_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2399_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14495:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14465:52:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7631,"name":"proposalArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"14534:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7632,"name":"currentCounterValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"14557:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14534:42:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7641,"nodeType":"Block","src":"14726:165:28","statements":[{"expression":{"id":7639,"name":"MAX_UINT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6443,"src":"14825:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7619,"id":7640,"nodeType":"Return","src":"14818:18:28"}]},"id":7642,"nodeType":"IfStatement","src":"14530:361:28","trueBody":{"id":7638,"nodeType":"Block","src":"14578:142:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7634,"name":"currentCounterValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"14685:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14707:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14685:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7619,"id":7637,"nodeType":"Return","src":"14678:30:28"}]}}]},"functionSelector":"fe10226d","id":7644,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentProposalId","nameLocation":"14344:20:28","nodeType":"FunctionDefinition","parameters":{"id":7616,"nodeType":"ParameterList","parameters":[],"src":"14364:2:28"},"returnParameters":{"id":7619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7644,"src":"14388:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7617,"name":"uint256","nodeType":"ElementaryTypeName","src":"14388:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14387:9:28"},"scope":8249,"src":"14335:563:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7716,"nodeType":"Block","src":"15008:888:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7656,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"15064:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7657,"name":"UserSstakeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"15077:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15095:6:28","memberName":"length","nodeType":"MemberAccess","src":"15077:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15064:37:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b6520696e646578206f7574206f6620626f756e6473","id":7660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15103:27:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3ec7af9a92192941fad13cd48328a22bb7b5805a24c7e27b3445ae190e385b1","typeString":"literal_string \"Stake index out of bounds\""},"value":"Stake index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c3ec7af9a92192941fad13cd48328a22bb7b5805a24c7e27b3445ae190e385b1","typeString":"literal_string \"Stake index out of bounds\""}],"id":7655,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15056:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15056:75:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7662,"nodeType":"ExpressionStatement","src":"15056:75:28"},{"assignments":[7664],"declarations":[{"constant":false,"id":7664,"mutability":"mutable","name":"amountToRelease","nameLocation":"15150:15:28","nodeType":"VariableDeclaration","scope":7716,"src":"15142:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7663,"name":"uint256","nodeType":"ElementaryTypeName","src":"15142:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7668,"initialValue":{"baseExpression":{"id":7665,"name":"UserSstakeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"15168:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7667,"indexExpression":{"id":7666,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"15186:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15168:29:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15142:55:28"},{"expression":{"id":7673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7669,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"15208:21:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7671,"indexExpression":{"id":7670,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"15230:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15208:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7672,"name":"amountToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"15239:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15208:46:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7674,"nodeType":"ExpressionStatement","src":"15208:46:28"},{"condition":{"id":7675,"name":"penalizeStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7650,"src":"15329:13:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7702,"nodeType":"IfStatement","src":"15325:344:28","trueBody":{"id":7701,"nodeType":"Block","src":"15344:325:28","statements":[{"assignments":[7677],"declarations":[{"constant":false,"id":7677,"mutability":"mutable","name":"penaltyAmount","nameLocation":"15367:13:28","nodeType":"VariableDeclaration","scope":7701,"src":"15359:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7676,"name":"uint256","nodeType":"ElementaryTypeName","src":"15359:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7683,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7678,"name":"amountToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"15383:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":7679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15401:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"15383:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15406:3:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"15383:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15359:50:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7685,"name":"amountToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"15451:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7686,"name":"penaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"15470:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15451:32:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50656e616c74792065786365656473207374616b656420616d6f756e74","id":7688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15485:31:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_a7a9c7bcf146ff39d8ed7ba6b437af550c2a31761d3f5656a2f1f9d80eae7070","typeString":"literal_string \"Penalty exceeds staked amount\""},"value":"Penalty exceeds staked amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a7a9c7bcf146ff39d8ed7ba6b437af550c2a31761d3f5656a2f1f9d80eae7070","typeString":"literal_string \"Penalty exceeds staked amount\""}],"id":7684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15443:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15443:74:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7690,"nodeType":"ExpressionStatement","src":"15443:74:28"},{"expression":{"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7691,"name":"amountToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"15532:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7692,"name":"penaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"15551:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15532:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7694,"nodeType":"ExpressionStatement","src":"15532:32:28"},{"expression":{"id":7699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7695,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"15595:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7697,"indexExpression":{"id":7696,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"15604:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15595:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7698,"name":"penaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"15613:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15595:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7700,"nodeType":"ExpressionStatement","src":"15595:31:28"}]}},{"expression":{"id":7707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7703,"name":"UserSstakeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"15722:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7705,"indexExpression":{"id":7704,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"15740:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15722:29:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15754:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15722:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7708,"nodeType":"ExpressionStatement","src":"15722:33:28"},{"eventCall":{"arguments":[{"id":7710,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"15839:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7711,"name":"stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"15845:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7712,"name":"penalizeStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7650,"src":"15857:13:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7713,"name":"amountToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"15872:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7709,"name":"StakeReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6593,"src":"15825:13:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (address,uint256,bool,uint256)"}},"id":7714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15825:63:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7715,"nodeType":"EmitStatement","src":"15820:68:28"}]},"functionSelector":"cc4d6345","id":7717,"implemented":true,"kind":"function","modifiers":[{"id":7653,"kind":"modifierInvocation","modifierName":{"id":7652,"name":"onlyOwner","nameLocations":["14998:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"14998:9:28"},"nodeType":"ModifierInvocation","src":"14998:9:28"}],"name":"handleStakeRelease","nameLocation":"14918:18:28","nodeType":"FunctionDefinition","parameters":{"id":7651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7646,"mutability":"mutable","name":"user","nameLocation":"14945:4:28","nodeType":"VariableDeclaration","scope":7717,"src":"14937:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7645,"name":"address","nodeType":"ElementaryTypeName","src":"14937:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7648,"mutability":"mutable","name":"stakeIndex","nameLocation":"14959:10:28","nodeType":"VariableDeclaration","scope":7717,"src":"14951:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7647,"name":"uint256","nodeType":"ElementaryTypeName","src":"14951:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7650,"mutability":"mutable","name":"penalizeStake","nameLocation":"14976:13:28","nodeType":"VariableDeclaration","scope":7717,"src":"14971:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7649,"name":"bool","nodeType":"ElementaryTypeName","src":"14971:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14936:54:28"},"returnParameters":{"id":7654,"nodeType":"ParameterList","parameters":[],"src":"15008:0:28"},"scope":8249,"src":"14909:987:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7866,"nodeType":"Block","src":"16002:1473:28","statements":[{"assignments":[7730],"declarations":[{"constant":false,"id":7730,"mutability":"mutable","name":"proposal","nameLocation":"16030:8:28","nodeType":"VariableDeclaration","scope":7866,"src":"16013:25:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal"},"typeName":{"id":7729,"nodeType":"UserDefinedTypeName","pathNode":{"id":7728,"name":"Proposal","nameLocations":["16013:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":6643,"src":"16013:8:28"},"referencedDeclaration":6643,"src":"16013:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal"}},"visibility":"internal"}],"id":7734,"initialValue":{"baseExpression":{"id":7731,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"16041:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":7733,"indexExpression":{"id":7732,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"16051:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16041:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage","typeString":"struct VotingContract.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16013:49:28"},{"expression":{"arguments":[{"id":7738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16081:16:28","subExpression":{"expression":{"id":7736,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"16082:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16091:6:28","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"16082:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c206d75737420626520696e61637469766520746f20736574746c6520726577617264732e","id":7739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16099:46:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_dad1861686cec066c02584c0c8f355d58764a2ea3bdca81544b36c846e56eefb","typeString":"literal_string \"Proposal must be inactive to settle rewards.\""},"value":"Proposal must be inactive to settle rewards."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dad1861686cec066c02584c0c8f355d58764a2ea3bdca81544b36c846e56eefb","typeString":"literal_string \"Proposal must be inactive to settle rewards.\""}],"id":7735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16073:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16073:73:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7741,"nodeType":"ExpressionStatement","src":"16073:73:28"},{"expression":{"arguments":[{"id":7745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16165:19:28","subExpression":{"expression":{"id":7743,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"16166:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16175:9:28","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":6638,"src":"16166:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265776172647320616c726561647920736574746c6564","id":7746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16186:25:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_49c981ff3f9e99395ce86920f43c4953680c7b2eefce64439f087d76885efe7b","typeString":"literal_string \"Rewards already settled\""},"value":"Rewards already settled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49c981ff3f9e99395ce86920f43c4953680c7b2eefce64439f087d76885efe7b","typeString":"literal_string \"Rewards already settled\""}],"id":7742,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16157:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16157:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7748,"nodeType":"ExpressionStatement","src":"16157:55:28"},{"assignments":[7750],"declarations":[{"constant":false,"id":7750,"mutability":"mutable","name":"totalVotesForWinningOption","nameLocation":"16233:26:28","nodeType":"VariableDeclaration","scope":7866,"src":"16225:34:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7749,"name":"uint256","nodeType":"ElementaryTypeName","src":"16225:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7757,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"id":7751,"name":"proposalOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"16262:15:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Option_$6648_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct VotingContract.Option storage ref[] storage ref)"}},"id":7753,"indexExpression":{"id":7752,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"16278:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16262:27:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Option_$6648_storage_$dyn_storage","typeString":"struct VotingContract.Option storage ref[] storage ref"}},"id":7755,"indexExpression":{"id":7754,"name":"winningOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"16290:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16262:44:28","typeDescriptions":{"typeIdentifier":"t_struct$_Option_$6648_storage","typeString":"struct VotingContract.Option storage ref"}},"id":7756,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16307:9:28","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":6647,"src":"16262:54:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16225:91:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7759,"name":"totalVotesForWinningOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"16335:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16364:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16335:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20766f74657320666f722077696e6e696e67206f7074696f6e","id":7762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16367:29:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_16d757433ba053b938ddb4f482ee748d7899b5f1c05db76e3664b35843c79b8a","typeString":"literal_string \"No votes for winning option\""},"value":"No votes for winning option"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16d757433ba053b938ddb4f482ee748d7899b5f1c05db76e3664b35843c79b8a","typeString":"literal_string \"No votes for winning option\""}],"id":7758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16327:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16327:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7764,"nodeType":"ExpressionStatement","src":"16327:70:28"},{"body":{"id":7858,"nodeType":"Block","src":"16542:859:28","statements":[{"assignments":[7779],"declarations":[{"constant":false,"id":7779,"mutability":"mutable","name":"voter","nameLocation":"16565:5:28","nodeType":"VariableDeclaration","scope":7858,"src":"16557:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7778,"name":"address","nodeType":"ElementaryTypeName","src":"16557:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7785,"initialValue":{"baseExpression":{"baseExpression":{"id":7780,"name":"voterAddressesByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"16573:24:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":7782,"indexExpression":{"id":7781,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"16598:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16573:36:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7784,"indexExpression":{"id":7783,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7766,"src":"16610:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16573:39:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16557:55:28"},{"assignments":[7787],"declarations":[{"constant":false,"id":7787,"mutability":"mutable","name":"optionId","nameLocation":"16635:8:28","nodeType":"VariableDeclaration","scope":7858,"src":"16627:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7786,"name":"uint256","nodeType":"ElementaryTypeName","src":"16627:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7793,"initialValue":{"baseExpression":{"baseExpression":{"id":7788,"name":"optionIdsByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"16646:19:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":7790,"indexExpression":{"id":7789,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"16666:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16646:31:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7792,"indexExpression":{"id":7791,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7766,"src":"16678:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16646:34:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16627:53:28"},{"assignments":[7795],"declarations":[{"constant":false,"id":7795,"mutability":"mutable","name":"voteCount","nameLocation":"16703:9:28","nodeType":"VariableDeclaration","scope":7858,"src":"16695:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7794,"name":"uint256","nodeType":"ElementaryTypeName","src":"16695:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7801,"initialValue":{"baseExpression":{"baseExpression":{"id":7796,"name":"voteCountsByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"16715:20:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":7798,"indexExpression":{"id":7797,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"16736:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16715:32:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7800,"indexExpression":{"id":7799,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7766,"src":"16748:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16715:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16695:55:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7803,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"16773:16:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7805,"indexExpression":{"id":7804,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"16790:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16773:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7806,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"16800:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16773:36:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f756768206c6f636b656420766f74696e6720726967687473","id":7808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16811:33:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_91ac3ec4eb987b10fddca2c0ac6de37988b0df0d988e7523b25121d4de7b21d2","typeString":"literal_string \"Not enough locked voting rights\""},"value":"Not enough locked voting rights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_91ac3ec4eb987b10fddca2c0ac6de37988b0df0d988e7523b25121d4de7b21d2","typeString":"literal_string \"Not enough locked voting rights\""}],"id":7802,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16765:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16765:80:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7810,"nodeType":"ExpressionStatement","src":"16765:80:28"},{"expression":{"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7811,"name":"usedVotingRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"16862:16:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7813,"indexExpression":{"id":7812,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"16879:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16862:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7814,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"16889:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16862:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7816,"nodeType":"ExpressionStatement","src":"16862:36:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7817,"name":"optionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"16920:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7818,"name":"winningOptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"16932:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16920:27:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7856,"nodeType":"Block","src":"17235:155:28","statements":[{"expression":{"id":7847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7843,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"17254:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7845,"indexExpression":{"id":7844,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"17263:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17254:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7846,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"17273:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17254:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7848,"nodeType":"ExpressionStatement","src":"17254:28:28"},{"eventCall":{"arguments":[{"id":7850,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"17346:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7851,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"17353:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":7852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17365:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":7853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17368:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7849,"name":"RewardDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"17328:17:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,uint256,bool)"}},"id":7854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17328:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7855,"nodeType":"EmitStatement","src":"17323:51:28"}]},"id":7857,"nodeType":"IfStatement","src":"16916:474:28","trueBody":{"id":7842,"nodeType":"Block","src":"16949:280:28","statements":[{"assignments":[7821],"declarations":[{"constant":false,"id":7821,"mutability":"mutable","name":"voterReward","nameLocation":"17027:11:28","nodeType":"VariableDeclaration","scope":7842,"src":"17019:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7820,"name":"uint256","nodeType":"ElementaryTypeName","src":"17019:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7828,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7822,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"17042:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3938","id":7823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17054:2:28","typeDescriptions":{"typeIdentifier":"t_rational_98_by_1","typeString":"int_const 98"},"value":"98"},"src":"17042:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17041:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17060:3:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"17041:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17019:44:28"},{"expression":{"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7829,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"17082:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7831,"indexExpression":{"id":7830,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"17091:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17082:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7832,"name":"voterReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"17101:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17082:30:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7834,"nodeType":"ExpressionStatement","src":"17082:30:28"},{"eventCall":{"arguments":[{"id":7836,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"17176:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7837,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"17183:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7838,"name":"voterReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"17195:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":7839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17208:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7835,"name":"RewardDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"17158:17:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,uint256,bool)"}},"id":7840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17158:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7841,"nodeType":"EmitStatement","src":"17153:60:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7769,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7766,"src":"16488:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":7770,"name":"voterAddressesByProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"16492:24:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":7772,"indexExpression":{"id":7771,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"16517:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16492:36:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16529:6:28","memberName":"length","nodeType":"MemberAccess","src":"16492:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16488:47:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7859,"initializationExpression":{"assignments":[7766],"declarations":[{"constant":false,"id":7766,"mutability":"mutable","name":"i","nameLocation":"16481:1:28","nodeType":"VariableDeclaration","scope":7859,"src":"16473:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7765,"name":"uint256","nodeType":"ElementaryTypeName","src":"16473:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7768,"initialValue":{"hexValue":"30","id":7767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16485:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16473:13:28"},"loopExpression":{"expression":{"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16537:3:28","subExpression":{"id":7775,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7766,"src":"16537:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7777,"nodeType":"ExpressionStatement","src":"16537:3:28"},"nodeType":"ForStatement","src":"16468:933:28"},{"expression":{"id":7864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7860,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"17442:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17451:9:28","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":6638,"src":"17442:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17463:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"17442:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7865,"nodeType":"ExpressionStatement","src":"17442:25:28"}]},"functionSelector":"e13b7b31","id":7867,"implemented":true,"kind":"function","modifiers":[{"id":7724,"kind":"modifierInvocation","modifierName":{"id":7723,"name":"onlyOwner","nameLocations":["15979:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"15979:9:28"},"nodeType":"ModifierInvocation","src":"15979:9:28"},{"id":7726,"kind":"modifierInvocation","modifierName":{"id":7725,"name":"nonReentrant","nameLocations":["15989:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":435,"src":"15989:12:28"},"nodeType":"ModifierInvocation","src":"15989:12:28"}],"name":"settleRewards","nameLocation":"15913:13:28","nodeType":"FunctionDefinition","parameters":{"id":7722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7719,"mutability":"mutable","name":"proposalId","nameLocation":"15935:10:28","nodeType":"VariableDeclaration","scope":7867,"src":"15927:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7718,"name":"uint256","nodeType":"ElementaryTypeName","src":"15927:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7721,"mutability":"mutable","name":"winningOptionId","nameLocation":"15955:15:28","nodeType":"VariableDeclaration","scope":7867,"src":"15947:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7720,"name":"uint256","nodeType":"ElementaryTypeName","src":"15947:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15926:45:28"},"returnParameters":{"id":7727,"nodeType":"ParameterList","parameters":[],"src":"16002:0:28"},"scope":8249,"src":"15904:1571:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7989,"nodeType":"Block","src":"17559:1160:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7875,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"17578:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7876,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"17592:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17602:6:28","memberName":"length","nodeType":"MemberAccess","src":"17592:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17578:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f742065786973742e","id":7879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17610:26:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""},"value":"Proposal does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""}],"id":7874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17570:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17570:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7881,"nodeType":"ExpressionStatement","src":"17570:67:28"},{"assignments":[7884],"declarations":[{"constant":false,"id":7884,"mutability":"mutable","name":"proposal","nameLocation":"17665:8:28","nodeType":"VariableDeclaration","scope":7989,"src":"17648:25:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal"},"typeName":{"id":7883,"nodeType":"UserDefinedTypeName","pathNode":{"id":7882,"name":"Proposal","nameLocations":["17648:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":6643,"src":"17648:8:28"},"referencedDeclaration":6643,"src":"17648:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal"}},"visibility":"internal"}],"id":7888,"initialValue":{"baseExpression":{"id":7885,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"17676:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":7887,"indexExpression":{"id":7886,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"17686:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:22:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage","typeString":"struct VotingContract.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17648:50:28"},{"expression":{"arguments":[{"expression":{"id":7890,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"17717:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17726:6:28","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"17717:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c206973207374696c6c206163746976652e","id":7892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17734:27:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""},"value":"Proposal is still active."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""}],"id":7889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17709:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17709:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7894,"nodeType":"ExpressionStatement","src":"17709:53:28"},{"expression":{"arguments":[{"id":7898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17781:19:28","subExpression":{"expression":{"id":7896,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"17782:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17791:9:28","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":6638,"src":"17782:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e647320616c726561647920736574746c6564","id":7899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17802:23:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""},"value":"Funds already settled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""}],"id":7895,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17773:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17773:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7901,"nodeType":"ExpressionStatement","src":"17773:53:28"},{"expression":{"arguments":[{"id":7903,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"17856:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7902,"name":"deactivateProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8248,"src":"17837:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17837:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7905,"nodeType":"ExpressionStatement","src":"17837:31:28"},{"assignments":[7907],"declarations":[{"constant":false,"id":7907,"mutability":"mutable","name":"stakedAmount","nameLocation":"17927:12:28","nodeType":"VariableDeclaration","scope":7989,"src":"17919:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7906,"name":"uint256","nodeType":"ElementaryTypeName","src":"17919:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7910,"initialValue":{"expression":{"id":7908,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"17942:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17951:11:28","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":6634,"src":"17942:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17919:43:28"},{"condition":{"expression":{"id":7911,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"17976:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17985:9:28","memberName":"isWagered","nodeType":"MemberAccess","referencedDeclaration":6640,"src":"17976:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7941,"nodeType":"Block","src":"18215:52:28","statements":[{"expression":{"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7935,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"18230:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18239:9:28","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":6638,"src":"18230:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18251:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"18230:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7940,"nodeType":"ExpressionStatement","src":"18230:25:28"}]},"id":7942,"nodeType":"IfStatement","src":"17973:294:28","trueBody":{"id":7934,"nodeType":"Block","src":"17996:215:28","statements":[{"assignments":[7914],"declarations":[{"constant":false,"id":7914,"mutability":"mutable","name":"currentDeposit","nameLocation":"18019:14:28","nodeType":"VariableDeclaration","scope":7934,"src":"18011:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7913,"name":"uint256","nodeType":"ElementaryTypeName","src":"18011:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7919,"initialValue":{"baseExpression":{"id":7915,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"18036:21:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7918,"indexExpression":{"expression":{"id":7916,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"18058:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18067:8:28","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6630,"src":"18058:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18036:40:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18011:65:28"},{"expression":{"id":7932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7920,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"18091:21:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7923,"indexExpression":{"expression":{"id":7921,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"18113:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18122:8:28","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6630,"src":"18113:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18091:40:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7924,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7907,"src":"18134:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7925,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"18149:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18134:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7928,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"18170:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7929,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7907,"src":"18187:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18170:29:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"18134:65:28","trueExpression":{"hexValue":"30","id":7927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18166:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18091:108:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7933,"nodeType":"ExpressionStatement","src":"18091:108:28"}]}},{"assignments":[7944],"declarations":[{"constant":false,"id":7944,"mutability":"mutable","name":"serviceFee","nameLocation":"18285:10:28","nodeType":"VariableDeclaration","scope":7989,"src":"18277:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7943,"name":"uint256","nodeType":"ElementaryTypeName","src":"18277:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7952,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7945,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"18299:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18308:11:28","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":6634,"src":"18299:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":7947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18322:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"18299:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18298:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18327:3:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"18298:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18277:53:28"},{"assignments":[7954],"declarations":[{"constant":false,"id":7954,"mutability":"mutable","name":"reward","nameLocation":"18379:6:28","nodeType":"VariableDeclaration","scope":7989,"src":"18371:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7953,"name":"uint256","nodeType":"ElementaryTypeName","src":"18371:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7962,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7955,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"18389:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18398:11:28","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":6634,"src":"18389:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"35","id":7957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18412:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"18389:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7959,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18388:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18417:3:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"18388:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18371:49:28"},{"assignments":[7964],"declarations":[{"constant":false,"id":7964,"mutability":"mutable","name":"profit","nameLocation":"18464:6:28","nodeType":"VariableDeclaration","scope":7989,"src":"18456:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7963,"name":"uint256","nodeType":"ElementaryTypeName","src":"18456:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7968,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7965,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"18473:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7966,"name":"serviceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7944,"src":"18482:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18473:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18456:36:28"},{"expression":{"id":7974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7969,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"18505:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7972,"indexExpression":{"expression":{"id":7970,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"18514:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18523:8:28","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6630,"src":"18514:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18505:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7973,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7964,"src":"18536:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18505:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7975,"nodeType":"ExpressionStatement","src":"18505:37:28"},{"expression":{"id":7980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7976,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"18599:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18608:9:28","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":6638,"src":"18599:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18620:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"18599:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7981,"nodeType":"ExpressionStatement","src":"18599:25:28"},{"eventCall":{"arguments":[{"id":7983,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"18672:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7984,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"18685:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":7985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18694:8:28","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6630,"src":"18685:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7986,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7964,"src":"18704:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7982,"name":"FundsSettledForAverageQuality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"18642:29:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18642:69:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7988,"nodeType":"EmitStatement","src":"18637:74:28"}]},"functionSelector":"9d678da1","id":7990,"implemented":true,"kind":"function","modifiers":[{"id":7872,"kind":"modifierInvocation","modifierName":{"id":7871,"name":"onlyOwner","nameLocations":["17549:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"17549:9:28"},"nodeType":"ModifierInvocation","src":"17549:9:28"}],"name":"settleFundsForAverageQuality","nameLocation":"17492:28:28","nodeType":"FunctionDefinition","parameters":{"id":7870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7869,"mutability":"mutable","name":"_proposalId","nameLocation":"17529:11:28","nodeType":"VariableDeclaration","scope":7990,"src":"17521:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7868,"name":"uint256","nodeType":"ElementaryTypeName","src":"17521:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17520:21:28"},"returnParameters":{"id":7873,"nodeType":"ParameterList","parameters":[],"src":"17559:0:28"},"scope":8249,"src":"17483:1236:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8112,"nodeType":"Block","src":"18806:1201:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7998,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"18825:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7999,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"18839:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18849:6:28","memberName":"length","nodeType":"MemberAccess","src":"18839:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18825:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f742065786973742e","id":8002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18857:26:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""},"value":"Proposal does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""}],"id":7997,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18817:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18817:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8004,"nodeType":"ExpressionStatement","src":"18817:67:28"},{"assignments":[8007],"declarations":[{"constant":false,"id":8007,"mutability":"mutable","name":"proposal","nameLocation":"18912:8:28","nodeType":"VariableDeclaration","scope":8112,"src":"18895:25:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal"},"typeName":{"id":8006,"nodeType":"UserDefinedTypeName","pathNode":{"id":8005,"name":"Proposal","nameLocations":["18895:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":6643,"src":"18895:8:28"},"referencedDeclaration":6643,"src":"18895:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal"}},"visibility":"internal"}],"id":8011,"initialValue":{"baseExpression":{"id":8008,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"18923:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":8010,"indexExpression":{"id":8009,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"18933:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18923:22:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage","typeString":"struct VotingContract.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18895:50:28"},{"expression":{"arguments":[{"expression":{"id":8013,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"18964:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18973:6:28","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"18964:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c206973207374696c6c206163746976652e","id":8015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18981:27:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""},"value":"Proposal is still active."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""}],"id":8012,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18956:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18956:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8017,"nodeType":"ExpressionStatement","src":"18956:53:28"},{"expression":{"arguments":[{"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19028:19:28","subExpression":{"expression":{"id":8019,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"19029:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19038:9:28","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":6638,"src":"19029:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e647320616c726561647920736574746c6564","id":8022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19049:23:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""},"value":"Funds already settled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""}],"id":8018,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19020:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19020:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8024,"nodeType":"ExpressionStatement","src":"19020:53:28"},{"expression":{"arguments":[{"id":8026,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"19103:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8025,"name":"deactivateProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8248,"src":"19084:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19084:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8028,"nodeType":"ExpressionStatement","src":"19084:31:28"},{"assignments":[8030],"declarations":[{"constant":false,"id":8030,"mutability":"mutable","name":"stakedAmount","nameLocation":"19172:12:28","nodeType":"VariableDeclaration","scope":8112,"src":"19164:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8029,"name":"uint256","nodeType":"ElementaryTypeName","src":"19164:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8033,"initialValue":{"expression":{"id":8031,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"19187:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19196:11:28","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":6634,"src":"19187:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19164:43:28"},{"condition":{"expression":{"id":8034,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"19221:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19230:9:28","memberName":"isWagered","nodeType":"MemberAccess","referencedDeclaration":6640,"src":"19221:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8064,"nodeType":"Block","src":"19501:52:28","statements":[{"expression":{"id":8062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8058,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"19516:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19525:9:28","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":6638,"src":"19516:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19537:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"19516:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8063,"nodeType":"ExpressionStatement","src":"19516:25:28"}]},"id":8065,"nodeType":"IfStatement","src":"19218:335:28","trueBody":{"id":8057,"nodeType":"Block","src":"19241:256:28","statements":[{"assignments":[8037],"declarations":[{"constant":false,"id":8037,"mutability":"mutable","name":"currentDeposit","nameLocation":"19305:14:28","nodeType":"VariableDeclaration","scope":8057,"src":"19297:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8036,"name":"uint256","nodeType":"ElementaryTypeName","src":"19297:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8042,"initialValue":{"baseExpression":{"id":8038,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"19322:21:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8041,"indexExpression":{"expression":{"id":8039,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"19344:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19353:8:28","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6630,"src":"19344:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19322:40:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19297:65:28"},{"expression":{"id":8055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8043,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"19377:21:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8046,"indexExpression":{"expression":{"id":8044,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"19399:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19408:8:28","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6630,"src":"19399:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19377:40:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8047,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8030,"src":"19420:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8048,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"19435:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19420:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8051,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"19456:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8052,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8030,"src":"19473:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19456:29:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19420:65:28","trueExpression":{"hexValue":"30","id":8050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19377:108:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8056,"nodeType":"ExpressionStatement","src":"19377:108:28"}]}},{"assignments":[8067],"declarations":[{"constant":false,"id":8067,"mutability":"mutable","name":"serviceFee","nameLocation":"19571:10:28","nodeType":"VariableDeclaration","scope":8112,"src":"19563:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8066,"name":"uint256","nodeType":"ElementaryTypeName","src":"19563:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8075,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8068,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"19585:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19594:11:28","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":6634,"src":"19585:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":8070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19608:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"19585:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19584:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":8073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19613:3:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"19584:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19563:53:28"},{"assignments":[8077],"declarations":[{"constant":false,"id":8077,"mutability":"mutable","name":"reward","nameLocation":"19665:6:28","nodeType":"VariableDeclaration","scope":8112,"src":"19657:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8076,"name":"uint256","nodeType":"ElementaryTypeName","src":"19657:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8085,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8078,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"19675:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19684:11:28","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":6634,"src":"19675:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":8080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"19675:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19674:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":8083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19704:3:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"19674:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19657:50:28"},{"assignments":[8087],"declarations":[{"constant":false,"id":8087,"mutability":"mutable","name":"profit","nameLocation":"19752:6:28","nodeType":"VariableDeclaration","scope":8112,"src":"19744:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8086,"name":"uint256","nodeType":"ElementaryTypeName","src":"19744:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8091,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8088,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8077,"src":"19761:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8089,"name":"serviceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8067,"src":"19770:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19761:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19744:36:28"},{"expression":{"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8092,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"19793:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8095,"indexExpression":{"expression":{"id":8093,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"19802:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19811:8:28","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6630,"src":"19802:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19793:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8096,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"19824:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19793:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8098,"nodeType":"ExpressionStatement","src":"19793:37:28"},{"expression":{"id":8103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8099,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"19887:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19896:9:28","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":6638,"src":"19887:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19908:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"19887:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8104,"nodeType":"ExpressionStatement","src":"19887:25:28"},{"eventCall":{"arguments":[{"id":8106,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"19960:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8107,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"19973:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19982:8:28","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6630,"src":"19973:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8109,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"19992:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8105,"name":"FundsSettledForAverageQuality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"19930:29:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19930:69:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8111,"nodeType":"EmitStatement","src":"19925:74:28"}]},"functionSelector":"a24f8bd5","id":8113,"implemented":true,"kind":"function","modifiers":[{"id":7995,"kind":"modifierInvocation","modifierName":{"id":7994,"name":"onlyOwner","nameLocations":["18796:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"18796:9:28"},"nodeType":"ModifierInvocation","src":"18796:9:28"}],"name":"verifyComplianceAndExpectations","nameLocation":"18736:31:28","nodeType":"FunctionDefinition","parameters":{"id":7993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7992,"mutability":"mutable","name":"_proposalId","nameLocation":"18776:11:28","nodeType":"VariableDeclaration","scope":8113,"src":"18768:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7991,"name":"uint256","nodeType":"ElementaryTypeName","src":"18768:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18767:21:28"},"returnParameters":{"id":7996,"nodeType":"ParameterList","parameters":[],"src":"18806:0:28"},"scope":8249,"src":"18727:1280:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8213,"nodeType":"Block","src":"20102:1039:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8121,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8115,"src":"20121:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8122,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"20135:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":8123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20145:6:28","memberName":"length","nodeType":"MemberAccess","src":"20135:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20121:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f742065786973742e","id":8125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20153:26:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""},"value":"Proposal does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad61707ec3ececd32b557580792b481edb35e3d34a255e6a30fd8b7d1bf2b5be","typeString":"literal_string \"Proposal does not exist.\""}],"id":8120,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20113:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20113:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8127,"nodeType":"ExpressionStatement","src":"20113:67:28"},{"assignments":[8130],"declarations":[{"constant":false,"id":8130,"mutability":"mutable","name":"proposal","nameLocation":"20208:8:28","nodeType":"VariableDeclaration","scope":8213,"src":"20191:25:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal"},"typeName":{"id":8129,"nodeType":"UserDefinedTypeName","pathNode":{"id":8128,"name":"Proposal","nameLocations":["20191:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":6643,"src":"20191:8:28"},"referencedDeclaration":6643,"src":"20191:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal"}},"visibility":"internal"}],"id":8134,"initialValue":{"baseExpression":{"id":8131,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"20219:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":8133,"indexExpression":{"id":8132,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8115,"src":"20229:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20219:22:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage","typeString":"struct VotingContract.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20191:50:28"},{"expression":{"arguments":[{"expression":{"id":8136,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"20260:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20269:6:28","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"20260:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c206973207374696c6c206163746976652e","id":8138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20277:27:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""},"value":"Proposal is still active."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd70ba387b535a9e6585aca0eefe67ece1e0869f13e2b40aa37d827acf2f51e7","typeString":"literal_string \"Proposal is still active.\""}],"id":8135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20252:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20252:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8140,"nodeType":"ExpressionStatement","src":"20252:53:28"},{"expression":{"arguments":[{"id":8144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"20324:19:28","subExpression":{"expression":{"id":8142,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"20325:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20334:9:28","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":6638,"src":"20325:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e647320616c726561647920736574746c6564","id":8145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20345:23:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""},"value":"Funds already settled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ac81ca4cd5cd8cc796c504e65bf36e5b14d334b890fe29b80b198b91213f73e","typeString":"literal_string \"Funds already settled\""}],"id":8141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20316:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20316:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8147,"nodeType":"ExpressionStatement","src":"20316:53:28"},{"expression":{"arguments":[{"id":8149,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8115,"src":"20399:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8148,"name":"deactivateProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8248,"src":"20380:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20380:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8151,"nodeType":"ExpressionStatement","src":"20380:31:28"},{"assignments":[8153],"declarations":[{"constant":false,"id":8153,"mutability":"mutable","name":"stakedAmount","nameLocation":"20470:12:28","nodeType":"VariableDeclaration","scope":8213,"src":"20462:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8152,"name":"uint256","nodeType":"ElementaryTypeName","src":"20462:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8156,"initialValue":{"expression":{"id":8154,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"20485:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20494:11:28","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":6634,"src":"20485:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20462:43:28"},{"condition":{"expression":{"id":8157,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"20519:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20528:9:28","memberName":"isWagered","nodeType":"MemberAccess","referencedDeclaration":6640,"src":"20519:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8187,"nodeType":"Block","src":"20799:52:28","statements":[{"expression":{"id":8185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8181,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"20814:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20823:9:28","memberName":"isSettled","nodeType":"MemberAccess","referencedDeclaration":6638,"src":"20814:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20835:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"20814:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8186,"nodeType":"ExpressionStatement","src":"20814:25:28"}]},"id":8188,"nodeType":"IfStatement","src":"20516:335:28","trueBody":{"id":8180,"nodeType":"Block","src":"20539:256:28","statements":[{"assignments":[8160],"declarations":[{"constant":false,"id":8160,"mutability":"mutable","name":"currentDeposit","nameLocation":"20603:14:28","nodeType":"VariableDeclaration","scope":8180,"src":"20595:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8159,"name":"uint256","nodeType":"ElementaryTypeName","src":"20595:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8165,"initialValue":{"baseExpression":{"id":8161,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"20620:21:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8164,"indexExpression":{"expression":{"id":8162,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"20642:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20651:8:28","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6630,"src":"20642:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20620:40:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20595:65:28"},{"expression":{"id":8178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8166,"name":"proposalTokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"20675:21:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8169,"indexExpression":{"expression":{"id":8167,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"20697:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20706:8:28","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6630,"src":"20697:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20675:40:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8170,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"20718:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8171,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8160,"src":"20733:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20718:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8174,"name":"currentDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8160,"src":"20754:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8175,"name":"stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"20771:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20754:29:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20718:65:28","trueExpression":{"hexValue":"30","id":8173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20750:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20675:108:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8179,"nodeType":"ExpressionStatement","src":"20675:108:28"}]}},{"assignments":[8190],"declarations":[{"constant":false,"id":8190,"mutability":"mutable","name":"punishment","nameLocation":"20869:10:28","nodeType":"VariableDeclaration","scope":8213,"src":"20861:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8189,"name":"uint256","nodeType":"ElementaryTypeName","src":"20861:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8198,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8191,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"20883:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20892:11:28","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":6634,"src":"20883:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"35","id":8193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20906:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"20883:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20882:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":8196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20911:3:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"20882:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20861:53:28"},{"expression":{"id":8204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8199,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"20956:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8202,"indexExpression":{"expression":{"id":8200,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"20965:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20974:8:28","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6630,"src":"20965:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20956:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":8203,"name":"punishment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"20987:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20956:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8205,"nodeType":"ExpressionStatement","src":"20956:41:28"},{"eventCall":{"arguments":[{"id":8207,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8115,"src":"21090:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8208,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"21103:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21112:8:28","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6630,"src":"21103:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8210,"name":"punishment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"21122:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8206,"name":"FundsPenalizedForNonCompliance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6558,"src":"21059:30:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":8211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21059:74:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8212,"nodeType":"EmitStatement","src":"21054:79:28"}]},"functionSelector":"df63ba91","id":8214,"implemented":true,"kind":"function","modifiers":[{"id":8118,"kind":"modifierInvocation","modifierName":{"id":8117,"name":"onlyOwner","nameLocations":["20092:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"20092:9:28"},"nodeType":"ModifierInvocation","src":"20092:9:28"}],"name":"checkQualityComplianceBelowExpectations","nameLocation":"20024:39:28","nodeType":"FunctionDefinition","parameters":{"id":8116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8115,"mutability":"mutable","name":"_proposalId","nameLocation":"20072:11:28","nodeType":"VariableDeclaration","scope":8214,"src":"20064:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8114,"name":"uint256","nodeType":"ElementaryTypeName","src":"20064:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20063:21:28"},"returnParameters":{"id":8119,"nodeType":"ParameterList","parameters":[],"src":"20102:0:28"},"scope":8249,"src":"20015:1126:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8247,"nodeType":"Block","src":"21205:249:28","statements":[{"assignments":[8221],"declarations":[{"constant":false,"id":8221,"mutability":"mutable","name":"proposal","nameLocation":"21233:8:28","nodeType":"VariableDeclaration","scope":8247,"src":"21216:25:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal"},"typeName":{"id":8220,"nodeType":"UserDefinedTypeName","pathNode":{"id":8219,"name":"Proposal","nameLocations":["21216:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":6643,"src":"21216:8:28"},"referencedDeclaration":6643,"src":"21216:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal"}},"visibility":"internal"}],"id":8225,"initialValue":{"baseExpression":{"id":8222,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"21244:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6643_storage_$dyn_storage","typeString":"struct VotingContract.Proposal storage ref[] storage ref"}},"id":8224,"indexExpression":{"id":8223,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8216,"src":"21254:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21244:22:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage","typeString":"struct VotingContract.Proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21216:50:28"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8226,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"21281:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21287:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"21281:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":8228,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"21299:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21308:7:28","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":6642,"src":"21299:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21281:34:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":8231,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"21319:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21328:6:28","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"21319:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21281:53:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8246,"nodeType":"IfStatement","src":"21277:170:28","trueBody":{"id":8245,"nodeType":"Block","src":"21336:111:28","statements":[{"expression":{"id":8238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8234,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"21351:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6643_storage_ptr","typeString":"struct VotingContract.Proposal storage pointer"}},"id":8236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21360:6:28","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"21351:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21369:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"21351:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8239,"nodeType":"ExpressionStatement","src":"21351:23:28"},{"eventCall":{"arguments":[{"id":8241,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8216,"src":"21416:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":8242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21429:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8240,"name":"ProposalStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6564,"src":"21394:21:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool)"}},"id":8243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21394:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8244,"nodeType":"EmitStatement","src":"21389:46:28"}]}}]},"functionSelector":"6bff47e6","id":8248,"implemented":true,"kind":"function","modifiers":[],"name":"deactivateProposal","nameLocation":"21158:18:28","nodeType":"FunctionDefinition","parameters":{"id":8217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8216,"mutability":"mutable","name":"_proposalId","nameLocation":"21185:11:28","nodeType":"VariableDeclaration","scope":8248,"src":"21177:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8215,"name":"uint256","nodeType":"ElementaryTypeName","src":"21177:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21176:21:28"},"returnParameters":{"id":8218,"nodeType":"ParameterList","parameters":[],"src":"21205:0:28"},"scope":8249,"src":"21149:305:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":8250,"src":"823:20634:28","usedErrors":[]}],"src":"33:21597:28"}}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"IERC3156FlashBorrower":{"abi":[{"inputs":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onFlashLoan","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashBorrower, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"details\":\"Receive a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"fee\":\"The additional amount of tokens to repay.\",\"initiator\":\"The initiator of the loan.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":\"IERC3156FlashBorrower\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x1224de3b68ef525ed94328c7c0f6aef24f79bf2170591c4214def4f1fd40bca5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d44fa0c2407ce0c793adb36bc021e7e6493078f5d061e5c4636ef08933e70ba\",\"dweb:/ipfs/QmfDtRWtbw9ZaK2w1cc5orUbbfwCfGZmFukThQ4Yq3fEuE\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"onFlashLoan(address,address,uint256,uint256,bytes)":"23e30c8b"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"IERC3156FlashLender":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashLender, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"flashFee(address,uint256)\":{\"details\":\"The fee to be charged for a given loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` to be charged for the loan, on top of the returned principal.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Initiate a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"receiver\":\"The receiver of the tokens in the loan, and the receiver of the callback.\",\"token\":\"The loan currency.\"}},\"maxFlashLoan(address)\":{\"details\":\"The amount of currency available to be lended.\",\"params\":{\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` that can be borrowed.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":\"IERC3156FlashLender\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x1224de3b68ef525ed94328c7c0f6aef24f79bf2170591c4214def4f1fd40bca5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d44fa0c2407ce0c793adb36bc021e7e6493078f5d061e5c4636ef08933e70ba\",\"dweb:/ipfs/QmfDtRWtbw9ZaK2w1cc5orUbbfwCfGZmFukThQ4Yq3fEuE\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x0d9159aa6c1a0d8006fb152b0aee46a0f9b8938575ede1a0d7e186b3bc79c8d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccbfca0b4091d2f0caa762a3da47b56613d3ad06d1ce2a78dc2660be4febe49a\",\"dweb:/ipfs/QmeV9wZXFgdeUptik1GBzGn9NQfQQdXqRZF1m52jz9tdCY\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","maxFlashLoan(address)":"613255ab"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"irOptimized":""}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"paused()":"5c975abb"}},"irOptimized":""}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","zk_version":"1.3.19"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC20.sol:ERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[8]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.le\t@.BB0_69\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.gt\t@.BB0_79\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.eq\t@.BB0_114\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.eq\t@.BB0_123\n\tsub.s!\t@CPI0_15[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r6\n\tadd.ne\tr5, r0, r6\n\tsub.s!\t31, r6, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_31\n\tst.1\t128, r6\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_133\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr6, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_131\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r3, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_34[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_6:\n\tadd\t159, r3, r2\n\tand\t@CPI0_3[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_155\n\tadd\tr0, r0, r5\n.BB0_8:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_8\n.BB0_155:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_10:\n\tsub.s!\t64, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r5\n\tsub.s!\t@CPI0_4[0], r5, r1\n\tjump.gt\t@.BB0_2\n\tadd\t128, r3, r1\n\tadd\t159, r5, r2\n\tsub!\tr2, r1, r2\n\tjump.ge\t@.BB0_2\n\tadd\t128, r5, r4\n\tld.1\tr4, r2\n\tsub.s!\t@CPI0_4[0], r2, r6\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r6\n\tsub.s\t32, r0, r9\n\tand\tr6, r9, r6\n\tld.1\t64, r10\n\tadd\tr10, r6, r6\n\tsub!\tr6, r10, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_4[0], r6, r8\n\tjump.gt\t@.BB0_4\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r6\n\tst.1.inc\tr10, r2, r11\n\tadd\tr5, r2, r5\n\tadd\t160, r5, r5\n\tsub!\tr5, r1, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_20\n\tadd\tr0, r0, r5\n.BB0_19:\n\tadd\t32, r5, r5\n\tadd\tr5, r10, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\tr11, r2, r2\n\tst.1\tr2, r0\n\tld.1\t160, r4\n\tsub.s!\t@CPI0_4[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tadd\t31, r4, r2\n\tadd\t@CPI0_5[0], r0, r5\n\tsub!\tr2, r3, r3\n\tadd\tr0, r0, r3\n\tadd.ge\tr5, r0, r3\n\tand\t@CPI0_5[0], r2, r2\n\tsub!\tr2, r0, r6\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tadd.ne\tr3, r0, r5\n\tsub!\tr5, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t128, r4, r3\n\tld.1\tr3, r2\n\tsub.s!\t@CPI0_4[0], r2, r5\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r5\n\tand\tr5, r9, r5\n\tld.1\t64, r8\n\tadd\tr8, r5, r5\n\tsub!\tr5, r8, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_4[0], r5, r7\n\tjump.gt\t@.BB0_4\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r5\n\tst.1.inc\tr8, r2, r5\n\tadd\tr5, r0, stack-[8]\n\tadd\tr4, r2, r4\n\tadd\t160, r4, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr11, r0, stack-[4]\n\tadd\tr10, r0, stack-[7]\n\tadd\tr9, r0, stack-[5]\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_29\n\tadd\tr0, r0, r1\n.BB0_28:\n\tadd\t32, r1, r1\n\tadd\tr1, r8, r4\n\tadd\tr1, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr1, r2, r4\n\tjump.lt\t@.BB0_28\n.BB0_29:\n\tadd\tstack-[8], r2, r1\n\tst.1\tr1, r0\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tr8, r0, stack-[1]\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tadd\tr3, r0, stack-[2]\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_36\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_36\n.BB0_37:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_37\n.BB0_36:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_46\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB0_2\n\tand!\tstack-[6], r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_43\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_42:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_42\n.BB0_43:\n\tsub.s!\tstack-[6], r3, r3\n\tjump.ge\t@.BB0_45\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[7], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_45:\n\tadd\tstack-[6], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_38\n.BB0_69:\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.le\t@.BB0_70\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.eq\t@.BB0_97\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t18, r0, r1\n\tjump\t@.BB0_113\n.BB0_79:\n\tsub.s!\t@CPI0_10[0], r2, r4\n\tjump.eq\t@.BB0_138\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.eq\t@.BB0_146\n\tsub.s!\t@CPI0_12[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_22[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[7]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[8], r0, r2\n\tjump\t@.BB0_127\n.BB0_70:\n\tsub.s!\t@CPI0_20[0], r2, r4\n\tjump.eq\t@.BB0_82\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tjump\t@.BB0_96\n.BB0_114:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_22[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tr2, r1, r3\n\tsub!\tr3, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.eq\t@.BB0_121\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_5\n.BB0_123:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n.BB0_127:\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_99\n.BB0_97:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n.BB0_99:\n\tsload\tr1, r1\n.BB0_113:\n\tst.1\t128, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_100:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_22[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_22[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r3\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[7]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB0_108\n\tadd\tstack-[6], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_110\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_35[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_28[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_36[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_138:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_22[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[7], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_145\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_27[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_28[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_146:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n.BB0_96:\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_82:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r6\n\tadd.ne\tr5, r0, r6\n\tsub.s!\t31, r6, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.eq\t@.BB0_84\n.BB0_31:\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_84:\n\tst.1\t128, r6\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_87\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr6, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_85\n.BB0_133:\n\tst.1\t0, r3\n\tadd\t160, r0, r1\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB0_137\n\tadd\t@CPI0_30[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_135:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r6, r5\n\tjump.lt\t@.BB0_135\n\tadd\t192, r3, r1\n.BB0_131:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_31[0], r1, r2\n\tsub.s!\t@CPI0_32[0], r2, r2\n\tjump.lt\t@.BB0_4\n.BB0_137:\n\tjump\t@.BB0_91\n.BB0_87:\n\tst.1\t0, r3\n\tadd\t160, r0, r1\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB0_91\n\tadd\t@CPI0_37[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_89:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r6, r5\n\tjump.lt\t@.BB0_89\n\tadd\t192, r3, r1\n.BB0_85:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_31[0], r1, r2\n\tsub.s!\t@CPI0_32[0], r2, r2\n\tjump.lt\t@.BB0_4\n.BB0_91:\n\tadd\tr1, r0, stack-[8]\n\tst.1\t64, r1\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_121:\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[7], r0, r2\n\tjump\t@.BB0_122\n.BB0_145:\n\tsub\tr1, r3, r3\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[6], r0, r2\n\tjump\t@.BB0_122\n.BB0_110:\n\tsub\tr1, r3, r3\n\tadd\tr4, r0, r1\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n.BB0_108:\n\tadd\tr4, r0, r1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[6], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[5], r0, r2\n.BB0_122:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_46:\n\tsub!\tstack-[6], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_48\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n.BB0_48:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_38:\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[4]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_54\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[4], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_54\n.BB0_55:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_55\n.BB0_54:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_64\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB0_2\n\tand!\tstack-[7], r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_61\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_60:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_60\n.BB0_61:\n\tsub.s!\tstack-[7], r3, r3\n\tjump.ge\t@.BB0_63\n\tadd\tstack-[7], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[1], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_63:\n\tadd\t1, r0, r1\n\tadd\tstack-[7], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_56\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_64:\n\tsub!\tstack-[7], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_66\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n.BB0_66:\n\tadd\tstack-[7], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_56:\n\tor\tr2, r1, r1\n\tadd\tstack-[6], r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nfun_transfer:\n.func_begin2:\n\tnop\tstack+=[4]\n\tadd\tr3, r0, stack-[4]\n\tand!\t@CPI2_0[0], r1, r1\n\tjump.eq\t@.BB2_1\n\tand!\t@CPI2_0[0], r2, stack-[2]\n\tjump.eq\t@.BB2_4\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[1]\n\tsub.s!\tstack-[4], r2, r1\n\tjump.lt\t@.BB2_8\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tadd\tstack-[1], r0, r3\n\tsub.s\tstack-[4], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\t@CPI2_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[4], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI2_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI2_4[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_6\n\tret\n.BB2_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB2_2\n.BB2_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tjump\t@.BB2_2\n.BB2_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n.BB2_2:\n\tst.1\tr2, r3\n\tadd\t@CPI2_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_1[0], r0, r2\n\tsub.s!\t@CPI2_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_approve:\n.func_begin3:\n\tnop\tstack+=[3]\n\tand!\t@CPI3_0[0], r1, r1\n\tjump.eq\t@.BB3_1\n\tadd\tr3, r0, stack-[2]\n\tand!\t@CPI3_0[0], r2, stack-[3]\n\tjump.eq\t@.BB3_4\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI3_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI3_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_6\n\tret\n.BB3_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tjump\t@.BB3_2\n.BB3_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB3_2:\n\tst.1\tr2, r3\n\tadd\t@CPI3_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\n__sha3:\n.func_begin4:\n\tadd\t@CPI4_0[0], r0, r3\n\tsub.s!\t@CPI4_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI4_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_2\n\tld\tr1, r1\n\tret\n.BB4_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__farcall:\n.func_begin5:\n.tmp0:\n\tfar_call\tr1, r2, @.BB5_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n__staticcall:\n.func_begin6:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB6_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n\t.data\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_1:\nCPI3_1:\nCPI4_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551457\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\n\t.cell 8589934560\nCPI0_4:\n\t.cell 18446744073709551615\nCPI0_5:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_6:\nCPI2_3:\nCPI3_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_7:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_8:\n\t.cell 961581904\nCPI0_9:\n\t.cell 2757214934\nCPI0_10:\n\t.cell 2757214935\nCPI0_11:\n\t.cell 2835717307\nCPI0_12:\n\t.cell 3714247998\nCPI0_13:\n\t.cell 961581905\nCPI0_14:\n\t.cell 1889567281\nCPI0_15:\n\t.cell 2514000705\nCPI0_16:\n\t.cell 404098524\nCPI0_17:\n\t.cell 404098525\nCPI0_18:\n\t.cell 599290589\nCPI0_19:\n\t.cell 826074471\nCPI0_20:\n\t.cell 117300739\nCPI0_21:\n\t.cell 157198259\nCPI0_22:\nCPI2_0:\nCPI3_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_23:\n\t.cell 2535301202817642044428229017600\nCPI0_24:\n\t.cell 2535301200456458802993406410752\nCPI0_25:\nCPI2_2:\nCPI3_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_26:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI0_27:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\nCPI0_28:\nCPI2_7:\nCPI3_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_29:\nCPI2_8:\nCPI3_8:\n\t.cell 10458117451882892562347801444352\nCPI0_30:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI0_31:\n\t.cell -18446744073709551616\nCPI0_32:\n\t.cell -18446744073709551488\nCPI0_33:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_34:\n\t.cell 2852213850513516153367582212096\nCPI0_35:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI0_36:\n\t.cell 7922816251426433759354395033600\nCPI0_37:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI2_4:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI2_5:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI2_6:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI2_9:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI2_10:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI2_11:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI2_12:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI3_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI3_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI3_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI3_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI3_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI4_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\n","bytecode":{"object":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/// @use-src 9:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 10:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 15:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 17:\"@openzeppelin/contracts/utils/Context.sol\"\nobject \"ERC20_1057\" {\n    code {\n        {\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC20_1057\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            /// @src 9:2046:2059  \"_name = name_\"\n            let _4 := 0x03\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _5 := sload(/** @src 9:2046:2059  \"_name = name_\" */ _4)\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _6 := 1\n            length := shr(_6, _5)\n            let outOfPlaceEncoding := and(_5, _6)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            let _7 := 31\n            if gt(length, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:2046:2059  \"_name = name_\" */ _4)\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let deleteStart := add(data, shr(5, add(newLen, _7)))\n                if lt(newLen, _3) { deleteStart := data }\n                let _8 := add(data, shr(5, add(length, _7)))\n                let start := deleteStart\n                for { } lt(start, _8) { start := add(start, _6) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            srcOffset := _3\n            switch gt(newLen, _7)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:2046:2059  \"_name = name_\" */ _4)\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, _6)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 9:2046:2059  \"_name = name_\" */ _4, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 9:2046:2059  \"_name = name_\" */ _4, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(_6, newLen), _6))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 9:2046:2059  \"_name = name_\" */ _4, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ or(and(value, not(shr(shl(/** @src 9:2046:2059  \"_name = name_\" */ _4, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen), not(0)))), shl(_6, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 9:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            /// @src 9:2069:2086  \"_symbol = symbol_\"\n            let _9 := 0x04\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _10 := sload(/** @src 9:2069:2086  \"_symbol = symbol_\" */ _9)\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            length_1 := shr(_6, _10)\n            let outOfPlaceEncoding_1 := and(_10, _6)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 9:2069:2086  \"_symbol = symbol_\" */ _9, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            if gt(length_1, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:2069:2086  \"_symbol = symbol_\" */ _9)\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _7)))\n                if lt(newLen_1, _3) { deleteStart_1 := data_1 }\n                let _11 := add(data_1, shr(5, add(length_1, _7)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _11) { start_1 := add(start_1, _6) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            srcOffset_1 := _3\n            switch gt(newLen_1, _7)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:2069:2086  \"_symbol = symbol_\" */ _9)\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _3) }\n                {\n                    sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _6)\n                    srcOffset_1 := add(srcOffset_1, _3)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 9:2046:2059  \"_name = name_\" */ _4, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 9:2069:2086  \"_symbol = symbol_\" */ _9, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(_6, newLen_1), _6))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(value1, srcOffset_1))\n                }\n                sstore(/** @src 9:2069:2086  \"_symbol = symbol_\" */ _9, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ or(and(value_1, not(shr(shl(/** @src 9:2046:2059  \"_name = name_\" */ _4, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen_1), not(0)))), shl(_6, newLen_1)))\n            }\n            let _12 := mload(64)\n            let _13 := datasize(\"ERC20_1057_deployed\")\n            codecopy(_12, dataoffset(\"ERC20_1057_deployed\"), _13)\n            return(_12, _13)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 9:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 17:\"@openzeppelin/contracts/utils/Context.sol\"\n    object \"ERC20_1057_deployed\" {\n        code {\n            {\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        let slotValue := sload(/** @src 9:2244:2249  \"_name\" */ 0x03)\n                        /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let length := _4\n                        let _5 := 1\n                        length := shr(_5, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _5)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _6 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _6))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, _6), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 9:2244:2249  \"_name\" */ 0x03)\n                            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _6) }\n                            {\n                                mstore(add(add(_1, i), _6), sload(dataPos))\n                                dataPos := add(dataPos, _5)\n                            }\n                            ret := add(add(_1, i), _6)\n                        }\n                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address()\n                        /// @src 9:4606:4612  \"amount\"\n                        fun_approve(/** @src 17:734:744  \"msg.sender\" */ caller(), /** @src 9:4606:4612  \"amount\" */ value0, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ calldataload(36))\n                        let memPos := mload(_2)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _7 := sload(/** @src 9:3342:3354  \"_totalSupply\" */ 0x02)\n                        /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, _7)\n                        return(memPos_1, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address()\n                        let value1 := abi_decode_address_4782()\n                        let value := calldataload(68)\n                        mstore(_4, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, 1)\n                        let _8 := keccak256(_4, _2)\n                        mstore(_4, /** @src 17:734:744  \"msg.sender\" */ caller())\n                        /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        mstore(32, _8)\n                        let _9 := sload(keccak256(_4, _2))\n                        /// @src 9:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                        if /** @src 9:11244:11281  \"currentAllowance != type(uint256).max\" */ iszero(eq(_9, /** @src 9:11264:11281  \"type(uint256).max\" */ not(0)))\n                        /// @src 9:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                        {\n                            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                            if /** @src 9:11305:11331  \"currentAllowance >= amount\" */ lt(_9, value)\n                            /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                            {\n                                let memPtr := mload(_2)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, _3), 32)\n                                mstore(add(memPtr, 36), 29)\n                                mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                                revert(memPtr, 100)\n                            }\n                            /// @src 9:11432:11457  \"currentAllowance - amount\"\n                            fun_approve(value0_1, /** @src 17:734:744  \"msg.sender\" */ caller(), /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 9:11432:11457  \"currentAllowance - amount\" */ _9, value))\n                        }\n                        /// @src 9:5424:5430  \"amount\"\n                        fun_transfer(value0_1, value1, value)\n                        /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, /** @src 9:3186:3188  \"18\" */ 0x12)\n                        /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        return(memPos_3, 32)\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address()\n                        mstore(_4, /** @src 17:734:744  \"msg.sender\" */ caller())\n                        /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        mstore(32, 1)\n                        let _10 := keccak256(_4, _2)\n                        mstore(_4, and(value0_2, sub(shl(160, 1), 1)))\n                        mstore(32, _10)\n                        let _11 := sload(keccak256(_4, _2))\n                        let sum := add(_11, calldataload(36))\n                        if gt(_11, sum)\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x11)\n                            revert(_4, 36)\n                        }\n                        /// @src 9:6021:6059  \"allowance(owner, spender) + addedValue\"\n                        fun_approve(/** @src 17:734:744  \"msg.sender\" */ caller(), /** @src 9:6021:6059  \"allowance(owner, spender) + addedValue\" */ value0_2, sum)\n                        /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, 1)\n                        return(memPos_4, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, _4)\n                        let _12 := sload(keccak256(_4, _2))\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, _12)\n                        return(memPos_5, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_1 := mload(_2)\n                        let ret_1 := _4\n                        let slotValue_1 := sload(_3)\n                        let length_1 := _4\n                        let _13 := 1\n                        length_1 := shr(_13, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, _13)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        let _14 := 32\n                        if eq(outOfPlaceEncoding_1, lt(length_1, _14))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr_1, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_1, _14), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_1, shl(5, iszero(iszero(length_1)))), _14)\n                        }\n                        case 1 {\n                            mstore(_4, _3)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := _4\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _14) }\n                            {\n                                mstore(add(add(memPtr_1, i_1), _14), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _13)\n                            }\n                            ret_1 := add(add(memPtr_1, i_1), _14)\n                        }\n                        let newFreePtr_1 := add(memPtr_1, and(add(sub(ret_1, memPtr_1), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr_1), newFreePtr_1))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        mstore(_4, /** @src 17:734:744  \"msg.sender\" */ caller())\n                        /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        mstore(32, 1)\n                        let _15 := keccak256(_4, _2)\n                        mstore(_4, and(value0_3, sub(shl(160, 1), 1)))\n                        mstore(32, _15)\n                        let _16 := sload(keccak256(_4, _2))\n                        if /** @src 9:6792:6827  \"currentAllowance >= subtractedValue\" */ lt(_16, value_1)\n                        /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 37)\n                            mstore(add(memPtr_2, 68), \"ERC20: decreased allowance below\")\n                            mstore(add(memPtr_2, 100), \" zero\")\n                            revert(memPtr_2, 132)\n                        }\n                        /// @src 9:6928:6962  \"currentAllowance - subtractedValue\"\n                        fun_approve(/** @src 17:734:744  \"msg.sender\" */ caller(), /** @src 9:6928:6962  \"currentAllowance - subtractedValue\" */ value0_3, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 9:6928:6962  \"currentAllowance - subtractedValue\" */ _16, value_1))\n                        /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, 1)\n                        return(memPos_6, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_4 := abi_decode_address()\n                        /// @src 9:3894:3900  \"amount\"\n                        fun_transfer(/** @src 17:734:744  \"msg.sender\" */ caller(), /** @src 9:3894:3900  \"amount\" */ value0_4, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ calldataload(36))\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, 1)\n                        return(memPos_7, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_5 := abi_decode_address()\n                        let value1_1 := abi_decode_address_4782()\n                        let _17 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_5, _17))\n                        mstore(32, /** @src 9:4102:4113  \"_allowances\" */ 0x01)\n                        /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let _18 := keccak256(_4, _2)\n                        mstore(_4, and(value1_1, _17))\n                        mstore(32, _18)\n                        let _19 := sload(keccak256(_4, _2))\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, _19)\n                        return(memPos_8, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_4782() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 817 @src 9:7456:8244  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_amount)\n            {\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 9:7552:7570  \"from != address(0)\" */ var_from, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 9:7552:7570  \"from != address(0)\" */ iszero(/** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 9:7630:7646  \"to != address(0)\" */ var_to, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 9:7630:7646  \"to != address(0)\" */ iszero(/** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 35)\n                    mstore(add(memPtr_1, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr_1, 100), \"ess\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 9:7568:7569  \"0\"\n                let _4 := 0x00\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src 9:7568:7569  \"0\" */ _4, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                mstore(0x20, /** @src 9:7568:7569  \"0\" */ _4)\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _5 := sload(keccak256(/** @src 9:7568:7569  \"0\" */ _4, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40))\n                if /** @src 9:7801:7822  \"fromBalance >= amount\" */ lt(_5, var_amount)\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                {\n                    let memPtr_2 := mload(0x40)\n                    mstore(memPtr_2, shl(229, 4594637))\n                    mstore(add(memPtr_2, 4), 0x20)\n                    mstore(add(memPtr_2, 36), 38)\n                    mstore(add(memPtr_2, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr_2, 100), \"alance\")\n                    revert(memPtr_2, 132)\n                }\n                mstore(/** @src 9:7568:7569  \"0\" */ _4, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                mstore(0x20, /** @src 9:7568:7569  \"0\" */ _4)\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                sstore(keccak256(/** @src 9:7568:7569  \"0\" */ _4, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), sub(/** @src 9:7917:7937  \"fromBalance - amount\" */ _5, var_amount))\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src 9:7568:7569  \"0\" */ _4, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let dataSlot := keccak256(/** @src 9:7568:7569  \"0\" */ _4, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 9:8114:8137  \"_balances[to] += amount\" */ dataSlot), /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ var_amount))\n                /// @src 9:8163:8189  \"Transfer(from, to, amount)\"\n                let _6 := /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(0x40)\n                mstore(_6, var_amount)\n                /// @src 9:8163:8189  \"Transfer(from, to, amount)\"\n                log3(_6, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20, /** @src 9:8163:8189  \"Transfer(from, to, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3)\n            }\n            /// @ast-id 991 @src 9:10457:10797  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun_approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 9:10558:10577  \"owner != address(0)\" */ var_owner, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 9:10558:10577  \"owner != address(0)\" */ iszero(/** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 9:10636:10657  \"spender != address(0)\" */ var_spender, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 9:10636:10657  \"spender != address(0)\" */ iszero(/** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                mstore(/** @src 9:10575:10576  \"0\" */ 0x00, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                mstore(0x20, /** @src 9:10707:10718  \"_allowances\" */ 0x01)\n                /// @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _4 := keccak256(/** @src 9:10575:10576  \"0\" */ 0x00, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40)\n                mstore(/** @src 9:10575:10576  \"0\" */ 0x00, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                mstore(0x20, _4)\n                sstore(keccak256(/** @src 9:10575:10576  \"0\" */ 0x00, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), var_amount)\n                /// @src 9:10758:10790  \"Approval(owner, spender, amount)\"\n                let _5 := /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(0x40)\n                mstore(_5, var_amount)\n                /// @src 9:10758:10790  \"Approval(owner, spender, amount)\"\n                log3(_5, /** @src 9:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20, /** @src 9:10758:10790  \"Approval(owner, spender, amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _3)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220530cbd9f5224660d3389445113a2057f70f1f3b30f1d9fe6d3bd28b4581d817764736f6c63430008110033\"\n    }\n}\n","hash":"0100014da7077b9399e9ec4df28eb3e3d69df7b96e4940b5dab8cb6b6b636d85","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol":{"ERC20FlashMint":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC3156 Flash loans extension, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]. Adds the {flashLoan} method, which provides flash loan support at the token level. By default there is no fee, but this can be changed by overriding {flashFee}. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"flashFee(address,uint256)\":{\"details\":\"Returns the fee applied when doing flash loans. This function calls the {_flashFee} function which returns the fee applied when doing flash loans.\",\"params\":{\"amount\":\"The amount of tokens to be loaned.\",\"token\":\"The token to be flash loaned.\"},\"returns\":{\"_0\":\"The fees applied to the corresponding flash loan.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own amount + fee tokens and have them approved back to the token contract itself so they can be burned.\",\"params\":{\"amount\":\"The amount of tokens to be loaned.\",\"data\":\"An arbitrary datafield that is passed to the receiver.\",\"receiver\":\"The receiver of the flash loan. Should implement the {IERC3156FlashBorrower-onFlashLoan} interface.\",\"token\":\"The token to be flash loaned. Only `address(this)` is supported.\"},\"returns\":{\"_0\":\"`true` if the flash loan was successful.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"maxFlashLoan(address)\":{\"details\":\"Returns the maximum amount of tokens available for loan.\",\"params\":{\"token\":\"The address of the token that is requested.\"},\"returns\":{\"_0\":\"The amount of token that can be loaned.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\":\"ERC20FlashMint\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x1224de3b68ef525ed94328c7c0f6aef24f79bf2170591c4214def4f1fd40bca5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d44fa0c2407ce0c793adb36bc021e7e6493078f5d061e5c4636ef08933e70ba\",\"dweb:/ipfs/QmfDtRWtbw9ZaK2w1cc5orUbbfwCfGZmFukThQ4Yq3fEuE\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x0d9159aa6c1a0d8006fb152b0aee46a0f9b8938575ede1a0d7e186b3bc79c8d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccbfca0b4091d2f0caa762a3da47b56613d3ad06d1ce2a78dc2660be4febe49a\",\"dweb:/ipfs/QmeV9wZXFgdeUptik1GBzGn9NQfQQdXqRZF1m52jz9tdCY\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\":{\"keccak256\":\"0x2889f96f15849772ce1ec2b39c2f2ee7848707c7985cb094d14266e00be927d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20828f95b8e46a69650a0cd67070532642aedb5a1f8b394538d97b32c8939aa8\",\"dweb:/ipfs/QmVndy6YgL1FHXKYsD4QyE96RX4JsjKFSPmNhS8o78FiFB\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","increaseAllowance(address,uint256)":"39509351","maxFlashLoan(address)":"613255ab","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","eip712Domain()":"84b0196e","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1. NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x4e560f86662b6f72ab76122fff53317677154f14bac4a80dbd46a54172b3abfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca5c2518d247417cb01164f04eff57b7e87b5346bc03478ada916f26117aa7fd\",\"dweb:/ipfs/QmVgK66XGZCiH9x4mhqejKUTujtu68DyE6KrYi6MPuaHRJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}","zk_version":"1.3.19"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Counters.sol:Counters\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000fc1ad28baf79d6978981893639609a49a8f1ec41c6344986af4bd7df99fc2425"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 18:\"@openzeppelin/contracts/utils/Counters.sol\"\nobject \"Counters_2467\" {\n    code {\n        {\n            /// @src 18:424:1395  \"library Counters {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Counters_2467_deployed\")\n            codecopy(_1, dataoffset(\"Counters_2467_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 18:\"@openzeppelin/contracts/utils/Counters.sol\"\n    object \"Counters_2467_deployed\" {\n        code {\n            {\n                /// @src 18:424:1395  \"library Counters {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122067f32d20a62b3ae87d5edfce1a86f99da6950af4ad21f11743e7fee69399872c64736f6c63430008110033\"\n    }\n}\n","hash":"01000007d1b00060ef1381ed86549771dc79c82606ed53b7e8809f61dfcdf238","factoryDependencies":{}}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}","zk_version":"1.3.19"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ShortStrings.sol:ShortStrings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000005c78aeed89a518c7c42dc7cf04349e5e5e7328329b0817f3418d85d8501fa87a"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 19:\"@openzeppelin/contracts/utils/ShortStrings.sol\"\nobject \"ShortStrings_2683\" {\n    code {\n        {\n            /// @src 19:1235:4285  \"library ShortStrings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ShortStrings_2683_deployed\")\n            codecopy(_1, dataoffset(\"ShortStrings_2683_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 19:\"@openzeppelin/contracts/utils/ShortStrings.sol\"\n    object \"ShortStrings_2683_deployed\" {\n        code {\n            {\n                /// @src 19:1235:4285  \"library ShortStrings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209f844981d5b48410f81b4cff69fd60b6feca3d7ec5e40151c51544c2916f48e364736f6c63430008110033\"\n    }\n}\n","hash":"01000007d6ef8ffa4336a03f707c1e173f2a7722e0bf33814869e10a2f529cd4","factoryDependencies":{}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}","zk_version":"1.3.19"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"StorageSlot.sol:StorageSlot\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000b5525589d6800434c4f2c376410af8607d55d058bc16f1cc02b87bc8364b4a56"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 20:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\nobject \"StorageSlot_2793\" {\n    code {\n        {\n            /// @src 20:1420:4105  \"library StorageSlot {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"StorageSlot_2793_deployed\")\n            codecopy(_1, dataoffset(\"StorageSlot_2793_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 20:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\n    object \"StorageSlot_2793_deployed\" {\n        code {\n            {\n                /// @src 20:1420:4105  \"library StorageSlot {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212206118022458b9c5aab8904aa33aaefd6ce24bb06672e967b84279e4d44053166664736f6c63430008110033\"\n    }\n}\n","hash":"010000078b4a45d28a8a46990f8555020a0e5ed53fcaaadf880cbbacd2ddeeef","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.19"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Strings.sol:Strings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000008cb1c5fb409687ebafadf1a4b78f97a5cb4f61b81a975290cb03377c4798c089"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 21:\"@openzeppelin/contracts/utils/Strings.sol\"\nobject \"Strings_3022\" {\n    code {\n        {\n            /// @src 21:220:2779  \"library Strings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Strings_3022_deployed\")\n            codecopy(_1, dataoffset(\"Strings_3022_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 21:\"@openzeppelin/contracts/utils/Strings.sol\"\n    object \"Strings_3022_deployed\" {\n        code {\n            {\n                /// @src 21:220:2779  \"library Strings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220114560823a3e0814babfb7fce639eabe4a6963082112f0e6573f8bb6333ed08c64736f6c63430008110033\"\n    }\n}\n","hash":"010000073cf2f7eb85eb8968c41aabaed3330315b0ffc9abbd6691f3eb5a7249","factoryDependencies":{}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.19"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ECDSA.sol:ECDSA\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000b09ccb806991d783baefdc42b7a9814924a9c4087ca3ac7c01ebf4d1b8ba2296"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 22:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\nobject \"ECDSA_3388\" {\n    code {\n        {\n            /// @src 22:369:9130  \"library ECDSA {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ECDSA_3388_deployed\")\n            codecopy(_1, dataoffset(\"ECDSA_3388_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 22:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\n    object \"ECDSA_3388_deployed\" {\n        code {\n            {\n                /// @src 22:369:9130  \"library ECDSA {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220726c681d2e30d51c3f1b228f626e3c1cbb37c996ac4dbb66ca10b594f33d0bc264736f6c63430008110033\"\n    }\n}\n","hash":"010000074b7a406481319b844324a6162323fd2ecf53d27ca6b584f6889686be","factoryDependencies":{}}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"irOptimized":""}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}","zk_version":"1.3.19"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Math.sol:Math\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000007a0be5d468dc4ec97a41a3474d655887561516968efa04936b9be4caffd45002"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 24:\"@openzeppelin/contracts/utils/math/Math.sol\"\nobject \"Math_4458\" {\n    code {\n        {\n            /// @src 24:202:12784  \"library Math {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Math_4458_deployed\")\n            codecopy(_1, dataoffset(\"Math_4458_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 24:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"Math_4458_deployed\" {\n        code {\n            {\n                /// @src 24:202:12784  \"library Math {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212205ad7263901cde9b4a2e1ce04732091f7cb20187c72d078f4d54aa7f67d37751364736f6c63430008110033\"\n    }\n}\n","hash":"0100000709a312cb63b7b519c2e1b3888de3d83d3dac3b0244aff780d5ede683","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}","zk_version":"1.3.19"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SafeCast.sol:SafeCast\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000aaace8c54c36b04558cf0256efe2b56590b18029ca80f5b1c0d849b46f6a303c"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 25:\"@openzeppelin/contracts/utils/math/SafeCast.sol\"\nobject \"SafeCast_5999\" {\n    code {\n        {\n            /// @src 25:927:35080  \"library SafeCast {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SafeCast_5999_deployed\")\n            codecopy(_1, dataoffset(\"SafeCast_5999_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 25:\"@openzeppelin/contracts/utils/math/SafeCast.sol\"\n    object \"SafeCast_5999_deployed\" {\n        code {\n            {\n                /// @src 25:927:35080  \"library SafeCast {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220de6749afc5beb53a12b42044aa53a67fb5165029b0b00290abccc9095b40b76a64736f6c63430008110033\"\n    }\n}\n","hash":"01000007712c4daf6529044ad0d3d742daa792406971811c8f588986949c535a","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}","zk_version":"1.3.19"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SafeMath.sol:SafeMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000f3e918072ea05a4350944590305fbc7bf22046b9ea22f038b10351ae9744ea41"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 26:\"@openzeppelin/contracts/utils/math/SafeMath.sol\"\nobject \"SafeMath_6311\" {\n    code {\n        {\n            /// @src 26:482:6692  \"library SafeMath {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SafeMath_6311_deployed\")\n            codecopy(_1, dataoffset(\"SafeMath_6311_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 26:\"@openzeppelin/contracts/utils/math/SafeMath.sol\"\n    object \"SafeMath_6311_deployed\" {\n        code {\n            {\n                /// @src 26:482:6692  \"library SafeMath {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220987b559641d5cdd950f9cf1f55bbf5658a34b5350e27f297fc61c34868d3e2bc64736f6c63430008110033\"\n    }\n}\n","hash":"010000077e4da0e8f1e916acfd0c9705acf0c035cffcd6290c672749df63e345","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.19"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SignedMath.sol:SignedMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000dd06ca93a22016fa231e6e74e437bed16e00b69683e383fee54c6ec256b6ee21"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 27:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\nobject \"SignedMath_6416\" {\n    code {\n        {\n            /// @src 27:215:1262  \"library SignedMath {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SignedMath_6416_deployed\")\n            codecopy(_1, dataoffset(\"SignedMath_6416_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 27:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\n    object \"SignedMath_6416_deployed\" {\n        code {\n            {\n                /// @src 27:215:1262  \"library SignedMath {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212201cb0d9f31c04e80d01f8b7d9024b0a0811d4a2e02c122c93e2191396bbfdca8a64736f6c63430008110033\"\n    }\n}\n","hash":"01000007d65d5be6f2ba6c082f491149a494e81a60764f532d25be1f66637b11","factoryDependencies":{}}},"contracts/SpenderContract.sol":{"VotingContract":{"abi":[{"inputs":[{"internalType":"address","name":"_myToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"staked","type":"bool"},{"indexed":false,"internalType":"uint256","name":"unlockTime","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"stakeIndex","type":"uint256"}],"name":"DepositForProposal","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"uint256","name":"penalty","type":"uint256"}],"name":"FundsPenalizedForNonCompliance","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountToReturn","type":"uint256"}],"name":"FundsSettledForAverageQuality","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"proposalIndex","type":"uint256"},{"indexed":false,"internalType":"string","name":"proposalDescription","type":"string"},{"indexed":false,"internalType":"string[]","name":"optionDescriptions","type":"string[]"}],"name":"ProposalAndOptionsSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"ProposalConcluded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_proposalId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"ProposalEndTime","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"ProposalEnded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"userAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"string","name":"proposalDescription","type":"string"},{"indexed":false,"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"indexed":false,"internalType":"string[]","name":"optionDescriptions","type":"string[]"}],"name":"ProposalForUser","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"ProposalStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"message","type":"string"}],"name":"Received","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isWinner","type":"bool"}],"name":"RewardDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"indexed":false,"internalType":"bool","name":"penalized","type":"bool"},{"indexed":false,"internalType":"uint256","name":"amountReleased","type":"uint256"}],"name":"StakeReleased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isForProposal","type":"bool"}],"name":"TokensStaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":true,"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newUnlockTime","type":"uint256"}],"name":"UnlockTimeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_address","type":"address"},{"indexed":true,"internalType":"uint256","name":"_proposalId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"_optionId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Voted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountWithdrawn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balanceAfterWithdrawal","type":"uint256"}],"name":"WithdrawalDetailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"UserSstakeAmounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"UserStakerAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"added_proposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"checkQualityComplianceBelowExpectations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"proposalDescription","type":"string"},{"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"createProposalWithOptions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"deactivateProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getAvailableWithdrawBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentProposalId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"optionIndex","type":"uint256"}],"name":"getOptionVoteCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getOptionsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"getProposalStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserVotingHistory","outputs":[{"internalType":"uint256[]","name":"proposalIds","type":"uint256[]"},{"internalType":"uint256[]","name":"optionIds","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"internalType":"bool","name":"penalizeStake","type":"bool"}],"name":"handleStakeRelease","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"myToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"optionIdsByProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"string","name":"proposalDescription","type":"string"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"string[]","name":"optionDescriptions","type":"string[]"},{"internalType":"uint256","name":"stakeIndex","type":"uint256"},{"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"processUserStakedProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposalOptions","outputs":[{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"proposalTokenDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposalVoters","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposals","outputs":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"},{"internalType":"bool","name":"isSettled","type":"bool"},{"internalType":"bool","name":"isWagered","type":"bool"},{"internalType":"uint256","name":"endTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"},{"internalType":"uint256","name":"_newEndTime","type":"uint256"}],"name":"setProposalEndTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"settleFundsForAverageQuality","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"winningOptionId","type":"uint256"}],"name":"settleRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"stakesForUser","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"unlockTime","type":"uint256"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"bool","name":"isWagered","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"submitProposalForReview","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"usedVotingRights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userVotingHistory","outputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"optionId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"verifyComplianceAndExpectations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"},{"internalType":"uint256","name":"_optionId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voteCountsByProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voterAddressesByProposal","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voterIndexInProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voters","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"votingEndTimes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"votingRecords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_myToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"DepositForProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"FundsPenalizedForNonCompliance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"}],\"name\":\"FundsSettledForAverageQuality\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"}],\"name\":\"ProposalAndOptionsSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"ProposalConcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"ProposalEndTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"ProposalEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"}],\"name\":\"ProposalForUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"ProposalStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isWinner\",\"type\":\"bool\"}],\"name\":\"RewardDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"penalized\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReleased\",\"type\":\"uint256\"}],\"name\":\"StakeReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isForProposal\",\"type\":\"bool\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newUnlockTime\",\"type\":\"uint256\"}],\"name\":\"UnlockTimeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balanceAfterWithdrawal\",\"type\":\"uint256\"}],\"name\":\"WithdrawalDetailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"UserSstakeAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"UserStakerAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"added_proposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"checkQualityComplianceBelowExpectations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"createProposalWithOptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"deactivateProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAvailableWithdrawBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"optionIndex\",\"type\":\"uint256\"}],\"name\":\"getOptionVoteCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getOptionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserVotingHistory\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"optionIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"penalizeStake\",\"type\":\"bool\"}],\"name\":\"handleStakeRelease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"optionIdsByProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"proposalDescription\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"optionDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"processUserStakedProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalOptions\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposalTokenDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalVoters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSettled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isWagered\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newEndTime\",\"type\":\"uint256\"}],\"name\":\"setProposalEndTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"settleFundsForAverageQuality\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningOptionId\",\"type\":\"uint256\"}],\"name\":\"settleRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakesForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isWagered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"submitProposalForReview\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usedVotingRights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userVotingHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"verifyComplianceAndExpectations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voteCountsByProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voterAddressesByProposal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voterIndexInProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingEndTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingRecords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SpenderContract.sol\":\"VotingContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x1224de3b68ef525ed94328c7c0f6aef24f79bf2170591c4214def4f1fd40bca5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d44fa0c2407ce0c793adb36bc021e7e6493078f5d061e5c4636ef08933e70ba\",\"dweb:/ipfs/QmfDtRWtbw9ZaK2w1cc5orUbbfwCfGZmFukThQ4Yq3fEuE\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x0d9159aa6c1a0d8006fb152b0aee46a0f9b8938575ede1a0d7e186b3bc79c8d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccbfca0b4091d2f0caa762a3da47b56613d3ad06d1ce2a78dc2660be4febe49a\",\"dweb:/ipfs/QmeV9wZXFgdeUptik1GBzGn9NQfQQdXqRZF1m52jz9tdCY\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\":{\"keccak256\":\"0x2889f96f15849772ce1ec2b39c2f2ee7848707c7985cb094d14266e00be927d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20828f95b8e46a69650a0cd67070532642aedb5a1f8b394538d97b32c8939aa8\",\"dweb:/ipfs/QmVndy6YgL1FHXKYsD4QyE96RX4JsjKFSPmNhS8o78FiFB\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x4e560f86662b6f72ab76122fff53317677154f14bac4a80dbd46a54172b3abfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca5c2518d247417cb01164f04eff57b7e87b5346bc03478ada916f26117aa7fd\",\"dweb:/ipfs/QmVgK66XGZCiH9x4mhqejKUTujtu68DyE6KrYi6MPuaHRJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/SpenderContract.sol\":{\"keccak256\":\"0xf388949f82aeb6aaefc137641470e8c04a37048335f9e616808b7a0a019fe69e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b0031447ccbacb4a99dbe3afc1ef104a4055dddec5577c21ecf67270cd99da9\",\"dweb:/ipfs/QmSJCgC7DpPKfzVHtLiSCagwUQWKMDp6wE6FjD9wsmGHvz\"]}},\"version\":1}","zk_version":"1.3.19"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SpenderContract.sol:VotingContract\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[15]\n\tptr.add\tr1, r0, r15\n\tptr.add\tr15, r0, stack[@ptr_calldata]\n\tadd\tr15, r0, r1\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tand\t@CPI0_0[0], r1, r1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tst.1\t64, r2\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_2\n\tld\tr15, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_9[0], r2, r3\n\tjump.gt\t@.BB0_43\n\tsub.s!\t@CPI0_40[0], r2, r3\n\tjump.le\t@.BB0_14\n\tsub.s!\t@CPI0_41[0], r2, r3\n\tjump.gt\t@.BB0_36\n\tsub.s!\t@CPI0_49[0], r2, r3\n\tjump.gt\t@.BB0_33\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.eq\t@.BB0_276\n\tsub.s!\t@CPI0_54[0], r2, r3\n\tjump.eq\t@.BB0_282\n\tsub.s!\t@CPI0_55[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t10, r0, r1\n\tjump\t@.BB0_287\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t159, r1, r2\n\tand\t@CPI0_1[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tshr.s!\t5, r1, r3\n\tjump.eq\t@.BB0_729\n\tadd\tr0, r0, r4\n.BB0_5:\n\tshl.s\t5, r4, r5\n\tptr.add\tr15, r5, r6\n\tld\tr6, r6\n\tadd\t128, r5, r5\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_5\n.BB0_729:\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r3, r3\n\tptr.add\tr15, r3, r4\n\tshl.s\t3, r2, r2\n\tadd\t128, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr4, r4\n\tsub\t256, r2, r2\n\tshr\tr4, r2, r4\n\tshl\tr4, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr3, r2\n.BB0_7:\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t1, r0, r1\n\tsstore\tr0, r1\n\tcontext.caller\tr6\n\tshl.s\t8, r6, r2\n\tand\t@CPI0_3[0], r2, r2\n\tsload\tr1, r3\n\tand\t@CPI0_4[0], r3, r4\n\tor\tr2, r4, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tshr.s\t8, r3, r2\n\tand\t@CPI0_2[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_7[0], r2, r2\n\tor\tstack-[15], r2, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_8[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_43:\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tjump.le\t@.BB0_44\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.gt\t@.BB0_66\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.gt\t@.BB0_63\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.eq\t@.BB0_575\n\tsub.s!\t@CPI0_24[0], r2, r3\n\tjump.eq\t@.BB0_595\n\tsub.s!\t@CPI0_25[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t96, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tptr.add.s\t68, r15, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[13]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_262\n\tadd\t16, r0, r3\n\tsload\tr3, r1\n\tadd\tstack-[14], r0, r2\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_605\n\tadd\tr3, r0, stack-[11]\n\tadd\t@CPI0_78[0], r2, r1\n\tadd\tr1, r0, stack-[10]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[12], r0, r4\n\tsub!\tr2, r4, r3\n\tjump.lt\t@.BB0_143\n\tsub\tr2, r4, r2\n\tsstore\tr1, r2\n\tsub!\tstack-[13], r0, r1\n\tjump.ne\t@.BB0_609\n.BB0_611:\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[14], r1, r1\n\tjump.le\t@.BB0_108\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[10], r0, r1\n\tsstore\tr1, r0\n\tld.1\t64, r1\n\tadd\t64, r1, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_86[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_100[0], r0, r4\n\tjump\t@.BB0_567\n.BB0_14:\n\tsub.s!\t@CPI0_56[0], r2, r3\n\tjump.le\t@.BB0_15\n\tsub.s!\t@CPI0_57[0], r2, r3\n\tjump.gt\t@.BB0_25\n\tsub.s!\t@CPI0_61[0], r2, r3\n\tjump.eq\t@.BB0_131\n\tsub.s!\t@CPI0_62[0], r2, r3\n\tjump.eq\t@.BB0_135\n\tsub.s!\t@CPI0_63[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r15, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[15], r2, r2\n\tjump.ge\t@.BB0_2\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_VoteRecord__dyn, @DEFAULT_UNWIND\n\tadd\t2, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r3\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\t32, r4, r5\n\tst.1\tr5, r1\n\tadd\t64, r4, r1\n\tand\t@CPI0_2[0], r2, r5\n\tst.1\tr1, r5\n\tand!\t@CPI0_146[0], r2, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tst.1\tr4, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_147[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_44:\n\tsub.s!\t@CPI0_26[0], r2, r3\n\tjump.le\t@.BB0_45\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.gt\t@.BB0_55\n\tsub.s!\t@CPI0_31[0], r2, r3\n\tjump.eq\t@.BB0_446\n\tsub.s!\t@CPI0_32[0], r2, r3\n\tjump.eq\t@.BB0_526\n\tsub.s!\t@CPI0_33[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t21, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[15], r2, r2\n\tjump.ge\t@.BB0_2\n\tjump\t@.BB0_537\n.BB0_36:\n\tsub.s!\t@CPI0_42[0], r2, r3\n\tjump.gt\t@.BB0_40\n\tsub.s!\t@CPI0_46[0], r2, r3\n\tjump.eq\t@.BB0_299\n\tsub.s!\t@CPI0_47[0], r2, r3\n\tjump.eq\t@.BB0_303\n\tsub.s!\t@CPI0_48[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t10, r0, r1\n\tsload\tr1, r1\n\tsub!\tr3, r1, r1\n\tjump.ge\t@.BB0_309\n\tadd\tr2, r0, stack-[15]\n\tadd\tr3, r0, stack-[14]\n\tst.1\t0, r3\n\tadd\t11, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[15], r1, r1\n\tjump.ge\t@.BB0_312\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_Option__dyn, @DEFAULT_UNWIND\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tjump\t@.BB0_539\n.BB0_66:\n\tsub.s!\t@CPI0_12[0], r2, r3\n\tjump.gt\t@.BB0_70\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.eq\t@.BB0_686\n\tsub.s!\t@CPI0_17[0], r2, r3\n\tjump.eq\t@.BB0_691\n\tsub.s!\t@CPI0_18[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t19, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[15], r2, r2\n\tjump.ge\t@.BB0_2\n\tjump\t@.BB0_544\n.BB0_15:\n\tsub.s!\t@CPI0_64[0], r2, r3\n\tjump.le\t@.BB0_16\n\tsub.s!\t@CPI0_65[0], r2, r3\n\tjump.eq\t@.BB0_80\n\tsub.s!\t@CPI0_66[0], r2, r3\n\tjump.eq\t@.BB0_119\n\tsub.s!\t@CPI0_67[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r15, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[15], r2, r2\n\tjump.ge\t@.BB0_2\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_VoteRecord__dyn, @DEFAULT_UNWIND\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r3\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\t64, r4, r5\n\tst.1\tr5, r1\n\tadd\t32, r4, r1\n\tst.1\tr1, r2\n\tst.1\tr4, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_154[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_45:\n\tsub.s!\t@CPI0_34[0], r2, r3\n\tjump.le\t@.BB0_46\n\tsub.s!\t@CPI0_35[0], r2, r3\n\tjump.eq\t@.BB0_396\n\tsub.s!\t@CPI0_36[0], r2, r3\n\tjump.eq\t@.BB0_398\n\tsub.s!\t@CPI0_37[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_262\n\tadd\t10, r0, r1\n\tsload\tr1, r2\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_309\n\tst.1\t0, r1\n\tmul\t5, r3, r6, r1\n\tadd\t@CPI0_91[0], r6, r4\n\tadd\t@CPI0_79[0], r6, r5\n\tsload\tr5, r1\n\tand!\t255, r1, r2\n\tjump.eq\t@.BB0_403\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_405\n\tadd\tr5, r0, stack-[15]\n\tadd\tr4, r0, stack-[12]\n\tadd\tr3, r0, stack-[11]\n\tadd\tr6, r0, stack-[13]\n\tadd\t@CPI0_92[0], r6, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_93[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_94[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_212\n\tadd\tstack-[15], r0, r3\n\tsload\tr3, r2\n\tld\tr1, r1\n\tsub.s!\tstack-[14], r1, r1\n\tjump.gt\t@.BB0_432\n\tand!\t255, r2, r1\n\tjump.eq\t@.BB0_434\n.BB0_432:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tadd\tstack-[11], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_95[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r2\n.BB0_434:\n\tadd\tstack-[13], r0, r1\n\tadd\t@CPI0_96[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tand!\t@CPI0_97[0], r2, r1\n\tjump.ne\t@.BB0_438\n\tadd\t@CPI0_85[0], r0, r1\n\tand\tr2, r1, r1\n\tor\t256, r1, r1\n\tadd\tstack-[15], r0, r2\n\tsstore\tr2, r1\n.BB0_435:\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tmul\t3, r2, r1, r3\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, stack-[14]\n\tjump.ne\t@.BB0_436\n.BB0_442:\n\tdiv.s\t100, r1, r2, r1\n\tadd\tr2, r0, stack-[13]\n\tsub!\tstack-[14], r2, r1\n\tjump.lt\t@.BB0_143\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[13], r0, r3\n\tsub\tstack-[14], r3, r2\n\tld\tr1, r1\n\tsload\tr1, r4\n\tadd\tr4, r2, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_143\n\tjump\t@.BB0_422\n.BB0_25:\n\tsub.s!\t@CPI0_58[0], r2, r3\n\tjump.eq\t@.BB0_177\n\tsub.s!\t@CPI0_59[0], r2, r3\n\tjump.eq\t@.BB0_254\n\tsub.s!\t@CPI0_60[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r3\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r4\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_262\n\tadd\t10, r0, r2\n\tsload\tr2, r1\n\tsub!\tr4, r1, r1\n\tjump.ge\t@.BB0_265\n\tadd\tr2, r0, stack-[13]\n\tadd\tr4, r0, stack-[14]\n\tadd\tr3, r0, stack-[15]\n\tadd\t@CPI0_93[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_94[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_212\n\tld\tr1, r1\n\tsub!\tstack-[15], r1, r1\n\tjump.ge\t@.BB0_270\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_141[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_142[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB0_269:\n\tst.1\tr2, r3\n\tadd\t@CPI0_72[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_115[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_55:\n\tsub.s!\t@CPI0_28[0], r2, r3\n\tjump.eq\t@.BB0_540\n\tsub.s!\t@CPI0_29[0], r2, r3\n\tjump.eq\t@.BB0_545\n\tsub.s!\t@CPI0_30[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tjump\t@.BB0_573\n.BB0_33:\n\tsub.s!\t@CPI0_50[0], r2, r3\n\tjump.eq\t@.BB0_288\n\tsub.s!\t@CPI0_51[0], r2, r3\n\tjump.eq\t@.BB0_292\n\tsub.s!\t@CPI0_52[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tjump\t@.BB0_123\n.BB0_63:\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.eq\t@.BB0_616\n\tsub.s!\t@CPI0_21[0], r2, r3\n\tjump.eq\t@.BB0_620\n\tsub.s!\t@CPI0_22[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_262\n\tsload\tr0, r1\n\tsub.s!\t2, r1, r1\n\tjump.eq\t@.BB0_138\n\tadd\t2, r0, r1\n\tsstore\tr0, r1\n\tadd\t10, r0, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[13], r2, r2\n\tjump.le\t@.BB0_108\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tmul\t5, r1, r1, r2\n\tadd\t@CPI0_79[0], r1, r3\n\tsload\tr3, r1\n\tand!\t255, r1, r2\n\tjump.ne\t@.BB0_648\n\tadd\tr3, r0, stack-[5]\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_651\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[8], r2, r2\n\tjump.le\t@.BB0_108\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_656\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_90[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t27, r0, r3\n\tjump\t@.BB0_353\n.BB0_40:\n\tsub.s!\t@CPI0_43[0], r2, r3\n\tjump.eq\t@.BB0_314\n\tsub.s!\t@CPI0_44[0], r2, r1\n\tjump.eq\t@.BB0_317\n\tsub.s!\t@CPI0_45[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tshr.s\t8, r2, r3\n\tand\t@CPI0_2[0], r3, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_262\n\tand\t@CPI0_71[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_569\n.BB0_70:\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.eq\t@.BB0_700\n\tsub.s!\t@CPI0_14[0], r2, r3\n\tjump.eq\t@.BB0_707\n\tsub.s!\t@CPI0_15[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t1, r0, r1\n\tadd\t10, r0, r2\n\tsload\tr2, r2\n\tadd\t3, r0, r3\n\tsload\tr3, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_715\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_714\n.BB0_143:\n\tadd\t@CPI0_143[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_86\n.BB0_16:\n\tsub.s!\t@CPI0_68[0], r2, r3\n\tjump.eq\t@.BB0_73\n\tsub.s!\t@CPI0_69[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tjump\t@.BB0_123\n.BB0_46:\n\tsub.s!\t@CPI0_38[0], r2, r3\n\tjump.eq\t@.BB0_336\n\tsub.s!\t@CPI0_39[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t96, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t68, r15, r1\n\tld\tr1, r4\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_339\n\tadd\t10, r0, r5\n\tsload\tr5, r1\n\tsub!\tr3, r1, r1\n\tjump.ge\t@.BB0_345\n\tadd\tr5, r0, stack-[13]\n\tadd\tr4, r0, stack-[12]\n\tadd\tr2, r0, stack-[15]\n\tadd\tr3, r0, stack-[14]\n\tst.1\t0, r3\n\tadd\t11, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[15], r1, r1\n\tjump.ge\t@.BB0_348\n\tadd\tstack-[13], r0, r3\n\tsload\tr3, r1\n\tadd\tstack-[14], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_108\n\tst.1\t0, r3\n\tmul\t5, r2, r1, r2\n\tadd\t@CPI0_79[0], r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_356\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_128[0], r0, r3\n.BB0_352:\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t26, r0, r3\n\tjump\t@.BB0_353\n.BB0_131:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tjump\t@.BB0_123\n.BB0_446:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r2\n\tsub.s!\t192, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r15, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_102[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r3\n\tadd\t@CPI0_109[0], r0, r5\n\tsub!\tr3, r1, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_109[0], r3, r3\n\tsub!\tr3, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_109[0], r3, r3\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r4, r5\n\tptr.add\tr15, r5, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_102[0], r3, r6\n\tjump.gt\t@.BB0_85\n\tadd\t191, r3, r6\n\tsub.s\t32, r0, stack-[15]\n\tand\tstack-[15], r6, r6\n\tadd\t@CPI0_110[0], r6, r7\n\tsub.s!\t@CPI0_111[0], r7, r7\n\tjump.lt\t@.BB0_85\n\tst.1\t64, r6\n\tst.1\t128, r3\n\tadd\tr4, r3, r4\n\tadd\t36, r4, r4\n\tsub!\tr4, r1, r4\n\tjump.gt\t@.BB0_2\n\tadd\t32, r5, r4\n\tptr.add\tr15, r0, r2\n\tptr.add\tr15, r4, r4\n\tand\t31, r3, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB0_726\n\tadd\tr0, r0, r7\n.BB0_456:\n\tshl.s\t5, r7, r8\n\tptr.add\tr4, r8, r9\n\tld\tr9, r9\n\tadd\t160, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_456\n.BB0_726:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_458\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tshl.s\t3, r5, r5\n\tadd\t160, r6, r6\n\tld.1\tr6, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB0_458:\n\tadd\t160, r3, r3\n\tst.1\tr3, r0\n\tptr.add\tr2, r0, r15\n\tptr.add.s\t68, r15, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[2]\n\tptr.add.s\t100, r15, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_102[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r3\n\tsub!\tr3, r1, r3\n\tjump.ge\t@.BB0_2\n\tadd\t4, r4, r3\n\tptr.add\tr15, r3, r5\n\tld\tr5, r6\n\tsub.s!\t@CPI0_102[0], r6, r5\n\tjump.gt\t@.BB0_85\n\tshl.s\t5, r6, r5\n\tadd\t63, r5, r7\n\tand\tstack-[15], r7, r7\n\tld.1\t64, r8\n\tadd\tr8, r7, r7\n\tadd\tr8, r0, stack-[12]\n\tsub!\tr7, r8, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI0_102[0], r7, r9\n\tjump.gt\t@.BB0_85\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_85\n\tst.1\t64, r7\n\tadd\tstack-[12], r0, r7\n\tst.1.inc\tr7, r6, r7\n\tadd\tr7, r0, stack-[7]\n\tadd\t36, r4, r4\n\tadd\tr5, r4, r5\n\tsub!\tr5, r1, r7\n\tjump.gt\t@.BB0_2\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB0_465\n.BB0_477:\n\tptr.add.s\t164, r15, r1\n\tld\tr1, r1\n\tptr.add.s\t132, r15, r3\n\tld\tr3, r3\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[11]\n\tsload\tr2, r4\n\tshr.s\t8, r4, r4\n\tand\t@CPI0_2[0], r4, r4\n\tcontext.caller\tr5\n\tsub!\tr4, r5, r4\n\tjump.ne\t@.BB0_208\n\tadd\t15, r0, r4\n\tsload\tr4, r4\n\tsub!\tr3, r4, r4\n\tjump.ge\t@.BB0_108\n\tadd\t@CPI0_103[0], r3, r4\n\tsload\tr4, r4\n\tand\t@CPI0_2[0], r4, stack-[1]\n\tadd\t16, r0, r4\n\tsload\tr4, r5\n\tsub!\tr5, r3, r5\n\tjump.le\t@.BB0_108\n\tst.1\t0, r4\n\tadd\tstack-[13], r0, r2\n\tand\t@CPI0_2[0], r2, r2\n\tsub!\tstack-[1], r2, r2\n\tjump.ne\t@.BB0_481\n\tadd\t@CPI0_78[0], r3, r2\n\tsload\tr2, r2\n\tsub!\tstack-[2], r2, r2\n\tjump.ne\t@.BB0_483\n\tmul\t@CPI0_116[0], r1, stack-[13], r2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_486\n\tdiv\tstack-[13], r1, r1, r2\n\tsub.s!\t@CPI0_116[0], r1, r1\n\tjump.ne\t@.BB0_143\n.BB0_486:\n\tadd\t@CPI0_93[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_94[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_212\n\tld\tr1, r1\n\tadd\tstack-[13], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_143\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_117[0], r1, r3\n\tjump.gt\t@.BB0_85\n\tadd\t224, r1, r3\n\tst.1\t64, r3\n\tadd\t192, r1, r3\n\tst.1\tr3, r2\n\tadd\tstack-[2], r0, r4\n\tsub!\tr4, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t160, r1, r3\n\tst.1\tr3, r2\n\tadd\t96, r1, r2\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[1], r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r2\n\tst.1\tr2, r0\n\tnear_call\tr0, @array_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr, @DEFAULT_UNWIND\n\tadd\t3, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[6]\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_490\n.BB0_492:\n\tld.1\t64, r1\n\tadd\t96, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t96, r1, r4\n\tld.1\t128, r3\n\tst.1\tr4, r3\n\tadd\t128, r1, r4\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_495\n\tadd\tr0, r0, r5\n.BB0_494:\n\tadd\tr5, r4, r6\n\tadd\t160, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_494\n.BB0_495:\n\tadd\tr3, r4, r5\n\tst.1\tr5, r0\n\tadd\tstack-[2], r0, r5\n\tst.1\tr2, r5\n\tadd\t31, r3, r2\n\tand\tstack-[15], r2, r2\n\tadd\tr2, r4, r3\n\tsub\tr3, r1, r2\n\tadd\t64, r1, r4\n\tst.1\tr4, r2\n\tadd\tstack-[12], r0, r12\n\tld.1\tr12, r2\n\tst.1.inc\tr3, r2, r3\n\tshl.s\t5, r2, r4\n\tadd\tr4, r3, r6\n\tsub!\tr2, r0, r4\n\tjump.ne\t@.BB0_496\n.BB0_501:\n\tsub\tr6, r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_119[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_252\n.BB0_177:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_102[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r2\n\tadd\t@CPI0_109[0], r0, r4\n\tsub!\tr2, r1, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_109[0], r2, r2\n\tsub!\tr2, r0, r6\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_109[0], r2, r2\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t4, r3, r4\n\tptr.add\tr15, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_102[0], r2, r5\n\tjump.gt\t@.BB0_85\n\tadd\t191, r2, r5\n\tsub.s\t32, r0, stack-[15]\n\tand\tstack-[15], r5, r5\n\tsub.s!\t@CPI0_102[0], r5, r6\n\tjump.gt\t@.BB0_85\n\tst.1\t64, r5\n\tst.1\t128, r2\n\tadd\tr3, r2, r3\n\tadd\t36, r3, r3\n\tsub!\tr3, r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t32, r4, r3\n\tptr.add\tr15, r3, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_722\n\tadd\tr0, r0, r6\n.BB0_186:\n\tshl.s\t5, r6, r7\n\tptr.add\tr3, r7, r8\n\tld\tr8, r8\n\tadd\t160, r7, r7\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_186\n.BB0_722:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_188\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tshl.s\t3, r4, r4\n\tadd\t160, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_188:\n\tadd\t160, r2, r2\n\tst.1\tr2, r0\n\tptr.add.s\t36, r15, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_102[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r2\n\tsub!\tr2, r1, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r3, r2\n\tptr.add\tr15, r2, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_102[0], r5, r4\n\tjump.gt\t@.BB0_85\n\tshl.s\t5, r5, r4\n\tadd\t63, r4, r6\n\tand\tstack-[15], r6, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[13]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_102[0], r6, r8\n\tjump.gt\t@.BB0_85\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_85\n\tst.1\t64, r6\n\tadd\tstack-[13], r0, r6\n\tst.1.inc\tr6, r5, r6\n\tadd\tr6, r0, stack-[7]\n\tadd\t36, r3, r3\n\tadd\tr4, r3, r4\n\tsub!\tr4, r1, r6\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_195\n.BB0_207:\n\tptr.add.s\t100, r15, r1\n\tld\tr1, r1\n\tptr.add.s\t68, r15, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[11]\n\tsload\tr2, r2\n\tshr.s\t8, r2, r2\n\tand\t@CPI0_2[0], r2, r2\n\tcontext.caller\tr3\n\tadd\tr3, r0, stack-[2]\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_208\n\tadd\t3, r0, r2\n\tsload\tr2, r3\n\tadd\tr3, r0, stack-[6]\n\tadd\t1, r3, r3\n\tsstore\tr2, r3\n\tmul\t@CPI0_116[0], r1, stack-[10], r2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_211\n\tdiv\tstack-[10], r1, r1, r2\n\tsub.s!\t@CPI0_116[0], r1, r1\n\tjump.ne\t@.BB0_143\n.BB0_211:\n\tadd\t@CPI0_93[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_94[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_212\n\tld\tr1, r1\n\tadd\tstack-[10], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_143\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_117[0], r1, r3\n\tjump.gt\t@.BB0_85\n\tadd\t224, r1, r3\n\tst.1\t64, r3\n\tadd\t192, r1, r3\n\tst.1\tr3, r2\n\tadd\tstack-[12], r0, r4\n\tsub!\tr4, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t160, r1, r3\n\tst.1\tr3, r2\n\tadd\t96, r1, r2\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r2\n\tst.1\tr2, r0\n\tnear_call\tr0, @array_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_216\n.BB0_218:\n\tld.1\t64, r1\n\tadd\t64, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t64, r1, r4\n\tld.1\t128, r3\n\tst.1\tr4, r3\n\tadd\t96, r1, r4\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_221\n\tadd\tr0, r0, r5\n.BB0_220:\n\tadd\tr5, r4, r6\n\tadd\t160, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_220\n.BB0_221:\n\tadd\tr3, r4, r5\n\tst.1\tr5, r0\n\tadd\t31, r3, r3\n\tand\tstack-[15], r3, r3\n\tadd\tr3, r4, r3\n\tsub\tr3, r1, r4\n\tst.1\tr2, r4\n\tadd\tstack-[13], r0, r12\n\tld.1\tr12, r2\n\tst.1.inc\tr3, r2, r3\n\tshl.s\t5, r2, r4\n\tadd\tr4, r3, r6\n\tsub!\tr2, r0, r4\n\tjump.ne\t@.BB0_222\n.BB0_227:\n\tsub\tr6, r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_145[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_252:\n\tld.1\t64, r1\n\tadd\tstack-[6], r0, r2\n\tjump\t@.BB0_253\n.BB0_540:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[15], r2, r2\n\tjump.ge\t@.BB0_2\n.BB0_544:\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @storage_array_index_access_address_dyn, @DEFAULT_UNWIND\n\tshl.s\t3, r2, r2\n\tsload\tr1, r1\n\tshr\tr1, r2, r1\n\tand\t@CPI0_2[0], r1, r1\n\tjump\t@.BB0_538\n.BB0_73:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\t10, r0, r2\n\tsload\tr2, r3\n\tsub!\tr1, r3, r3\n\tjump.ge\t@.BB0_2\n\tst.1\t0, r2\n\tmul\t5, r1, r2, r1\n\tadd\tr2, r0, stack-[12]\n\tadd\t@CPI0_91[0], r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI0_156[0], r2, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r3\n\tadd\t@CPI0_96[0], r3, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\t@CPI0_79[0], r3, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t@CPI0_92[0], r3, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\t224, r0, r2\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[11]\n\tadd\t32, r4, r3\n\tst.1\tr3, r2\n\tadd\tstack-[13], r0, r2\n\tand\t@CPI0_2[0], r2, r2\n\tst.1\tr4, r2\n\tadd\t224, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r4\n\tadd\t192, r4, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[14], r0, r5\n\tand!\t@CPI0_97[0], r5, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t160, r4, r3\n\tst.1\tr3, r2\n\tand!\t65280, r5, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t128, r4, r3\n\tst.1\tr3, r2\n\tand!\t255, r5, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t96, r4, r3\n\tst.1\tr3, r2\n\tadd\t64, r4, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tjump\t@.BB0_531\n.BB0_336:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r3\n\tsload\tr3, r1\n\tshr.s\t8, r1, r2\n\tand\t@CPI0_2[0], r2, r4\n\tcontext.caller\tr2\n\tsub!\tr4, r2, r4\n\tjump.ne\t@.BB0_262\n\tand!\t255, r1, r4\n\tjump.ne\t@.BB0_339\n\tsub.s\t256, r0, r4\n\tand\tr1, r4, r1\n\tor\t1, r1, r1\n\tsstore\tr3, r1\n\tst.1\t128, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_130[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_131[0], r0, r4\n\tjump\t@.BB0_281\n.BB0_80:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r8\n\tsload\tr8, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI0_155[0], r1, r1\n\tjump.lt\t@.BB0_87\n.BB0_85:\n\tadd\t@CPI0_143[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_86:\n\tst.1\t4, r1\n\tadd\t@CPI0_144[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_396:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tjump\t@.BB0_574\n.BB0_135:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r2\n\tsload\tr0, r1\n\tsub.s!\t2, r1, r1\n\tjump.ne\t@.BB0_139\n.BB0_138:\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t31, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_153[0], r0, r1\n\tjump\t@.BB0_263\n.BB0_526:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[15], r2, r2\n\tjump.ge\t@.BB0_2\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_Option__dyn, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[15]\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r2\n\tadd\t1, r2, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[13]\n\tadd\t64, r0, r2\n\tst.1.inc\tr3, r2, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t64, r3, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr3, r2\n\tadd\tstack-[13], r0, r4\n.BB0_531:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n.BB0_532:\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_254:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_258\n.BB0_545:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t@CPI0_106[0], r0, r1\n\tst.1\t128, r1\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t132, r1\n\tcontext.this\tr1\n\tst.1\t164, r1\n\tadd\tr3, r0, stack-[14]\n\tst.1\t196, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_549\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_559\n.BB0_119:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t14, r0, r1\n\tjump\t@.BB0_123\n.BB0_398:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_262\n\tadd\t10, r0, r1\n\tsload\tr1, r2\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_309\n\tst.1\t0, r1\n\tmul\t5, r3, r6, r1\n\tadd\t@CPI0_91[0], r6, r4\n\tadd\t@CPI0_79[0], r6, r5\n\tsload\tr5, r1\n\tand!\t255, r1, r2\n\tjump.eq\t@.BB0_403\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_405\n\tadd\tr5, r0, stack-[15]\n\tadd\tr4, r0, stack-[12]\n\tadd\tr3, r0, stack-[11]\n\tadd\tr6, r0, stack-[13]\n\tadd\t@CPI0_92[0], r6, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_93[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_94[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_212\n\tadd\tstack-[15], r0, r3\n\tsload\tr3, r2\n\tld\tr1, r1\n\tsub.s!\tstack-[14], r1, r1\n\tjump.gt\t@.BB0_409\n\tand!\t255, r2, r1\n\tjump.eq\t@.BB0_411\n.BB0_409:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tadd\tstack-[11], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_95[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r2\n.BB0_411:\n\tadd\tstack-[13], r0, r1\n\tadd\t@CPI0_96[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tand!\t@CPI0_97[0], r2, r1\n\tjump.ne\t@.BB0_415\n\tadd\t@CPI0_85[0], r0, r1\n\tand\tr2, r1, r1\n\tor\t256, r1, r1\n\tadd\tstack-[15], r0, r2\n\tsstore\tr2, r1\n.BB0_412:\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tmul\t3, r2, r1, r3\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, stack-[14]\n\tjump.ne\t@.BB0_413\n.BB0_419:\n\tdiv.s\t100, r1, r2, r1\n\tadd\tr2, r0, stack-[13]\n\tsub!\tstack-[14], r2, r1\n\tjump.lt\t@.BB0_143\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[13], r0, r3\n\tsub\tstack-[14], r3, r2\n\tld\tr1, r1\n\tsload\tr1, r4\n\tadd\tr4, r2, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_143\n.BB0_422:\n\tsstore\tr1, r3\n\tadd\tstack-[15], r0, r4\n\tsload\tr4, r1\n\tadd\t@CPI0_85[0], r0, r3\n\tand\tr1, r3, r1\n\tor\t256, r1, r1\n\tsstore\tr4, r1\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tand\t@CPI0_2[0], r3, r6\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_120[0], r0, r4\n\tjump\t@.BB0_641\n.BB0_276:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r3\n\tsload\tr3, r1\n\tshr.s\t8, r1, r2\n\tand\t@CPI0_2[0], r2, r4\n\tcontext.caller\tr2\n\tsub!\tr4, r2, r4\n\tjump.ne\t@.BB0_262\n\tand!\t255, r1, r4\n\tjump.ne\t@.BB0_280\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t20, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_137[0], r0, r1\n\tjump\t@.BB0_263\n.BB0_575:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[15], r1, r1\n\tjump.ge\t@.BB0_580\n.BB0_579:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_105[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tjump\t@.BB0_353\n.BB0_299:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t12, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\tr0, r0, r1\n\tptr.add\tr15, r0, stack-[15]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tptr.add\tstack-[15], r0, r2\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_305\n.BB0_686:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t20, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[15], r2, r2\n\tjump.ge\t@.BB0_2\n.BB0_537:\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @storage_array_index_access_address_dyn, @DEFAULT_UNWIND\n\tshl.s\t3, r2, r2\n\tsload\tr1, r1\n\tshr\tr1, r2, r1\n.BB0_538:\n\tsub.s!\t255, r2, r2\n\tadd.gt\tr0, r0, r1\n\tjump\t@.BB0_539\n.BB0_288:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tjump\t@.BB0_258\n.BB0_616:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n.BB0_123:\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tjump\t@.BB0_124\n.BB0_314:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_deactivateProposal, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_700:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_2[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tshr.s\t8, r2, r3\n\tand\t@CPI0_2[0], r3, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_262\n\tsub!\tr6, r0, r3\n\tjump.ne\t@.BB0_706\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t38, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_73[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_74[0], r0, r1\n\tjump\t@.BB0_649\n.BB0_282:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tnear_call\tr0, @storage_array_index_access_struct_Proposal__dyn, @DEFAULT_UNWIND\n\tadd\t3, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_539\n.BB0_595:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @fun_getAvailableWithdrawBalance, @DEFAULT_UNWIND\n.BB0_539:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_303:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n.BB0_305:\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_715\n.BB0_691:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\t16, r0, r2\n\tsload\tr2, r3\n\tsub!\tr1, r3, r3\n\tjump.ge\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t@CPI0_78[0], r1, r1\n\tjump\t@.BB0_287\n.BB0_292:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\t15, r0, r2\n\tsload\tr2, r3\n\tsub!\tr1, r3, r3\n\tjump.ge\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t@CPI0_103[0], r1, r1\n.BB0_573:\n\tsload\tr1, r1\n.BB0_574:\n\tand\t@CPI0_2[0], r1, r1\n\tjump\t@.BB0_715\n.BB0_620:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r3\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_262\n\tadd\t10, r0, r1\n\tsload\tr1, r2\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_309\n\tst.1\t0, r1\n\tmul\t5, r3, r6, r1\n\tadd\t@CPI0_91[0], r6, r4\n\tadd\t@CPI0_79[0], r6, r5\n\tsload\tr5, r1\n\tand!\t255, r1, r2\n\tjump.ne\t@.BB0_625\n.BB0_403:\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t25, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_122[0], r0, r1\n\tjump\t@.BB0_263\n.BB0_262:\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_138[0], r0, r1\n\tjump\t@.BB0_263\n.BB0_317:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_132[0], r0, r1\n\tst.1\t128, r1\n\tcontext.this\tr1\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_320\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_330\n.BB0_707:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t22, r0, r1\n.BB0_258:\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\tr0, r0, r1\n\tptr.add\tr15, r0, stack-[15]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tptr.add\tstack-[15], r0, r2\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r2\n.BB0_124:\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n.BB0_287:\n\tsload\tr1, r1\n.BB0_715:\n\tst.1\t128, r1\n\tadd\t@CPI0_70[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_309:\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t24, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_134[0], r0, r1\n\tjump\t@.BB0_263\n.BB0_339:\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t16, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_129[0], r0, r1\n\tjump\t@.BB0_263\n.BB0_139:\n\tadd\tr2, r0, stack-[15]\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tsstore\tr0, r1\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[14]\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t14, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t13, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[10], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_143\n\tsub\tstack-[11], r1, r3\n\tsub.s!\tstack-[11], r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr1, r0, r1\n\tadd.ne\tr0, r0, r3\n\tld.1\t64, r6\n\tadd\t36, r6, r1\n\tadd\t4, r6, r2\n\tadd\tstack-[15], r0, r5\n\tsub!\tr3, r5, r3\n\tjump.ge\t@.BB0_146\n\tadd\t@CPI0_72[0], r0, r3\n\tst.1\tr6, r3\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t40, r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r6, r1\n\tadd\t@CPI0_151[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r6, r1\n\tadd\t@CPI0_152[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r6, r2\n\tadd.ge\tr1, r0, r6\n\tshl.s\t64, r6, r1\n\tor\t@CPI0_115[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_549:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_728\n\tadd\tr0, r0, r7\n.BB0_551:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_551\n.BB0_728:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_553\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_553:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_554\n.BB0_559:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tor\t128, r2, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r3\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r3\n\tsub!\tr3, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB0_2\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_563\n\tadd\t@CPI0_72[0], r0, r3\n\tst.1\tr1, r3\n\tor\t132, r2, r3\n\tadd\t32, r0, r4\n\tst.1\tr3, r4\n\tadd\t196, r2, r3\n\tadd\t@CPI0_108[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t164, r2, r2\n\tadd\t15, r0, r3\n\tst.1\tr2, r3\n\tjump\t@.BB0_355\n.BB0_320:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_133[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_724\n\tadd\tr0, r0, r7\n.BB0_322:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_322\n.BB0_724:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_324\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_324:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_325\n.BB0_330:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tst.1\tr1, r2\n.BB0_332:\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_345:\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t27, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_123[0], r0, r1\n\tjump\t@.BB0_263\n.BB0_265:\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t23, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_139[0], r0, r1\n\tjump\t@.BB0_263\n.BB0_554:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_727\n\tadd\tr0, r0, r6\n.BB0_556:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_556\n.BB0_727:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_558\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_558:\n\tjump\t@.BB0_157\n.BB0_714:\n\tsub.s\t1, r2, r1\n\tjump\t@.BB0_715\n.BB0_280:\n\tsub.s\t256, r0, r4\n\tand\tr1, r4, r1\n\tsstore\tr3, r1\n\tst.1\t128, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_130[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_136[0], r0, r4\n.BB0_281:\n.BB0_568:\n.BB0_569:\n.BB0_570:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_580:\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t14, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[13], r0, r3\n\tsub!\tr3, r1, r2\n\tjump.lt\t@.BB0_143\n\tsub\tr3, r1, r1\n\tsub.s!\tstack-[15], r1, r1\n\tjump.lt\t@.BB0_579\n\tadd\t@CPI0_93[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_94[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_212\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI0_93[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_94[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r3\n\tadd\t@CPI0_101[0], r3, stack-[13]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_212\n\tld\tr1, r1\n\tsub.s!\tstack-[13], r1, r1\n\tjump.gt\t@.BB0_143\n\tadd\t4, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tsub!\tstack-[15], r0, r1\n\tjump.eq\t@.BB0_588\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[15], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_143\n\tsstore\tr1, r2\n.BB0_588:\n\tsub!\tstack-[15], r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\t15, r0, r3\n\tsload\tr3, r2\n\tsub.s!\t@CPI0_102[0], r2, r4\n\tjump.gt\t@.BB0_85\n\tadd\t1, r2, r4\n\tsstore\tr3, r4\n\tadd\t@CPI0_103[0], r2, r2\n\tsload\tr2, r3\n\tand\t@CPI0_7[0], r3, r3\n\tor\tstack-[14], r3, r3\n\tsstore\tr2, r3\n\tadd\t16, r0, r3\n\tsload\tr3, r2\n\tsub.s!\t@CPI0_102[0], r2, r4\n\tjump.gt\t@.BB0_85\n\tadd\t1, r2, r4\n\tsstore\tr3, r4\n\tst.1\t0, r3\n\tadd\t@CPI0_78[0], r2, r2\n\tadd\tstack-[15], r0, r4\n\tsstore\tr2, r4\n\tld.1\t64, r2\n\tadd\t64, r2, r3\n\tadd\tstack-[13], r0, r5\n\tst.1\tr3, r5\n\tand\t1, r1, r1\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tst.1\tr2, r4\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_86[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_104[0], r0, r4\n\tadd\tstack-[14], r0, r5\n\tadd\tstack-[12], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tstack-[12], r0, r2\n.BB0_253:\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tjump\t@.BB0_332\n.BB0_325:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_723\n\tadd\tr0, r0, r6\n.BB0_327:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_327\n.BB0_723:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_329\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_329:\n.BB0_157:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_87:\n\tadd\tstack-[10], r0, r1\n\tshl.s\t5, r1, r3\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r1\n\tadd\tr2, r0, stack-[9]\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_102[0], r1, r5\n\tjump.gt\t@.BB0_85\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_85\n\tst.1\t64, r1\n\tadd\tstack-[10], r0, r1\n\tadd\tstack-[9], r0, r2\n\tst.1.inc\tr2, r1, r9\n\tand\t31, r3, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_718\n\tadd\tr0, r0, r5\n.BB0_91:\n\tshl.s\t5, r5, r6\n\tadd\tr9, r6, r7\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_91\n.BB0_718:\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_93\n.BB0_93:\n\tld.1\t64, r6\n\tadd\tr6, r4, r5\n\tadd\tr6, r0, stack-[8]\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_102[0], r5, r7\n\tjump.gt\t@.BB0_85\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_85\n\tadd\tr9, r0, stack-[6]\n\tadd\tr8, r0, stack-[14]\n\tst.1\t64, r5\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[8], r0, r6\n\tst.1.inc\tr6, r5, r8\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_717\n\tadd\tr0, r0, r5\n.BB0_97:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_97\n.BB0_717:\n\tadd\tr8, r0, stack-[5]\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_99\n.BB0_99:\n\tld.1\t64, r5\n\tadd\tr5, r4, r4\n\tadd\tr5, r0, stack-[7]\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_102[0], r4, r6\n\tjump.gt\t@.BB0_85\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_85\n\tst.1\t64, r4\n\tadd\tstack-[10], r0, r4\n\tadd\tstack-[7], r0, r5\n\tst.1.inc\tr5, r4, r7\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_716\n\tadd\tr0, r0, r4\n.BB0_103:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_103\n.BB0_716:\n\tadd\tr7, r0, stack-[4]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_105\n.BB0_105:\n\tsub!\tstack-[10], r0, r1\n\tadd\tstack-[14], r0, r3\n\tjump.ne\t@.BB0_106\n.BB0_118:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\t96, r0, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t96, r2, r2\n\tadd\tstack-[9], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tsub.s\tstack-[15], r2, r1\n\tadd\tstack-[14], r0, r3\n\tst.1\tr3, r1\n\tadd\tstack-[8], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tstack-[15], r0, r3\n\tadd\t64, r3, r1\n\tsub\tr2, r3, r3\n\tst.1\tr1, r3\n\tadd\tstack-[7], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tjump\t@.BB0_532\n.BB0_312:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_135[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t22, r0, r3\n\tjump\t@.BB0_353\n.BB0_706:\n\tand\t@CPI0_71[0], r2, r2\n\tshl.s\t8, r6, r3\n\tand\t@CPI0_3[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tjump\t@.BB0_570\n.BB0_625:\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_405\n\tadd\tr5, r0, stack-[15]\n\tadd\tr4, r0, stack-[13]\n\tadd\tr3, r0, stack-[11]\n\tadd\tr6, r0, stack-[12]\n\tadd\t@CPI0_92[0], r6, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_93[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_94[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_212\n\tadd\tstack-[15], r0, r3\n\tsload\tr3, r2\n\tld\tr1, r1\n\tsub.s!\tstack-[14], r1, r1\n\tjump.gt\t@.BB0_629\n\tand!\t255, r2, r1\n\tjump.eq\t@.BB0_631\n.BB0_629:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tadd\tstack-[11], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_95[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r2\n.BB0_631:\n\tadd\tstack-[12], r0, r1\n\tadd\t@CPI0_96[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tand!\t@CPI0_97[0], r2, r1\n\tjump.ne\t@.BB0_635\n\tadd\t@CPI0_85[0], r0, r1\n\tand\tr2, r1, r1\n\tor\t256, r1, r1\n\tadd\tstack-[15], r0, r2\n\tsstore\tr2, r1\n.BB0_632:\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tmul\t5, r1, stack-[15], r2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_638\n\tdiv\tstack-[15], r1, r1, r2\n\tsub.s!\t5, r1, r1\n\tjump.ne\t@.BB0_143\n.BB0_638:\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r2\n\tdiv.s\t100, r2, r2, r3\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_143\n\tsub\tr3, r2, r3\n\tsstore\tr1, r3\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tand\t@CPI0_2[0], r3, r6\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_98[0], r0, r4\n.BB0_641:\n\tadd\tstack-[11], r0, r5\n\tjump\t@.BB0_569\n.BB0_405:\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t21, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_121[0], r0, r1\n\tjump\t@.BB0_263\n.BB0_563:\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[14], r1, stack-[12]\n\tsub!\tstack-[12], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_143\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_107[0], r0, r4\n.BB0_567:\n\tadd\tstack-[15], r0, r5\n\tjump\t@.BB0_568\n.BB0_348:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_124[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t25, r0, r3\n.BB0_353:\n\tst.1\tr2, r3\n\tadd\t@CPI0_72[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n.BB0_354:\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n.BB0_355:\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_89[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_270:\n\tadd\tstack-[13], r0, r3\n\tsload\tr3, r1\n\tsub.s!\tstack-[14], r1, r1\n\tjump.le\t@.BB0_108\n\tst.1\t0, r3\n\tadd\t@CPI0_93[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_94[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_212\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI0_93[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_94[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_212\n\tadd\tstack-[13], r0, r2\n\tadd\t1, r2, r2\n\tld\tr1, r1\n\tsub!\tr1, r2, r1\n\tjump.gt\t@.BB0_143\n\tadd\tstack-[14], r0, r4\n\tmul\t5, r4, r1, r3\n\tadd\t@CPI0_92[0], r1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r4\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_140[0], r0, r4\n\tjump\t@.BB0_568\n.BB0_212:\n\trevert\n.BB0_605:\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t25, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_99[0], r0, r1\n\tjump\t@.BB0_263\n.BB0_648:\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t44, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_80[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_81[0], r0, r1\n.BB0_649:\n\tst.1\t228, r1\n\tadd\t@CPI0_75[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_651:\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t23, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_82[0], r0, r1\n.BB0_263:\n\tst.1\t196, r1\n\tadd\t@CPI0_83[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_356:\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t14, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[8]\n\tsub!\tstack-[10], r2, r1\n\tjump.lt\t@.BB0_143\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r3\n\tsub\tstack-[10], r3, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_143\n\tsub\tr2, r1, r1\n\tsub.s!\tstack-[12], r1, r1\n\tjump.ge\t@.BB0_363\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_127[0], r0, r3\n\tjump\t@.BB0_352\n.BB0_146:\n\tadd\tstack-[13], r0, r3\n\tsload\tr3, r3\n\tadd\t@CPI0_148[0], r0, r4\n\tadd\tr6, r0, stack-[11]\n\tst.1\tr6, r4\n\tadd\tstack-[14], r0, r4\n\tst.1\tr2, r4\n\tst.1\tr1, r5\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r3, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_148\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_158\n.BB0_438:\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r3\n\tsub.s\tstack-[13], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tsub!\tr3, r0, r3\n\tadd.ne\tr0, r0, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tjump\t@.BB0_435\n.BB0_415:\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r3\n\tsub.s\tstack-[13], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tsub!\tr3, r0, r3\n\tadd.ne\tr0, r0, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tjump\t@.BB0_412\n.BB0_635:\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t0, r1\n\tadd\t13, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r3\n\tsub.s\tstack-[12], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tsub!\tr3, r0, r3\n\tadd.ne\tr0, r0, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tjump\t@.BB0_632\n.BB0_148:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[11], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_149[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_720\n\tadd\tr0, r0, r7\n.BB0_150:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_150\n.BB0_720:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_152\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[11], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_152:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_153\n.BB0_158:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[11], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_102[0], r1, r4\n\tjump.gt\t@.BB0_85\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_85\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_164\n\tadd\t68, r1, r2\n\tadd\t@CPI0_108[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t15, r0, r3\n\tjump\t@.BB0_353\n.BB0_609:\n\tadd\tstack-[12], r0, r2\n\tmul\t10, r2, stack-[9], r1\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_613\n\tdiv\tstack-[9], r2, r1, r2\n\tsub.s!\t10, r1, r1\n\tjump.ne\t@.BB0_143\n.BB0_613:\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tdiv.s\t100, r2, r2, r3\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r4\n\tadd\tstack-[12], r0, r4\n\tjump.lt\t@.BB0_143\n\tsub\tr4, r2, stack-[12]\n\tsub\tr3, r2, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_611\n.BB0_106:\n\tadd\t32784, r0, stack-[11]\n\tadd\tr0, r0, r4\n.BB0_107:\n\tsload\tr3, r1\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB0_108\n\tadd\tr4, r0, stack-[15]\n\tst.1\t0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[15], r0, r4\n\tsub!\tr2, r4, r2\n\tadd\tstack-[14], r0, r3\n\tjump.le\t@.BB0_108\n\tmul\t3, r4, stack-[13], r2\n\tld\tr1, r1\n\tadd\tstack-[13], r1, r1\n\tshl.s\t5, r4, r5\n\tadd\tr5, r0, stack-[12]\n\tadd\tstack-[6], r5, r2\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tsload\tr3, r1\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB0_108\n\tst.1\t0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[15], r0, r4\n\tsub!\tr2, r4, r2\n\tadd\tstack-[14], r0, r3\n\tjump.le\t@.BB0_108\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[5], r5, r2\n\tld\tr1, r1\n\tadd\tstack-[13], r1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tsload\tr3, r1\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB0_108\n\tst.1\t0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[15], r0, r4\n\tsub!\tr2, r4, r2\n\tadd\tstack-[14], r0, r3\n\tjump.le\t@.BB0_108\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[4], r5, r2\n\tld\tr1, r1\n\tadd\tstack-[13], r1, r1\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r4, r4\n\tsub.s!\tstack-[10], r4, r1\n\tjump.lt\t@.BB0_107\n\tjump\t@.BB0_118\n.BB0_436:\n\tdiv\tr1, r2, r3, r4\n\tsub.s!\t3, r3, r3\n\tjump.ne\t@.BB0_143\n\tmul\t10, r2, r3, r4\n\tdiv\tr3, r2, r2, r4\n\tdiv.s\t100, r3, stack-[14], r3\n\tsub.s!\t10, r2, r2\n\tjump.ne\t@.BB0_143\n\tjump\t@.BB0_442\n.BB0_413:\n\tdiv\tr1, r2, r3, r4\n\tsub.s!\t3, r3, r3\n\tjump.ne\t@.BB0_143\n\tmul\t5, r2, r3, r4\n\tdiv\tr3, r2, r2, r4\n\tdiv.s\t100, r3, stack-[14], r3\n\tsub.s!\t5, r2, r2\n\tjump.ne\t@.BB0_143\n\tjump\t@.BB0_419\n.BB0_153:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_719\n\tadd\tr0, r0, r6\n.BB0_155:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_155\n.BB0_719:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_157\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n\tjump\t@.BB0_157\n.BB0_656:\n\tadd\t19, r0, stack-[7]\n\tadd\t32784, r0, stack-[11]\n\tadd\tr0, r0, stack-[15]\n.BB0_658:\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[15], r1, r1\n\tjump.ge\t@.BB0_660\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[15], r2, r2\n\tjump.le\t@.BB0_108\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[15], r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t20, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tand\t@CPI0_2[0], r3, stack-[14]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[15], r2, r2\n\tjump.le\t@.BB0_108\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[15], r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t21, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[15], r2, r2\n\tjump.le\t@.BB0_108\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[15], r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t14, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[12], r1, r1\n\tjump.lt\t@.BB0_672\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[12], r0, r4\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r4, r3\n\tadd\tr4, r0, r3\n\tjump.lt\t@.BB0_143\n\tsub\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[10], r0, r2\n\tsub.s!\tstack-[8], r2, r1\n\tjump.ne\t@.BB0_677\n\tmul\t98, r3, r4, r1\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB0_683\n\tdiv\tr4, r3, r1, r2\n\tsub.s!\t98, r1, r1\n\tjump.ne\t@.BB0_143\n.BB0_683:\n\tadd\tr4, r0, stack-[12]\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[12], r0, r2\n\tdiv.s\t100, r2, r2, r3\n\tld\tr1, r1\n\tsload\tr1, r4\n\tadd\tr4, r2, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_143\n\tsstore\tr1, r3\n\tld.1\t64, r1\n\tadd\t64, r1, r3\n\tadd\tstack-[6], r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tjump\t@.BB0_680\n.BB0_677:\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[12], r2, r3\n\tadd\tstack-[12], r0, r3\n\tjump.lt\t@.BB0_143\n\tsub\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[13], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t64, r1, r3\n\tst.1\tr3, r0\n\tst.1\tr2, r0\n.BB0_680:\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_86[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_87[0], r0, r4\n\tadd\tstack-[14], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r1\n\tadd\t1, r1, stack-[15]\n\tjump\t@.BB0_658\n.BB0_195:\n\tadd\t@CPI0_109[0], r0, r5\n\tadd\tstack-[13], r0, r6\n\tjump\t@.BB0_196\n.BB0_206:\n\tadd\t32, r6, r6\n\tadd\tr9, r7, r7\n\tst.1\tr7, r0\n\tst.1\tr6, r8\n\tadd\t32, r3, r3\n\tsub!\tr3, r4, r7\n\tjump.ge\t@.BB0_207\n.BB0_196:\n\tptr.add\tr15, r3, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_102[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\tr7, r2, r10\n\tadd\t63, r10, r7\n\tsub!\tr7, r1, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr5, r0, r8\n\tand\t@CPI0_109[0], r7, r7\n\tsub!\tr7, r0, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr5, r0, r9\n\tsub.s!\t@CPI0_109[0], r7, r7\n\tadd.ne\tr8, r0, r9\n\tsub!\tr9, r0, r7\n\tjump.ne\t@.BB0_2\n\tadd\t32, r10, r11\n\tptr.add\tr15, r11, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_102[0], r7, r8\n\tjump.gt\t@.BB0_85\n\tadd\t63, r7, r8\n\tand\tstack-[15], r8, r9\n\tld.1\t64, r8\n\tadd\tr8, r9, r9\n\tsub!\tr9, r8, r12\n\tadd\t0, r0, r12\n\tadd.lt\t1, r0, r12\n\tsub.s!\t@CPI0_102[0], r9, r13\n\tjump.gt\t@.BB0_85\n\tand!\t1, r12, r12\n\tjump.ne\t@.BB0_85\n\tst.1\t64, r9\n\tst.1.inc\tr8, r7, r9\n\tadd\tr10, r7, r10\n\tadd\t64, r10, r10\n\tsub!\tr10, r1, r10\n\tjump.gt\t@.BB0_2\n\tadd\t32, r11, r10\n\tptr.add\tr15, r10, r10\n\tshr.s!\t5, r7, r11\n\tjump.eq\t@.BB0_721\n\tadd\tr0, r0, r12\n.BB0_204:\n\tshl.s\t5, r12, r13\n\tadd\tr9, r13, r14\n\tptr.add\tr10, r13, r13\n\tld\tr13, r13\n\tst.1\tr14, r13\n\tadd\t1, r12, r12\n\tsub!\tr12, r11, r13\n\tjump.lt\t@.BB0_204\n.BB0_721:\n\tand!\t31, r7, r12\n\tjump.eq\t@.BB0_206\n\tshl.s\t5, r11, r11\n\tptr.add\tr10, r11, r10\n\tadd\tr9, r11, r11\n\tshl.s\t3, r12, r12\n\tld.1\tr11, r13\n\tshl\tr13, r12, r13\n\tshr\tr13, r12, r13\n\tld\tr10, r10\n\tsub\t256, r12, r12\n\tshr\tr10, r12, r10\n\tshl\tr10, r12, r10\n\tor\tr10, r13, r10\n\tst.1\tr11, r10\n\tjump\t@.BB0_206\n.BB0_208:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_138[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_72[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tjump\t@.BB0_354\n.BB0_164:\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\tstack-[15], r2, r1\n\tjump.lt\t@.BB0_143\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[13], r0, r3\n\tsub.s\tstack-[15], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[15], r0, r1\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_150[0], r0, r4\n\tadd\tstack-[14], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r1\n\tjump\t@.BB0_170\n.BB0_465:\n\tadd\t@CPI0_109[0], r0, r6\n\tadd\tstack-[12], r0, r7\n\tjump\t@.BB0_466\n.BB0_476:\n\tadd\t32, r7, r7\n\tadd\tr10, r8, r8\n\tst.1\tr8, r0\n\tst.1\tr7, r9\n\tadd\t32, r4, r4\n\tsub!\tr4, r5, r8\n\tptr.add\tr2, r0, r15\n\tjump.ge\t@.BB0_477\n.BB0_466:\n\tptr.add\tr15, r4, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI0_102[0], r8, r9\n\tjump.gt\t@.BB0_2\n\tadd\tr8, r3, r11\n\tadd\t63, r11, r8\n\tsub!\tr8, r1, r9\n\tadd\tr0, r0, r9\n\tadd.ge\tr6, r0, r9\n\tand\t@CPI0_109[0], r8, r8\n\tsub!\tr8, r0, r10\n\tadd\tr0, r0, r10\n\tadd.lt\tr6, r0, r10\n\tsub.s!\t@CPI0_109[0], r8, r8\n\tadd.ne\tr9, r0, r10\n\tsub!\tr10, r0, r8\n\tjump.ne\t@.BB0_2\n\tadd\t32, r11, r12\n\tptr.add\tr15, r12, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI0_102[0], r8, r9\n\tjump.gt\t@.BB0_85\n\tadd\t63, r8, r9\n\tand\tstack-[15], r9, r10\n\tld.1\t64, r9\n\tadd\tr9, r10, r10\n\tsub!\tr10, r9, r13\n\tadd\t0, r0, r13\n\tadd.lt\t1, r0, r13\n\tsub.s!\t@CPI0_102[0], r10, r14\n\tjump.gt\t@.BB0_85\n\tand!\t1, r13, r13\n\tjump.ne\t@.BB0_85\n\tst.1\t64, r10\n\tst.1.inc\tr9, r8, r10\n\tadd\tr11, r8, r11\n\tadd\t64, r11, r11\n\tsub!\tr11, r1, r11\n\tjump.gt\t@.BB0_2\n\tadd\t32, r12, r11\n\tptr.add\tr15, r11, r11\n\tshr.s!\t5, r8, r12\n\tjump.eq\t@.BB0_725\n\tadd\tr0, r0, r13\n.BB0_474:\n\tshl.s\t5, r13, r14\n\tadd\tr10, r14, r15\n\tptr.add\tr11, r14, r14\n\tld\tr14, r14\n\tst.1\tr15, r14\n\tadd\t1, r13, r13\n\tsub!\tr13, r12, r14\n\tjump.lt\t@.BB0_474\n.BB0_725:\n\tand!\t31, r8, r13\n\tjump.eq\t@.BB0_476\n\tshl.s\t5, r12, r12\n\tptr.add\tr11, r12, r11\n\tadd\tr10, r12, r12\n\tshl.s\t3, r13, r13\n\tld.1\tr12, r14\n\tshl\tr14, r13, r14\n\tshr\tr14, r13, r14\n\tld\tr11, r11\n\tsub\t256, r13, r13\n\tshr\tr11, r13, r11\n\tshl\tr11, r13, r11\n\tor\tr11, r14, r11\n\tst.1\tr12, r11\n\tjump\t@.BB0_476\n.BB0_363:\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[12], r1, stack-[10]\n\tsub!\tstack-[10], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_143\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[15], r2, r2\n\tjump.le\t@.BB0_108\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r3\n\tadd\tstack-[12], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_143\n\tsstore\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[12], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_143\n\tsstore\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t12, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_125[0], r2, r2\n\tjump.gt\t@.BB0_85\n\tadd\tstack-[11], r0, r3\n\tadd\t96, r3, r2\n\tst.1\t64, r2\n\tadd\t64, r3, r4\n\tadd\tstack-[12], r0, r2\n\tadd\tr4, r0, stack-[9]\n\tst.1\tr4, r2\n\tadd\tstack-[14], r0, r2\n\tst.1.inc\tr3, r2, r3\n\tadd\tstack-[15], r0, r2\n\tadd\tr3, r0, stack-[8]\n\tst.1\tr3, r2\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[10]\n\tsub.s!\t@CPI0_102[0], r2, r2\n\tjump.gt\t@.BB0_85\n\tadd\tstack-[10], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r2\n\tmul\t3, r2, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tadd\t1, r1, r3\n\tsstore\tr3, r2\n\tadd\t2, r1, r1\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_102[0], r2, r2\n\tjump.gt\t@.BB0_85\n\tadd\tstack-[11], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_7[0], r2, r2\n\tadd\tstack-[13], r0, r3\n\tand\t@CPI0_2[0], r3, stack-[11]\n\tor\tstack-[11], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t19, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[9]\n\tsub.s!\t@CPI0_102[0], r2, r2\n\tjump.gt\t@.BB0_85\n\tadd\tstack-[9], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[9], r1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_7[0], r2, r2\n\tor\tstack-[11], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t20, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_102[0], r2, r2\n\tjump.gt\t@.BB0_85\n\tadd\tstack-[11], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r1, r1\n\tadd\tstack-[15], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t21, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_102[0], r2, r2\n\tjump.gt\t@.BB0_85\n\tadd\tstack-[11], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r1, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_143\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t22, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r2\n\tsub.s\t1, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_126[0], r0, r4\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[15], r0, r7\n\tjump\t@.BB0_570\n.BB0_660:\n\tadd\tstack-[5], r0, r3\n\tsload\tr3, r1\n\tadd\t@CPI0_85[0], r0, r2\n\tand\tr1, r2, r1\n\tor\t256, r1, r1\n\tsstore\tr3, r1\n\tadd\tstack-[6], r0, r1\n.BB0_170:\n\tsstore\tr0, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_672:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_88[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tjump\t@.BB0_353\n.BB0_481:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_112[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t23, r0, r3\n\tjump\t@.BB0_353\n.BB0_216:\n\tadd\t11, r0, stack-[5]\n\tadd\t32784, r0, stack-[4]\n\tadd\tr0, r0, stack-[14]\n\tjump\t@.BB0_228\n.BB0_248:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[12], r0, r4\n.BB0_217:\n\tsstore\tr4, r1\n\tadd\t1, r4, r1\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r2\n\tadd\t1, r2, stack-[14]\n\tld.1\tr5, r1\n\tsub!\tstack-[14], r1, r1\n\tjump.ge\t@.BB0_218\n.BB0_228:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\tstack-[14], r2, r2\n\tjump.le\t@.BB0_108\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_118[0], r4, r2\n\tjump.gt\t@.BB0_85\n\tadd\tstack-[14], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tstack-[7], r2, r2\n\tld.1\tr2, r2\n\tadd\t64, r4, r3\n\tst.1\t64, r3\n\tst.1.inc\tr4, r2, r2\n\tadd\tr2, r0, stack-[10]\n\tst.1\tr2, r0\n\tsload\tr1, r3\n\tsub.s!\t@CPI0_102[0], r3, r2\n\tjump.gt\t@.BB0_85\n\tadd\tr4, r0, stack-[12]\n\tadd\tr3, r0, stack-[11]\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r5\n\tld.1.inc\tr5, r6, r7\n\tsub.s!\t@CPI0_102[0], r6, r2\n\tadd\tstack-[11], r0, r2\n\tjump.gt\t@.BB0_85\n\tshl.s\t1, r2, r2\n\tadd\tr1, r2, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_235\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[12]\n\tadd\tr6, r0, stack-[9]\n\tadd\tr5, r0, stack-[8]\n\tjump.lt\t@.BB0_240\n\tadd\tr3, r0, stack-[3]\n\tadd\tr7, r0, stack-[11]\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[3], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[12], r0, r4\n\tadd\tstack-[11], r0, r7\n\tjump.ge\t@.BB0_240\n.BB0_241:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_241\n.BB0_240:\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB0_249\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r6\n\tand!\tstack-[15], r6, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r7\n\tjump.eq\t@.BB0_246\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_245:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_245\n.BB0_246:\n\tsub!\tr3, r6, r3\n\tadd\tstack-[13], r0, r5\n\tjump.ge\t@.BB0_248\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_248\n.BB0_249:\n\tsub!\tr6, r0, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r5\n\tjump.eq\t@.BB0_251\n\tld.1\tr7, r1\n.BB0_251:\n\tshl.s\t3, r6, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r6, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_217\n.BB0_483:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_113[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_114[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t44, r0, r3\n\tjump\t@.BB0_269\n.BB0_222:\n\tadd\tr0, r0, r4\n\tadd\tr3, r0, r5\n\tjump\t@.BB0_223\n.BB0_226:\n\tadd\t31, r7, r8\n\tand\tstack-[15], r8, r8\n\tadd\tr7, r6, r7\n\tst.1\tr7, r0\n\tadd\tr8, r6, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r7\n\tjump.ge\t@.BB0_227\n.BB0_223:\n\tsub\tr6, r3, r7\n\tst.1.inc\tr5, r7, r5\n\tadd\t32, r12, r12\n\tld.1\tr12, r8\n\tld.1\tr8, r7\n\tst.1.inc\tr6, r7, r6\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB0_226\n\tadd\tr0, r0, r9\n.BB0_225:\n\tadd\tr9, r6, r10\n\tadd\t32, r9, r9\n\tadd\tr9, r8, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB0_225\n\tjump\t@.BB0_226\n.BB0_490:\n\tadd\t11, r0, stack-[5]\n\tadd\t32784, r0, stack-[4]\n\tadd\tr0, r0, stack-[14]\n\tjump\t@.BB0_502\n.BB0_521:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[13], r0, r4\n.BB0_491:\n\tsstore\tr4, r1\n\tadd\t1, r4, r1\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r2\n\tadd\t1, r2, stack-[14]\n\tld.1\tr5, r1\n\tsub!\tstack-[14], r1, r1\n\tjump.ge\t@.BB0_492\n.BB0_502:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\tstack-[14], r2, r2\n\tjump.le\t@.BB0_108\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_118[0], r4, r2\n\tjump.gt\t@.BB0_85\n\tadd\tstack-[14], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tstack-[7], r2, r2\n\tld.1\tr2, r2\n\tadd\t64, r4, r3\n\tst.1\t64, r3\n\tst.1.inc\tr4, r2, r2\n\tadd\tr2, r0, stack-[10]\n\tst.1\tr2, r0\n\tsload\tr1, r3\n\tsub.s!\t@CPI0_102[0], r3, r2\n\tjump.gt\t@.BB0_85\n\tadd\tr4, r0, stack-[13]\n\tadd\tr3, r0, stack-[11]\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r5\n\tld.1.inc\tr5, r6, r7\n\tsub.s!\t@CPI0_102[0], r6, r2\n\tadd\tstack-[11], r0, r2\n\tjump.gt\t@.BB0_85\n\tshl.s\t1, r2, r2\n\tadd\tr1, r2, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_235\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[13]\n\tadd\tr6, r0, stack-[9]\n\tadd\tr5, r0, stack-[8]\n\tjump.lt\t@.BB0_513\n\tadd\tr3, r0, stack-[3]\n\tadd\tr7, r0, stack-[11]\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[3], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[13], r0, r4\n\tadd\tstack-[11], r0, r7\n\tjump.ge\t@.BB0_513\n.BB0_514:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_514\n.BB0_513:\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB0_522\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r6\n\tand!\tstack-[15], r6, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r7\n\tjump.eq\t@.BB0_519\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_518:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_518\n.BB0_519:\n\tsub!\tr3, r6, r3\n\tadd\tstack-[12], r0, r5\n\tjump.ge\t@.BB0_521\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_521\n.BB0_522:\n\tsub!\tr6, r0, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[12], r0, r5\n\tjump.eq\t@.BB0_524\n\tld.1\tr7, r1\n.BB0_524:\n\tshl.s\t3, r6, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r6, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_491\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_108:\n\tadd\t@CPI0_143[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tjump\t@.BB0_86\n.BB0_235:\n\tadd\t@CPI0_143[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_86\n.BB0_496:\n\tadd\tr0, r0, r4\n\tadd\tr3, r0, r5\n\tjump\t@.BB0_497\n.BB0_500:\n\tadd\t31, r7, r8\n\tand\tstack-[15], r8, r8\n\tadd\tr7, r6, r7\n\tst.1\tr7, r0\n\tadd\tr8, r6, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r7\n\tjump.ge\t@.BB0_501\n.BB0_497:\n\tsub\tr6, r3, r7\n\tst.1.inc\tr5, r7, r5\n\tadd\t32, r12, r12\n\tld.1\tr12, r8\n\tld.1\tr8, r7\n\tst.1.inc\tr6, r7, r6\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB0_500\n\tadd\tr0, r0, r9\n.BB0_499:\n\tadd\tr9, r6, r10\n\tadd\t32, r9, r9\n\tadd\tr9, r8, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB0_499\n\tjump\t@.BB0_500\n.func_end0:\n\nstorage_array_index_access_struct_Proposal__dyn:\n.func_begin1:\n\tadd\t10, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB1_1\n\tst.1\t0, r2\n\tmul\t5, r1, r1, r2\n\tadd\t@CPI1_2[0], r1, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin2:\n\tnop\tstack+=[3]\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r6\n\tadd.ne\tr4, r0, r6\n\tsub.s!\t31, r6, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\t1, r4, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB2_1\n\tld.1\t64, r5\n\tst.1.inc\tr5, r6, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB2_8\n\tadd\tr4, r0, stack-[1]\n\tadd\tr6, r0, stack-[2]\n\tadd\tr5, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_10\n\tadd\tstack-[2], r0, r6\n\tsub!\tr6, r0, r2\n\tadd\tr0, r0, r2\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[1], r0, r7\n\tjump.eq\t@.BB2_4\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB2_13:\n\tadd\tr7, r2, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub!\tr2, r6, r3\n\tjump.lt\t@.BB2_13\n\tjump\t@.BB2_4\n.BB2_8:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\tr4, r1\n\tsub!\tr6, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n.BB2_4:\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_2[0], r1, r3\n\tjump.gt\t@.BB2_6\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_6\n\tst.1\t64, r1\n\tadd\tr5, r0, r1\n\tret\n.BB2_1:\n\tadd\t@CPI2_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB2_2\n.BB2_6:\n\tadd\t@CPI2_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB2_2:\n\tst.1\t4, r1\n\tadd\t@CPI2_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_10:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_string:\n.func_begin3:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB3_3\n\tadd\tr0, r0, r4\n.BB3_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_2\n.BB3_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end3:\n\nabi_encode_array_uint256_dyn:\n.func_begin4:\n\tadd\tr1, r0, r3\n\tld.1\tr3, r4\n\tst.1.inc\tr2, r4, r1\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB4_3\n\tadd\tr0, r0, r2\n.BB4_2:\n\tadd\t32, r3, r3\n\tld.1\tr3, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB4_2\n.BB4_3:\n\tret\n.func_end4:\n\nstorage_array_index_access_struct_VoteRecord__dyn:\n.func_begin5:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB5_1\n\tst.1\t0, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_3\n\tadd\tstack-[1], r0, r2\n\tmul\t3, r2, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tret\n.BB5_1:\n\tadd\t@CPI5_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nstorage_array_index_access_address_dyn:\n.func_begin6:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB6_1\n\tst.1\t0, r1\n\tadd\t@CPI6_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_3\n\tld\tr1, r1\n\tadd\tstack-[1], r1, r1\n\tadd\tr0, r0, r2\n\tret\n.BB6_1:\n\tadd\t@CPI6_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nstorage_array_index_access_struct_Option__dyn:\n.func_begin7:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB7_1\n\tst.1\t0, r1\n\tadd\t@CPI7_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_3\n\tadd\tstack-[1], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tret\n.BB7_1:\n\tadd\t@CPI7_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\narray_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr:\n.func_begin8:\n\tnop\tstack+=[7]\n\tadd\tr1, r0, r5\n\tadd\t10, r0, r2\n\tsload\tr2, r1\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tjump.ge\t@.BB8_1\n\tadd\t1, r1, r3\n\tsstore\tr2, r3\n\tst.1\t0, r2\n\tld.1.inc\tr5, r2, r3\n\tand\t@CPI8_1[0], r2, r2\n\tmul\t5, r1, r6, r1\n\tadd\t@CPI8_2[0], r6, r1\n\tsload\tr1, r4\n\tand\t@CPI8_3[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI8_4[0], r6, r4\n\tld.1\tr3, r3\n\tld.1.inc\tr3, r7, r8\n\tsub.s!\t@CPI8_5[0], r7, r1\n\tjump.gt\t@.BB8_1\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r9\n\tadd.ne\tr1, r0, r9\n\tsub.s!\t31, r9, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB8_5\n\tadd\tr3, r0, stack-[3]\n\tsub.s!\t32, r9, r1\n\tadd\tr5, r0, stack-[7]\n\tadd\tr6, r0, stack-[6]\n\tadd\tr4, r0, stack-[5]\n\tadd\tr7, r0, stack-[4]\n\tjump.lt\t@.BB8_11\n\tadd\tr9, r0, stack-[1]\n\tadd\tr8, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI8_6[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_8\n\tadd\tstack-[4], r0, r7\n\tadd\t31, r7, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r7, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r8\n\tjump.ge\t@.BB8_11\n.BB8_12:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB8_12\n.BB8_11:\n\tsub.s!\t31, r7, r1\n\tjump.le\t@.BB8_21\n\tst.1\t0, r4\n\tadd\t@CPI8_6[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_8\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r7\n\tand!\tr7, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[3], r0, r8\n\tjump.eq\t@.BB8_18\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB8_17:\n\tadd\tr2, r8, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB8_17\n.BB8_18:\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB8_20\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r8, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB8_20:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB8_13\n.BB8_21:\n\tsub!\tr7, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB8_23\n\tld.1\tr8, r1\n.BB8_23:\n\tshl.s\t3, r7, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r7, r2\n\tor\tr1, r2, r1\n.BB8_13:\n\tsstore\tr4, r1\n\tadd\t64, r5, r1\n\tld.1\tr1, r1\n\tadd\t@CPI8_8[0], r6, r2\n\tsstore\tr2, r1\n\tadd\t160, r5, r1\n\tld.1\tr1, r1\n\tadd\t@CPI8_9[0], r0, r2\n\tsub!\tr1, r0, r1\n\tadd.eq\tr0, r0, r2\n\tadd\t96, r5, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\t@CPI8_10[0], r6, r1\n\tsload\tr1, r3\n\tand\t@CPI8_11[0], r3, r3\n\tor.ne\t1, r3, r3\n\tadd\t128, r5, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r4\n\tor.ne\t256, r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI8_12[0], r6, r1\n\tadd\t192, r5, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tret\n.BB8_1:\n\tadd\t@CPI8_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tjump\t@.BB8_2\n.BB8_5:\n\tadd\t@CPI8_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n.BB8_2:\n\tst.1\t4, r1\n\tadd\t@CPI8_14[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nfun_getAvailableWithdrawBalance:\n.func_begin9:\n\tnop\tstack+=[2]\n\tand\t@CPI9_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t14, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_1[0], r1, r2\n\tadd.ge\t@CPI9_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t13, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[1], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB9_5\n\tsub\tstack-[2], r1, r1\n\tsub.s!\tstack-[2], r1, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\tsub!\tr2, r0, r2\n\tadd.ne\tr0, r0, r1\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_5:\n\tadd\t@CPI9_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nfun_deactivateProposal:\n.func_begin10:\n\tnop\tstack+=[3]\n\tadd\t10, r0, r3\n\tsload\tr3, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB10_1\n\tst.1\t0, r3\n\tadd\tr1, r0, stack-[1]\n\tmul\t5, r1, r2, r1\n\tadd\tr2, r0, stack-[2]\n\tadd\t@CPI10_2[0], r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI10_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI10_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI10_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_3\n\tadd\tstack-[2], r0, r2\n\tadd\t@CPI10_6[0], r2, r2\n\tsload\tr2, r3\n\tld\tr1, r1\n\tsub.s!\tstack-[3], r1, r1\n\tjump.gt\t@.BB10_6\n\tand!\t255, r3, r1\n\tjump.eq\t@.BB10_7\n.BB10_6:\n\tsub.s\t256, r0, r1\n\tand\tr3, r1, r1\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\tstack-[1], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t@CPI10_4[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI10_4[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI10_4[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI10_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI10_8[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB10_8\n.BB10_7:\n\tret\n.BB10_1:\n\tadd\t@CPI10_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_3:\n\trevert\n.BB10_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin11:\n\tadd\t@CPI12_0[0], r0, r3\n\tsub.s!\t@CPI12_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI12_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_2\n\tld\tr1, r1\n\tret\n.BB12_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\n__farcall:\n.func_begin12:\n.tmp0:\n\tfar_call\tr1, r2, @.BB13_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB13_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end12:\n\n__staticcall:\n.func_begin13:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB14_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB14_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end13:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_0:\nCPI5_2:\nCPI6_2:\nCPI7_2:\nCPI8_6:\nCPI9_1:\nCPI10_4:\nCPI12_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\nCPI8_1:\nCPI9_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell 374144419156711147060143317175368453031918731001600\nCPI0_4:\n\t.cell -374144419156711147060143317175368453031918731001856\nCPI0_5:\nCPI12_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_6:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_7:\nCPI8_3:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_8:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_9:\n\t.cell 2220280664\nCPI0_10:\n\t.cell 3152796964\nCPI0_11:\n\t.cell 3803331015\nCPI0_12:\n\t.cell 4076725130\nCPI0_13:\n\t.cell 4076725131\nCPI0_14:\n\t.cell 4103518880\nCPI0_15:\n\t.cell 4262470253\nCPI0_16:\n\t.cell 3803331016\nCPI0_17:\n\t.cell 3980728009\nCPI0_18:\n\t.cell 3986733060\nCPI0_19:\n\t.cell 3713797537\nCPI0_20:\n\t.cell 3713797538\nCPI0_21:\n\t.cell 3747854993\nCPI0_22:\n\t.cell 3778771761\nCPI0_23:\n\t.cell 3152796965\nCPI0_24:\n\t.cell 3170649129\nCPI0_25:\n\t.cell 3427623749\nCPI0_26:\n\t.cell 2757855404\nCPI0_27:\n\t.cell 2877899643\nCPI0_28:\n\t.cell 2877899644\nCPI0_29:\n\t.cell 3065339685\nCPI0_30:\n\t.cell 3103586615\nCPI0_31:\n\t.cell 2757855405\nCPI0_32:\n\t.cell 2839235489\nCPI0_33:\n\t.cell 2847684369\nCPI0_34:\n\t.cell 2376452954\nCPI0_35:\n\t.cell 2376452955\nCPI0_36:\n\t.cell 2640809377\nCPI0_37:\n\t.cell 2723122133\nCPI0_38:\n\t.cell 2220280665\nCPI0_39:\n\t.cell 2321962454\nCPI0_40:\n\t.cell 1061922873\nCPI0_41:\n\t.cell 1544768869\nCPI0_42:\n\t.cell 1811892197\nCPI0_43:\n\t.cell 1811892198\nCPI0_44:\n\t.cell 1872738698\nCPI0_45:\n\t.cell 1901074598\nCPI0_46:\n\t.cell 1544768870\nCPI0_47:\n\t.cell 1553423035\nCPI0_48:\n\t.cell 1676256797\nCPI0_49:\n\t.cell 1155179046\nCPI0_50:\n\t.cell 1155179047\nCPI0_51:\n\t.cell 1222874531\nCPI0_52:\n\t.cell 1366975063\nCPI0_53:\n\t.cell 1061922874\nCPI0_54:\n\t.cell 1075336119\nCPI0_55:\n\t.cell 1153943655\nCPI0_56:\n\t.cell 669136354\nCPI0_57:\n\t.cell 844599673\nCPI0_58:\n\t.cell 844599674\nCPI0_59:\n\t.cell 977132945\nCPI0_60:\n\t.cell 1009498384\nCPI0_61:\n\t.cell 669136355\nCPI0_62:\n\t.cell 773487949\nCPI0_63:\n\t.cell 793533407\nCPI0_64:\n\t.cell 267895972\nCPI0_65:\n\t.cell 267895973\nCPI0_66:\n\t.cell 423634831\nCPI0_67:\n\t.cell 602814139\nCPI0_68:\n\t.cell 20770955\nCPI0_69:\n\t.cell 253181954\nCPI0_70:\n\t.cell 2535301202817642044428229017600\nCPI0_71:\n\t.cell -374144419156711147060143317175368453031918731001601\nCPI0_72:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_73:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_74:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_75:\n\t.cell 10458117454244075803782624051200\nCPI0_76:\nCPI9_2:\nCPI10_7:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_77:\n\t.cell 2535301200456458802993406410752\nCPI0_78:\n\t.cell 12396694973890998440467380340983585058878106250672390494374587083972727727730\nCPI0_79:\nCPI8_10:\nCPI10_6:\n\t.cell -26074275084009875412389268311263347690013120251023914000470397511746302913877\nCPI0_80:\n\t.cell 36387217577141696539835725718333351628711840515630656354712003733776015517044\nCPI0_81:\n\t.cell 52659807869801627832262510997813479345293585015266786474190641726690624012288\nCPI0_82:\n\t.cell 37268929072347479319882973977646622039547198692478371896653154821649582784512\nCPI0_83:\n\t.cell 7922816253787617000789217640448\nCPI0_84:\nCPI2_1:\nCPI5_3:\nCPI6_3:\nCPI7_3:\nCPI8_7:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_85:\n\t.cell -65281\nCPI0_86:\n\t.cell 904625697166532776746648320380374280103671762806220507927638784042040557568\nCPI0_87:\n\t.cell 9320874622402338414002265186837945751613745187773596752754247302760547834106\nCPI0_88:\n\t.cell 35477323689661671948852797192714902841531780316315243652547593457851088270080\nCPI0_89:\n\t.cell 7922816251426433759354395033600\nCPI0_90:\n\t.cell 35476746262579530006295505699313365636224236574709885331482285976688160407552\nCPI0_91:\nCPI1_2:\nCPI8_2:\n\t.cell -26074275084009875412389268311263347690013120251023914000470397511746302913880\nCPI0_92:\nCPI8_12:\nCPI10_2:\n\t.cell -26074275084009875412389268311263347690013120251023914000470397511746302913876\nCPI0_93:\nCPI10_3:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_94:\nCPI10_5:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_95:\nCPI10_8:\n\t.cell 47443033188551058709262449094704824964971970972350694975387646557955244442895\nCPI0_96:\nCPI8_8:\n\t.cell -26074275084009875412389268311263347690013120251023914000470397511746302913878\nCPI0_97:\n\t.cell 16711680\nCPI0_98:\n\t.cell -15448274557970599020342357832252787846699662468216016471202955423099222326424\nCPI0_99:\n\t.cell 37747593056685209803443802286123549407705676235929409745208007568515101884416\nCPI0_100:\n\t.cell -39994767581283235888763294866136160713765770987569152610075762752638452984405\nCPI0_101:\n\t.cell 604800\nCPI0_102:\nCPI2_2:\nCPI8_5:\n\t.cell 18446744073709551615\nCPI0_103:\n\t.cell -51985879905773483620722137737738627760414206467914438128783404424367696066558\nCPI0_104:\n\t.cell 42001972239423703571445541791532579481923828429046493072436209271122319847557\nCPI0_105:\n\t.cell 33213987989631693067883787898814815401940191597450698095377559960427851415552\nCPI0_106:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI0_107:\n\t.cell 20644549604082266639320257001935285394590065917650136896563126397825491550916\nCPI0_108:\n\t.cell 38196372293521921433411762994267191979435640421026993835185098046675554926592\nCPI0_109:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_110:\n\t.cell -18446744073709551616\nCPI0_111:\n\t.cell -18446744073709551488\nCPI0_112:\n\t.cell 52652740479751763535009941535404145553681129640394898682527796418059897405440\nCPI0_113:\n\t.cell 47687999144296217495830161024715922219131381522400987873099915989063997325312\nCPI0_114:\n\t.cell 37747593056713065993060345481711466832112961560299923234275860844699068625440\nCPI0_115:\n\t.cell 10458117451882892562347801444352\nCPI0_116:\n\t.cell 86400\nCPI0_117:\n\t.cell 18446744073709551391\nCPI0_118:\n\t.cell 18446744073709551551\nCPI0_119:\n\t.cell 43046854347972414666233719129860532032972524506159667244054853699877364001096\nCPI0_120:\n\t.cell 31814455593045371808710356632721295737477827034060732347023710796849866057672\nCPI0_121:\n\t.cell 31869382407624765961839443156653874141101739777257194269273696000328205336576\nCPI0_122:\n\t.cell 36387217577141696539835341724850825828704487447770704987832489809917434134528\nCPI0_123:\n\t.cell 38178729326672700412052026471650177188377947303277119371474230891316403765248\nCPI0_124:\n\t.cell 38178729326566573358854814593691048060526621130111590168150889920220215902208\nCPI0_125:\n\t.cell 18446744073709551519\nCPI0_126:\n\t.cell -27514650628698614327385758459027185577806530076164398494097370979218518502413\nCPI0_127:\n\t.cell 33213987989631693067883787898815262639149058089589072814951568724554042834944\nCPI0_128:\n\t.cell 38178729326672700412052026471650289017067364532791592966292656364482157608960\nCPI0_129:\n\t.cell 36357222666917036906347953728281423178299644588805297587650243726591593021440\nCPI0_130:\n\t.cell 904625697166532776746648320380374280103671757735618109375904419490050342912\nCPI0_131:\n\t.cell 44735773386423822371878160022978782686546674658776136549874639796174445716056\nCPI0_132:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI0_133:\n\t.cell 2852213852874699394802404818944\nCPI0_134:\n\t.cell 36387217577141696539834861424258368761420197673782181793414050108270671036416\nCPI0_135:\n\t.cell 35931405354438819285617658595495920097445416950975553418838194011793141006336\nCPI0_136:\n\t.cell 42393604518183400894871284368897910331008433330724914529002052670013337269162\nCPI0_137:\n\t.cell 36357222666917036906347953000446048792258106436816920891471815860108073631744\nCPI0_138:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_139:\n\t.cell 36387217577141696539834861424258368761420197673782181792565499880880031662080\nCPI0_140:\n\t.cell -46810854603813931284279719547692354877718708859355929094657425757567435996948\nCPI0_141:\n\t.cell 51742116292034985091846867309256368736007865920002501188591237604854370140160\nCPI0_142:\n\t.cell 35459675924252910267695075817124550818323914566957910899291147533420441465973\nCPI0_143:\nCPI1_0:\nCPI2_3:\nCPI5_0:\nCPI6_0:\nCPI7_0:\nCPI8_13:\nCPI9_3:\nCPI10_0:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_144:\nCPI1_1:\nCPI2_4:\nCPI5_1:\nCPI6_1:\nCPI7_1:\nCPI8_14:\nCPI9_4:\nCPI10_1:\n\t.cell 2852213850513516153367582212096\nCPI0_145:\n\t.cell 56312592190664100912731356203179382252082600906782201770774562929576851625736\nCPI0_146:\n\t.cell 372682917519380244141939632342652170012262798458880\nCPI0_147:\n\t.cell 10141204801825835211973625643008\nCPI0_148:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI0_149:\n\t.cell 5387515050969974956360988622848\nCPI0_150:\n\t.cell 38843706945183341624331870532237280948374425637807400008023894331521926152796\nCPI0_151:\n\t.cell 54011551340199394326802475052324827152176255806260853321975479828561184948224\nCPI0_152:\n\t.cell 35477323689661671948852797176678302992950977540387061004118189797849269825312\nCPI0_153:\n\t.cell 37268805191608899176760263720700790282416321829889089033725955971341467020288\nCPI0_154:\n\t.cell 7605903601369376408980219232256\nCPI0_155:\nCPI8_0:\n\t.cell 18446744073709551616\nCPI0_156:\nCPI8_4:\n\t.cell -26074275084009875412389268311263347690013120251023914000470397511746302913879\nCPI8_9:\n\t.cell 65536\nCPI8_11:\n\t.cell -16777216\n","bytecode":{"object":""},"methodIdentifiers":{"UserSstakeAmounts(uint256)":"ed4516c9","UserStakerAddresses(uint256)":"48e395a3","added_proposal(address,uint256)":"44daa227","balances(address)":"27e235e3","checkQualityComplianceBelowExpectations(uint256)":"df63ba91","createProposalWithOptions(string,string[],uint256,uint256)":"3257917a","deactivateProposal(uint256)":"6bff47e6","deposit(uint256)":"b6b55f25","getAvailableWithdrawBalance(address)":"bcfc4429","getContractBalance()":"6f9fb98a","getCurrentProposalId()":"fe10226d","getOptionVoteCount(uint256,uint256)":"63e9a61d","getOptionsCount(uint256)":"517a6257","getProposalStatus(uint256)":"401853b7","getUserVotingHistory(address)":"0ff7c4a5","handleStakeRelease(address,uint256,bool)":"cc4d6345","myToken()":"b8fcf937","optionIdsByProposal(uint256,uint256)":"e2b239c8","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","processUserStakedProposal(address,string,uint256,string[],uint256,uint256)":"a46188ad","proposalOptions(uint256,uint256)":"a93b4ba1","proposalTokenDeposits(address)":"dd5c0da2","proposalVoters(uint256,uint256)":"ab89437c","proposals(uint256)":"013cf08b","proposalsLength()":"44c7c867","renounceOwnership()":"715018a6","setProposalEndTime(uint256,uint256)":"3c2bb910","settleFundsForAverageQuality(uint256)":"9d678da1","settleRewards(uint256,uint256)":"e13b7b31","stakesForUser(address,uint256)":"2f4c5bdf","submitProposalForReview(uint256)":"bbebdd25","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","usedVotingRights(address)":"1940278f","userVotingHistory(address,uint256)":"23ee36bb","verifyComplianceAndExpectations(uint256)":"a24f8bd5","vote(uint256,uint256,uint256)":"8a6655d6","voteCountsByProposal(uint256,uint256)":"a9bc3711","voterAddressesByProposal(uint256,uint256)":"eda0b804","voterIndexInProposal(address,uint256)":"f496baa0","voters(address,uint256)":"5c134d66","votingEndTimes(uint256)":"0f174002","votingRecords(address,uint256)":"3a3ddd91","withdraw(uint256)":"2e1a7d4d"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 7:\"@openzeppelin/contracts/security/Pausable.sol\", 8:\"@openzeppelin/contracts/security/ReentrancyGuard.sol\", 17:\"@openzeppelin/contracts/utils/Context.sol\", 28:\"contracts/SpenderContract.sol\"\nobject \"VotingContract_8249\" {\n    code {\n        {\n            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"VotingContract_8249\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n            let value := mload(_1)\n            let _2 := sub(shl(160, 1), 1)\n            let _3 := and(value, _2)\n            if iszero(eq(value, _3))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:1716:1717  \"1\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 8:1716:1717  \"1\" */ 0x01)\n            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n            let _4 := sload(/** @src 8:1716:1717  \"1\" */ 0x01)\n            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n            sstore(/** @src 8:1716:1717  \"1\" */ 0x01, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ or(and(_4, not(sub(shl(168, 1), 1))), and(shl(8, /** @src 17:734:744  \"msg.sender\" */ caller()), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sub(shl(168, 1), 256))))\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _5 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(64)\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(shr(8, _4), _2), /** @src 17:734:744  \"msg.sender\" */ caller())\n            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n            sstore(/** @src 28:1229:1247  \"myToken = _myToken\" */ 0x02, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ or(and(sload(/** @src 28:1229:1247  \"myToken = _myToken\" */ 0x02), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ not(sub(shl(160, 1), 1))), _3))\n            let _6 := datasize(\"VotingContract_8249_deployed\")\n            codecopy(_5, dataoffset(\"VotingContract_8249_deployed\"), _6)\n            return(_5, _6)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 7:\"@openzeppelin/contracts/security/Pausable.sol\", 8:\"@openzeppelin/contracts/security/ReentrancyGuard.sol\", 17:\"@openzeppelin/contracts/utils/Context.sol\", 18:\"@openzeppelin/contracts/utils/Counters.sol\", 28:\"contracts/SpenderContract.sol\"\n    object \"VotingContract_8249_deployed\" {\n        code {\n            {\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x013cf08b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value := calldataload(_2)\n                        /// @src 28:4287:4314  \"Proposal[] public proposals\"\n                        if iszero(lt(value, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:4287:4314  \"Proposal[] public proposals\" */ 10)))\n                        {\n                            revert(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3, _3)\n                        }\n                        mstore(_3, /** @src 28:4287:4314  \"Proposal[] public proposals\" */ 10)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _4 := mul(value, 5)\n                        let value_1 := and(sload(add(89717814153306320011181716697424560163256864414616650038987186496166826726056, _4)), sub(shl(160, 1), 1))\n                        /// @src 28:4287:4314  \"Proposal[] public proposals\"\n                        let ret_mpos := copy_array_from_storage_to_memory_string(add(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _4, /** @src 28:4287:4314  \"Proposal[] public proposals\" */ 0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a9))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _5 := sload(/** @src 28:4287:4314  \"Proposal[] public proposals\" */ add(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _4, /** @src 28:4287:4314  \"Proposal[] public proposals\" */ 0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _6 := sload(/** @src 28:4287:4314  \"Proposal[] public proposals\" */ add(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _4, /** @src 28:4287:4314  \"Proposal[] public proposals\" */ 0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ab))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _7 := sload(/** @src 28:4287:4314  \"Proposal[] public proposals\" */ add(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _4, /** @src 28:4287:4314  \"Proposal[] public proposals\" */ 0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ac))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let memPos := mload(_1)\n                        mstore(memPos, value_1)\n                        mstore(add(memPos, 32), 224)\n                        let tail := abi_encode_string(ret_mpos, add(memPos, 224))\n                        mstore(add(memPos, _1), _5)\n                        mstore(add(memPos, 96), iszero(iszero(and(_6, 0xff))))\n                        mstore(add(memPos, 128), iszero(iszero(and(shr(8, _6), 0xff))))\n                        mstore(add(memPos, 160), iszero(iszero(and(shr(16, _6), 0xff))))\n                        mstore(add(memPos, 192), _7)\n                        return(memPos, sub(tail, memPos))\n                    }\n                    case 0x0f174002 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, calldataload(_2))\n                        mstore(32, /** @src 28:3030:3079  \"mapping(uint256 => uint256) public votingEndTimes\" */ 5)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _8 := sload(keccak256(_3, _1))\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, _8)\n                        return(memPos_1, 32)\n                    }\n                    case 0x0ff7c4a5 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 28:13318:13335  \"userVotingHistory\" */ 0x08)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot := keccak256(_3, _1)\n                        let _9 := sload(/** @src 28:13381:13395  \"records.length\" */ dataSlot)\n                        /// @src 28:13353:13396  \"proposalIds = new uint256[](records.length)\"\n                        let var_proposalIds_mpos := /** @src 28:13367:13396  \"new uint256[](records.length)\" */ allocate_and_zero_memory_array_array_uint256_dyn(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _9)\n                        /// @src 28:13407:13448  \"optionIds = new uint256[](records.length)\"\n                        let var_optionIds_mpos := /** @src 28:13419:13448  \"new uint256[](records.length)\" */ allocate_and_zero_memory_array_array_uint256_dyn(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _9)\n                        /// @src 28:13459:13498  \"amounts = new uint256[](records.length)\"\n                        let var_amounts_mpos := /** @src 28:13469:13498  \"new uint256[](records.length)\" */ allocate_and_zero_memory_array_array_uint256_dyn(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _9)\n                        /// @src 28:13516:13529  \"uint256 i = 0\"\n                        let var_i := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                        /// @src 28:13511:13715  \"for (uint256 i = 0; i < records.length; i++) {...\"\n                        for { }\n                        /** @src 28:13531:13549  \"i < records.length\" */ lt(var_i, _9)\n                        /// @src 28:13516:13529  \"uint256 i = 0\"\n                        {\n                            /// @src 28:13551:13554  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 28:13588:13598  \"records[i]\"\n                            let _10, _11 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot, var_i)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            mstore(/** @src 28:13571:13609  \"proposalIds[i] = records[i].proposalId\" */ memory_array_index_access_string_dyn(var_proposalIds_mpos, var_i), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:13588:13609  \"records[i].proposalId\" */ _10))\n                            /// @src 28:13639:13649  \"records[i]\"\n                            let _12, _13 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot, var_i)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            mstore(/** @src 28:13624:13658  \"optionIds[i] = records[i].optionId\" */ memory_array_index_access_string_dyn(var_optionIds_mpos, var_i), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:13639:13658  \"records[i].optionId\" */ add(_12, 1)))\n                            /// @src 28:13686:13696  \"records[i]\"\n                            let _14, _15 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot, var_i)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            mstore(/** @src 28:13673:13703  \"amounts[i] = records[i].amount\" */ memory_array_index_access_string_dyn(var_amounts_mpos, var_i), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:13686:13703  \"records[i].amount\" */ add(_14, 2)))\n                        }\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, 96)\n                        let tail_1 := abi_encode_array_uint256_dyn(var_proposalIds_mpos, add(memPos_2, 96))\n                        mstore(add(memPos_2, 32), sub(tail_1, memPos_2))\n                        let tail_2 := abi_encode_array_uint256_dyn(var_optionIds_mpos, tail_1)\n                        mstore(add(memPos_2, _1), sub(tail_2, memPos_2))\n                        return(memPos_2, sub(abi_encode_array_uint256_dyn(var_amounts_mpos, tail_2), memPos_2))\n                    }\n                    case 0x1940278f {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 28:4561:4612  \"mapping(address => uint256) public usedVotingRights\" */ 14)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _16 := sload(keccak256(_3, _1))\n                        let memPos_3 := mload(_1)\n                        mstore(memPos_3, _16)\n                        return(memPos_3, 32)\n                    }\n                    case 0x23ee36bb {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0 := abi_decode_address()\n                        let value_2 := calldataload(36)\n                        mstore(_3, and(value0, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 28:4128:4185  \"mapping(address => VoteRecord[]) public userVotingHistory\" */ 8)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_1 := keccak256(_3, _1)\n                        /// @src 28:4128:4185  \"mapping(address => VoteRecord[]) public userVotingHistory\"\n                        if iszero(lt(value_2, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:4128:4185  \"mapping(address => VoteRecord[]) public userVotingHistory\" */ dataSlot_1)))\n                        {\n                            revert(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3, _3)\n                        }\n                        /// @src 28:4128:4185  \"mapping(address => VoteRecord[]) public userVotingHistory\"\n                        let slot, offset := storage_array_index_access_struct_VoteRecord__dyn(dataSlot_1, value_2)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _17 := sload(/** @src 28:4128:4185  \"mapping(address => VoteRecord[]) public userVotingHistory\" */ slot)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _18 := sload(/** @src 28:4128:4185  \"mapping(address => VoteRecord[]) public userVotingHistory\" */ add(slot, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 1))\n                        let _19 := sload(/** @src 28:4128:4185  \"mapping(address => VoteRecord[]) public userVotingHistory\" */ add(slot, 2))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let memPos_4 := mload(_1)\n                        mstore(memPos_4, _17)\n                        mstore(add(memPos_4, 32), _18)\n                        mstore(add(memPos_4, _1), _19)\n                        return(memPos_4, 96)\n                    }\n                    case 0x27e235e3 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 28:3109:3152  \"mapping(address => uint256) public balances\" */ 6)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _20 := sload(keccak256(_3, _1))\n                        let memPos_5 := mload(_1)\n                        mstore(memPos_5, _20)\n                        return(memPos_5, 32)\n                    }\n                    case 0x2e1a7d4d {\n                        if callvalue() { revert(_3, _3) }\n                        let _21 := 32\n                        if slt(add(calldatasize(), not(3)), _21) { revert(_3, _3) }\n                        let value_3 := calldataload(_2)\n                        /// @src 8:2227:2330  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if /** @src 28:9683:9710  \"availableBalance >= _amount\" */ lt(/** @src 28:9625:9664  \"getAvailableWithdrawBalance(msg.sender)\" */ fun_getAvailableWithdrawBalance(/** @src 28:9653:9663  \"msg.sender\" */ caller()), /** @src 28:9683:9710  \"availableBalance >= _amount\" */ value_3)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        {\n                            let memPtr := mload(_1)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, _2), _21)\n                            mstore(add(memPtr, 36), 40)\n                            mstore(add(memPtr, 68), \"Not enough available balance to \")\n                            mstore(add(memPtr, 100), \"withdraw\")\n                            revert(memPtr, 132)\n                        }\n                        let value_4 := and(sload(/** @src 28:9826:9833  \"myToken\" */ 0x02), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sub(shl(160, 1), 1))\n                        /// @src 28:9819:9864  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        let _22 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        /// @src 28:9819:9864  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        mstore(_22, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ shl(224, 0xa9059cbb))\n                        mstore(/** @src 28:9819:9864  \"IERC20(myToken).transfer(msg.sender, _amount)\" */ add(_22, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _2), /** @src 28:9653:9663  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(add(/** @src 28:9819:9864  \"IERC20(myToken).transfer(msg.sender, _amount)\" */ _22, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 36), value_3)\n                        /// @src 28:9819:9864  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        let _23 := call(gas(), value_4, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3, /** @src 28:9819:9864  \"IERC20(myToken).transfer(msg.sender, _amount)\" */ _22, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 68, /** @src 28:9819:9864  \"IERC20(myToken).transfer(msg.sender, _amount)\" */ _22, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _21)\n                        /// @src 28:9819:9864  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        if iszero(_23)\n                        {\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let pos := mload(_1)\n                            returndatacopy(pos, _3, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 28:9819:9864  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        let expr := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                        /// @src 28:9819:9864  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                        if _23\n                        {\n                            let _24 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _21\n                            /// @src 28:9819:9864  \"IERC20(myToken).transfer(msg.sender, _amount)\"\n                            if gt(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _21, /** @src 28:9819:9864  \"IERC20(myToken).transfer(msg.sender, _amount)\" */ returndatasize()) { _24 := returndatasize() }\n                            finalize_allocation(_22, _24)\n                            expr := abi_decode_bool_fromMemory(_22, add(_22, _24))\n                        }\n                        /// @src 28:9811:9884  \"require(IERC20(myToken).transfer(msg.sender, _amount), \\\"Transfer failed\\\")\"\n                        require_helper_stringliteral_25ad(expr)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_3, /** @src 28:9653:9663  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_21, /** @src 28:9945:9953  \"balances\" */ 0x06)\n                        /// @src 28:9945:9975  \"balances[msg.sender] - _amount\"\n                        let _25 := checked_sub_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(keccak256(_3, _1)), /** @src 28:9945:9975  \"balances[msg.sender] - _amount\" */ value_3)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_3, /** @src 28:9653:9663  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_21, /** @src 28:9945:9953  \"balances\" */ 0x06)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        sstore(keccak256(_3, _1), _25)\n                        let _26 := sload(keccak256(_3, _1))\n                        /// @src 28:10024:10085  \"WithdrawalDetailed(msg.sender, _amount, balances[msg.sender])\"\n                        let _27 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        mstore(_27, value_3)\n                        mstore(add(_27, _21), _26)\n                        /// @src 28:10024:10085  \"WithdrawalDetailed(msg.sender, _amount, balances[msg.sender])\"\n                        log2(_27, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _1, /** @src 28:10024:10085  \"WithdrawalDetailed(msg.sender, _amount, balances[msg.sender])\" */ 0x55e0c24f2a6dc742ae33c30061a9ff6c9ae57eabdfdbf696a8a1f0410ad3c25c, /** @src 28:9653:9663  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        sstore(_3, 1)\n                        return(_3, _3)\n                    }\n                    case 0x2f4c5bdf {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_1 := abi_decode_address()\n                        let value_5 := calldataload(36)\n                        let _28 := sub(shl(160, 1), 1)\n                        mstore(_3, and(value0_1, _28))\n                        mstore(32, /** @src 28:4232:4280  \"mapping(address => Stake[]) public stakesForUser\" */ 9)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_2 := keccak256(_3, _1)\n                        /// @src 28:4232:4280  \"mapping(address => Stake[]) public stakesForUser\"\n                        if iszero(lt(value_5, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:4232:4280  \"mapping(address => Stake[]) public stakesForUser\" */ dataSlot_2)))\n                        {\n                            revert(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3, _3)\n                        }\n                        /// @src 28:4232:4280  \"mapping(address => Stake[]) public stakesForUser\"\n                        let slot_1, offset_1 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot_2, value_5)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _29 := sload(/** @src 28:4232:4280  \"mapping(address => Stake[]) public stakesForUser\" */ slot_1)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _30 := sload(/** @src 28:4232:4280  \"mapping(address => Stake[]) public stakesForUser\" */ add(slot_1, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 1))\n                        let _31 := sload(/** @src 28:4232:4280  \"mapping(address => Stake[]) public stakesForUser\" */ add(slot_1, 2))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let memPos_6 := mload(_1)\n                        mstore(memPos_6, _29)\n                        mstore(add(memPos_6, 32), _30)\n                        mstore(add(memPos_6, _1), and(_31, _28))\n                        mstore(add(memPos_6, 96), iszero(iszero(and(shr(160, _31), 0xff))))\n                        return(memPos_6, 128)\n                    }\n                    case 0x3257917a {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_3, _3) }\n                        let offset_2 := calldataload(_2)\n                        let _32 := 0xffffffffffffffff\n                        if gt(offset_2, _32) { revert(_3, _3) }\n                        let value0_2 := abi_decode_string(add(_2, offset_2), calldatasize())\n                        let offset_3 := calldataload(36)\n                        if gt(offset_3, _32) { revert(_3, _3) }\n                        let value1 := abi_decode_array_string_dyn(add(_2, offset_3), calldatasize())\n                        let value_6 := calldataload(68)\n                        let value_7 := calldataload(100)\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _33 := sload(/** @src 28:6813:6825  \"_proposalIds\" */ 0x03)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _34 := 1\n                        sstore(/** @src 28:6813:6825  \"_proposalIds\" */ 0x03, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ add(_33, _34))\n                        /// @src 28:7015:7021  \"1 days\"\n                        let _35 := 0x015180\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let product := mul(value_7, /** @src 28:7015:7021  \"1 days\" */ _35)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if iszero(or(iszero(value_7), eq(/** @src 28:7015:7021  \"1 days\" */ _35, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ div(product, value_7))))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, 36)\n                        }\n                        /// @src 28:6986:7022  \"block.timestamp + (endtime * 1 days)\"\n                        let expr_1 := checked_add_uint256(/** @src 28:6986:7001  \"block.timestamp\" */ timestamp(), /** @src 28:7005:7021  \"endtime * 1 days\" */ product)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let memPtr_1 := mload(_1)\n                        finalize_allocation_38382(memPtr_1)\n                        mstore(memPtr_1, /** @src 28:7116:7126  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _36 := 32\n                        mstore(/** @src 28:7082:7346  \"Proposal({...\" */ add(memPtr_1, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _36), value0_2)\n                        mstore(/** @src 28:7082:7346  \"Proposal({...\" */ add(memPtr_1, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _1), value_6)\n                        mstore(/** @src 28:7082:7346  \"Proposal({...\" */ add(memPtr_1, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 96), _34)\n                        mstore(/** @src 28:7082:7346  \"Proposal({...\" */ add(memPtr_1, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 128), _3)\n                        mstore(/** @src 28:7082:7346  \"Proposal({...\" */ add(memPtr_1, 160), /** @src 28:6942:6952  \"amount > 0\" */ iszero(iszero(value_6)))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(/** @src 28:7082:7346  \"Proposal({...\" */ add(memPtr_1, 192), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ expr_1)\n                        /// @src 28:7067:7347  \"proposals.push(Proposal({...\"\n                        array_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr(memPtr_1)\n                        /// @src 28:7399:7409  \"uint i = 0\"\n                        let var_i_1 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                        /// @src 28:7394:7615  \"for (uint i = 0; i < optionDescriptions.length; i++) {...\"\n                        for { }\n                        /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _34\n                        /// @src 28:7399:7409  \"uint i = 0\"\n                        {\n                            /// @src 28:7442:7445  \"i++\"\n                            var_i_1 := increment_uint256(var_i_1)\n                        }\n                        {\n                            /// @src 28:7411:7440  \"i < optionDescriptions.length\"\n                            if iszero(lt(var_i_1, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(/** @src 28:7415:7440  \"optionDescriptions.length\" */ value1)))\n                            /// @src 28:7411:7440  \"i < optionDescriptions.length\"\n                            { break }\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            mstore(_3, _33)\n                            mstore(_36, /** @src 28:7462:7477  \"proposalOptions\" */ 0x0b)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let dataSlot_3 := keccak256(_3, _1)\n                            /// @src 28:7534:7555  \"optionDescriptions[i]\"\n                            let _mpos := mload(memory_array_index_access_string_dyn(value1, var_i_1))\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let memPtr_2 := mload(_1)\n                            finalize_allocation_38384(memPtr_2)\n                            mstore(memPtr_2, _mpos)\n                            mstore(/** @src 28:7495:7602  \"Option({...\" */ add(memPtr_2, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _36), _3)\n                            /// @src 28:7462:7603  \"proposalOptions[proposalId].push(Option({...\"\n                            array_push_from_struct_Option_to_array_struct_Option_storage_dyn_ptr(dataSlot_3, memPtr_2)\n                        }\n                        /// @src 28:7655:7747  \"ProposalAndOptionsSubmitted(msg.sender, proposalId, proposalDescription, optionDescriptions)\"\n                        let _37 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        mstore(_37, _1)\n                        let tail_3 := abi_encode_string(value0_2, add(_37, _1))\n                        mstore(add(_37, _36), sub(tail_3, _37))\n                        /// @src 28:7655:7747  \"ProposalAndOptionsSubmitted(msg.sender, proposalId, proposalDescription, optionDescriptions)\"\n                        log3(_37, sub(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ abi_encode_array_string_dyn(value1, tail_3), /** @src 28:7655:7747  \"ProposalAndOptionsSubmitted(msg.sender, proposalId, proposalDescription, optionDescriptions)\" */ _37), 0x7c7fcc3525cb8fda523bcb491b600327083e8ffa58842db2a3582e0204655708, /** @src 28:7116:7126  \"msg.sender\" */ caller(), /** @src 28:7655:7747  \"ProposalAndOptionsSubmitted(msg.sender, proposalId, proposalDescription, optionDescriptions)\" */ _33)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let memPos_7 := mload(_1)\n                        mstore(memPos_7, _33)\n                        return(memPos_7, _36)\n                    }\n                    case 0x3a3ddd91 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        mstore(_3, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 28:4735:4803  \"mapping(address => mapping(uint256 => uint256)) public votingRecords\" */ 17)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_4 := keccak256(_3, _1)\n                        mstore(_3, calldataload(36))\n                        mstore(32, dataSlot_4)\n                        let _38 := sload(keccak256(_3, _1))\n                        let memPos_8 := mload(_1)\n                        mstore(memPos_8, _38)\n                        return(memPos_8, 32)\n                    }\n                    case 0x3c2bb910 {\n                        if callvalue() { revert(_3, _3) }\n                        let param, param_1 := abi_decode_uint256t_uint256(calldatasize())\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if iszero(/** @src 28:10684:10714  \"_proposalId < proposals.length\" */ lt(param, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:10698:10707  \"proposals\" */ 0x0a)))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        {\n                            let memPtr_3 := mload(_1)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, _2), 32)\n                            mstore(add(memPtr_3, 36), 23)\n                            mstore(add(memPtr_3, 68), \"Proposal does not exist\")\n                            revert(memPtr_3, 100)\n                        }\n                        if /** @src 28:10761:10791  \"_newEndTime >= block.timestamp\" */ lt(param_1, /** @src 28:10776:10791  \"block.timestamp\" */ timestamp())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        {\n                            let memPtr_4 := mload(_1)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, _2), 32)\n                            mstore(add(memPtr_4, 36), 34)\n                            mstore(add(memPtr_4, 68), \"New end time must be in the futu\")\n                            mstore(add(memPtr_4, 100), \"re\")\n                            revert(memPtr_4, 132)\n                        }\n                        /// @src 28:10871:10893  \"proposals[_proposalId]\"\n                        let _39, _40 := storage_array_index_access_struct_Proposal__dyn(param)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let sum := add(/** @src 28:10776:10791  \"block.timestamp\" */ timestamp(), /** @src 28:10985:10986  \"1\" */ 0x01)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if gt(/** @src 28:10776:10791  \"block.timestamp\" */ timestamp(), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sum)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, 0x24)\n                        }\n                        sstore(/** @src 28:10948:10964  \"proposal.endTime\" */ add(_39, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _2), sum)\n                        /// @src 28:11004:11045  \"ProposalEndTime(_proposalId, _newEndTime)\"\n                        let _41 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        mstore(_41, param)\n                        mstore(add(_41, 32), param_1)\n                        /// @src 28:11004:11045  \"ProposalEndTime(_proposalId, _newEndTime)\"\n                        log1(_41, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _1, /** @src 28:11004:11045  \"ProposalEndTime(_proposalId, _newEndTime)\" */ 0x9881fec5d892a663ff01483c3d9ea7c153c2ca7ca7fcd7eac040e32f792700ec)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        return(_3, _3)\n                    }\n                    case 0x3f4ba83a {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _42 := sload(/** @src 7:1685:1692  \"_paused\" */ 0x01)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if iszero(and(_42, 0xff))\n                        {\n                            let memPtr_5 := mload(_1)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, _2), 32)\n                            mstore(add(memPtr_5, 36), 20)\n                            mstore(add(memPtr_5, 68), \"Pausable: not paused\")\n                            revert(memPtr_5, 100)\n                        }\n                        sstore(/** @src 7:1685:1692  \"_paused\" */ 0x01, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(_42, not(255)))\n                        /// @src 7:2521:2543  \"Unpaused(_msgSender())\"\n                        let _43 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        mstore(_43, /** @src 17:734:744  \"msg.sender\" */ caller())\n                        /// @src 7:2521:2543  \"Unpaused(_msgSender())\"\n                        log1(_43, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 32, /** @src 7:2521:2543  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        return(_3, _3)\n                    }\n                    case 0x401853b7 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        /// @src 28:11173:11195  \"proposals[_proposalId]\"\n                        let _44, _45 := storage_array_index_access_struct_Proposal__dyn(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ calldataload(_2))\n                        let value_8 := and(sload(/** @src 28:11213:11228  \"proposal.active\" */ add(/** @src 28:11145:11195  \"Proposal storage proposal = proposals[_proposalId]\" */ _44, /** @src 28:11213:11228  \"proposal.active\" */ 3)), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0xff)\n                        let memPos_9 := mload(_1)\n                        mstore(memPos_9, iszero(iszero(value_8)))\n                        return(memPos_9, 32)\n                    }\n                    case 0x44c7c867 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let length := sload(/** @src 28:13805:13814  \"proposals\" */ 0x0a)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let memPos_10 := mload(_1)\n                        mstore(memPos_10, length)\n                        return(memPos_10, 32)\n                    }\n                    case 0x44daa227 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        mstore(_3, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 28:4810:4879  \"mapping(address => mapping(uint256 => uint256)) public added_proposal\" */ 18)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_5 := keccak256(_3, _1)\n                        mstore(_3, calldataload(36))\n                        mstore(32, dataSlot_5)\n                        let _46 := sload(keccak256(_3, _1))\n                        let memPos_11 := mload(_1)\n                        mstore(memPos_11, _46)\n                        return(memPos_11, 32)\n                    }\n                    case 0x48e395a3 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_9 := calldataload(_2)\n                        /// @src 28:4621:4657  \"address[] public UserStakerAddresses\"\n                        if iszero(lt(value_9, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:4621:4657  \"address[] public UserStakerAddresses\" */ 15)))\n                        {\n                            revert(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3, _3)\n                        }\n                        mstore(_3, /** @src 28:4621:4657  \"address[] public UserStakerAddresses\" */ 15)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let value_10 := and(sload(add(63806209331542711802848847270949280092855778197726125910674179583545433573378, value_9)), sub(shl(160, 1), 1))\n                        let memPos_12 := mload(_1)\n                        mstore(memPos_12, value_10)\n                        return(memPos_12, 32)\n                    }\n                    case 0x517a6257 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, calldataload(_2))\n                        mstore(32, /** @src 28:13930:13945  \"proposalOptions\" */ 0x0b)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let length_1 := sload(keccak256(_3, _1))\n                        let memPos_13 := mload(_1)\n                        mstore(memPos_13, length_1)\n                        return(memPos_13, 32)\n                    }\n                    case 0x5c134d66 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        mstore(_3, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 28:4431:4489  \"mapping(address => mapping(uint256 => bool)) public voters\" */ 12)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_6 := keccak256(_3, _1)\n                        mstore(_3, calldataload(36))\n                        mstore(32, dataSlot_6)\n                        let value_11 := and(sload(keccak256(_3, _1)), 0xff)\n                        let memPos_14 := mload(_1)\n                        mstore(memPos_14, iszero(iszero(value_11)))\n                        return(memPos_14, 32)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_12 := and(sload(/** @src 7:1685:1692  \"_paused\" */ 0x01), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0xff)\n                        let memPos_15 := mload(_1)\n                        mstore(memPos_15, iszero(iszero(value_12)))\n                        return(memPos_15, 32)\n                    }\n                    case 0x63e9a61d {\n                        if callvalue() { revert(_3, _3) }\n                        let param_2, param_3 := abi_decode_uint256t_uint256(calldatasize())\n                        /// @src 28:14090:14157  \"require(proposalId < proposalsLength(), \\\"Proposal does not exist.\\\")\"\n                        require_helper_stringliteral_ad61(/** @src 28:14098:14128  \"proposalId < proposalsLength()\" */ lt(param_2, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:13805:13814  \"proposals\" */ 0x0a)))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_3, param_2)\n                        mstore(0x20, /** @src 28:14190:14205  \"proposalOptions\" */ 0x0b)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if iszero(/** @src 28:14176:14224  \"optionIndex < proposalOptions[proposalId].length\" */ lt(param_3, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(keccak256(_3, _1))))\n                        {\n                            let memPtr_6 := mload(_1)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, _2), 0x20)\n                            mstore(add(memPtr_6, 36), 22)\n                            mstore(add(memPtr_6, 68), \"Option does not exist.\")\n                            revert(memPtr_6, 100)\n                        }\n                        mstore(_3, param_2)\n                        mstore(0x20, /** @src 28:14190:14205  \"proposalOptions\" */ 0x0b)\n                        /// @src 28:14269:14309  \"proposalOptions[proposalId][optionIndex]\"\n                        let _47, _48 := storage_array_index_access_struct_Option__dyn(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ keccak256(_3, _1), /** @src 28:14269:14309  \"proposalOptions[proposalId][optionIndex]\" */ param_3)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _49 := sload(/** @src 28:14269:14319  \"proposalOptions[proposalId][optionIndex].voteCount\" */ add(_47, 1))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let memPos_16 := mload(_1)\n                        mstore(memPos_16, _49)\n                        return(memPos_16, 0x20)\n                    }\n                    case 0x6bff47e6 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        fun_deactivateProposal(calldataload(_2))\n                        return(_3, _3)\n                    }\n                    case 0x6f9fb98a {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_13 := and(sload(/** @src 28:12851:12858  \"myToken\" */ 0x02), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sub(shl(160, 1), 1))\n                        /// @src 28:12844:12884  \"IERC20(myToken).balanceOf(address(this))\"\n                        let _50 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        /// @src 28:12844:12884  \"IERC20(myToken).balanceOf(address(this))\"\n                        mstore(_50, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 28:12844:12884  \"IERC20(myToken).balanceOf(address(this))\" */ add(_50, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _2), /** @src 28:12878:12882  \"this\" */ address())\n                        /// @src 28:12844:12884  \"IERC20(myToken).balanceOf(address(this))\"\n                        let _51 := staticcall(gas(), value_13, _50, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 36, /** @src 28:12844:12884  \"IERC20(myToken).balanceOf(address(this))\" */ _50, 32)\n                        if iszero(_51)\n                        {\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let pos_1 := mload(_1)\n                            returndatacopy(pos_1, _3, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 28:12844:12884  \"IERC20(myToken).balanceOf(address(this))\"\n                        let expr_2 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                        /// @src 28:12844:12884  \"IERC20(myToken).balanceOf(address(this))\"\n                        if _51\n                        {\n                            let _52 := 32\n                            if gt(_52, returndatasize()) { _52 := returndatasize() }\n                            finalize_allocation(_50, _52)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            if slt(sub(/** @src 28:12844:12884  \"IERC20(myToken).balanceOf(address(this))\" */ add(_50, _52), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _50), /** @src 28:12844:12884  \"IERC20(myToken).balanceOf(address(this))\" */ 32)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            { revert(_3, _3) }\n                            /// @src 28:12844:12884  \"IERC20(myToken).balanceOf(address(this))\"\n                            expr_2 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_50)\n                        }\n                        let memPos_17 := mload(_1)\n                        mstore(memPos_17, expr_2)\n                        return(memPos_17, /** @src 28:12844:12884  \"IERC20(myToken).balanceOf(address(this))\" */ 32)\n                    }\n                    case /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0x715018a6 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _53 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x01)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        sstore(/** @src 0:2518:2524  \"_owner\" */ 0x01, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(_53, not(sub(shl(168, 1), 256))))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3, _3, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(shr(8, _53), sub(shl(160, 1), 1)), _3)\n                        return(_3, _3)\n                    }\n                    case 0x8456cb59 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:1204:1276  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        sstore(/** @src 7:2255:2259  \"true\" */ 0x01, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ or(and(sload(/** @src 7:2255:2259  \"true\" */ 0x01), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ not(255)), /** @src 7:2255:2259  \"true\" */ 0x01))\n                        /// @src 7:2274:2294  \"Paused(_msgSender())\"\n                        let _54 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        mstore(_54, /** @src 17:734:744  \"msg.sender\" */ caller())\n                        /// @src 7:2274:2294  \"Paused(_msgSender())\"\n                        log1(_54, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 32, /** @src 7:2274:2294  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        return(_3, _3)\n                    }\n                    case 0x8a6655d6 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value_14 := calldataload(_2)\n                        let _55 := 36\n                        let value_15 := calldataload(_55)\n                        let value_16 := calldataload(68)\n                        /// @src 7:1204:1276  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if iszero(/** @src 28:11370:11400  \"_proposalId < proposals.length\" */ lt(value_14, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:11384:11393  \"proposals\" */ 0x0a)))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        {\n                            let memPtr_7 := mload(_1)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, _2), 32)\n                            mstore(add(memPtr_7, _55), 27)\n                            mstore(add(memPtr_7, 68), \"The proposal does not exist\")\n                            revert(memPtr_7, 100)\n                        }\n                        mstore(_3, value_14)\n                        let _56 := 32\n                        mstore(_56, /** @src 28:11463:11478  \"proposalOptions\" */ 0x0b)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if iszero(/** @src 28:11451:11498  \"_optionId < proposalOptions[_proposalId].length\" */ lt(value_15, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(keccak256(_3, _1))))\n                        {\n                            let memPtr_8 := mload(_1)\n                            mstore(memPtr_8, shl(229, 4594637))\n                            mstore(add(memPtr_8, _2), _56)\n                            mstore(add(memPtr_8, _55), 25)\n                            mstore(add(memPtr_8, 68), \"The option does not exist\")\n                            revert(memPtr_8, 100)\n                        }\n                        /// @src 28:11547:11569  \"proposals[_proposalId]\"\n                        let _57, _58 := storage_array_index_access_struct_Proposal__dyn(value_14)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if iszero(and(sload(/** @src 28:11547:11576  \"proposals[_proposalId].active\" */ add(_57, 3)), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0xff))\n                        {\n                            let memPtr_9 := mload(_1)\n                            mstore(memPtr_9, shl(229, 4594637))\n                            mstore(add(memPtr_9, _2), _56)\n                            mstore(add(memPtr_9, _55), 26)\n                            mstore(add(memPtr_9, 68), \"The proposal is not active\")\n                            revert(memPtr_9, 100)\n                        }\n                        mstore(_3, /** @src 28:11661:11671  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_56, /** @src 28:11652:11660  \"balances\" */ 0x06)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _59 := sload(keccak256(_3, _1))\n                        mstore(_56, /** @src 28:11675:11691  \"usedVotingRights\" */ 0x0e)\n                        /// @src 28:11652:11703  \"balances[msg.sender] - usedVotingRights[msg.sender]\"\n                        let expr_3 := checked_sub_uint256(_59, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(keccak256(_3, _1)))\n                        mstore(_3, /** @src 28:11661:11671  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_56, /** @src 28:11706:11727  \"proposalTokenDeposits\" */ 0x0d)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if /** @src 28:11758:11790  \"remainingVotingRights >= _amount\" */ lt(/** @src 28:11652:11739  \"balances[msg.sender] - usedVotingRights[msg.sender] - proposalTokenDeposits[msg.sender]\" */ checked_sub_uint256(expr_3, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(keccak256(_3, _1))), /** @src 28:11758:11790  \"remainingVotingRights >= _amount\" */ value_16)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        {\n                            let memPtr_10 := mload(_1)\n                            mstore(memPtr_10, shl(229, 4594637))\n                            mstore(add(memPtr_10, _2), _56)\n                            mstore(add(memPtr_10, _55), 26)\n                            mstore(add(memPtr_10, 68), \"Insufficient voting rights\")\n                            revert(memPtr_10, 100)\n                        }\n                        mstore(_3, /** @src 28:11661:11671  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_56, /** @src 28:11675:11691  \"usedVotingRights\" */ 0x0e)\n                        /// @src 28:11865:11903  \"usedVotingRights[msg.sender] + _amount\"\n                        let _60 := checked_add_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(keccak256(_3, _1)), /** @src 28:11865:11903  \"usedVotingRights[msg.sender] + _amount\" */ value_16)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_3, /** @src 28:11661:11671  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_56, /** @src 28:11675:11691  \"usedVotingRights\" */ 0x0e)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        sstore(keccak256(_3, _1), _60)\n                        mstore(_3, value_14)\n                        mstore(_56, /** @src 28:11463:11478  \"proposalOptions\" */ 0x0b)\n                        /// @src 28:11914:11953  \"proposalOptions[_proposalId][_optionId]\"\n                        let _61, _62 := storage_array_index_access_struct_Option__dyn(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ keccak256(_3, _1), /** @src 28:11914:11953  \"proposalOptions[_proposalId][_optionId]\" */ value_15)\n                        /// @src 28:11914:11963  \"proposalOptions[_proposalId][_optionId].voteCount\"\n                        let _63 := add(_61, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 1)\n                        sstore(_63, /** @src 28:11914:11974  \"proposalOptions[_proposalId][_optionId].voteCount += _amount\" */ checked_add_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:11914:11974  \"proposalOptions[_proposalId][_optionId].voteCount += _amount\" */ _63), value_16))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_3, /** @src 28:11661:11671  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_56, /** @src 28:11985:11998  \"votingRecords\" */ 0x11)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_7 := keccak256(_3, _1)\n                        mstore(_3, value_14)\n                        mstore(_56, dataSlot_7)\n                        let dataSlot_8 := keccak256(_3, _1)\n                        sstore(dataSlot_8, /** @src 28:11985:12034  \"votingRecords[msg.sender][_proposalId] += _amount\" */ checked_add_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:11985:12034  \"votingRecords[msg.sender][_proposalId] += _amount\" */ dataSlot_8), value_16))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_3, /** @src 28:11661:11671  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_56, /** @src 28:12045:12051  \"voters\" */ 0x0c)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_9 := keccak256(_3, _1)\n                        mstore(_3, value_14)\n                        mstore(_56, dataSlot_9)\n                        let dataSlot_10 := keccak256(_3, _1)\n                        sstore(dataSlot_10, or(and(sload(dataSlot_10), not(255)), 1))\n                        mstore(_3, /** @src 28:11661:11671  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_56, /** @src 28:12094:12111  \"userVotingHistory\" */ 0x08)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_11 := keccak256(_3, _1)\n                        let memPtr_11 := mload(_1)\n                        let newFreePtr := add(memPtr_11, 96)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_11))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, _55)\n                        }\n                        mstore(_1, newFreePtr)\n                        mstore(memPtr_11, value_14)\n                        /// @src 28:12129:12172  \"VoteRecord(_proposalId, _optionId, _amount)\"\n                        let _64 := add(memPtr_11, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _56)\n                        mstore(_64, value_15)\n                        /// @src 28:12129:12172  \"VoteRecord(_proposalId, _optionId, _amount)\"\n                        let _65 := add(memPtr_11, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _1)\n                        mstore(_65, value_16)\n                        let oldLen := sload(dataSlot_11)\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, _55)\n                        }\n                        sstore(dataSlot_11, add(oldLen, 1))\n                        let slot_2, offset_4 := storage_array_index_access_struct_VoteRecord__dyn(dataSlot_11, oldLen)\n                        if offset_4\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, _3)\n                            revert(_3, _55)\n                        }\n                        sstore(slot_2, mload(memPtr_11))\n                        sstore(add(slot_2, 1), mload(_64))\n                        sstore(add(slot_2, 2), mload(_65))\n                        mstore(_3, value_14)\n                        mstore(_56, /** @src 28:12184:12198  \"proposalVoters\" */ 0x07)\n                        /// @src 28:12184:12228  \"proposalVoters[_proposalId].push(msg.sender)\"\n                        array_push_from_address_to_array_address_dyn_storage_ptr(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ keccak256(_3, _1), /** @src 28:11661:11671  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_3, value_14)\n                        mstore(_56, /** @src 28:12298:12322  \"voterAddressesByProposal\" */ 0x13)\n                        /// @src 28:12298:12352  \"voterAddressesByProposal[_proposalId].push(msg.sender)\"\n                        array_push_from_address_to_array_address_dyn_storage_ptr(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ keccak256(_3, _1), /** @src 28:11661:11671  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_3, value_14)\n                        mstore(_56, /** @src 28:12363:12382  \"optionIdsByProposal\" */ 0x14)\n                        /// @src 28:12363:12411  \"optionIdsByProposal[_proposalId].push(_optionId)\"\n                        array_push_from_uint256_to_array_uint256_dyn_storage_ptr(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ keccak256(_3, _1), /** @src 28:12363:12411  \"optionIdsByProposal[_proposalId].push(_optionId)\" */ value_15)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_3, value_14)\n                        mstore(_56, /** @src 28:12422:12442  \"voteCountsByProposal\" */ 0x15)\n                        /// @src 28:12422:12469  \"voteCountsByProposal[_proposalId].push(_amount)\"\n                        array_push_from_uint256_to_array_uint256_dyn_storage_ptr(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ keccak256(_3, _1), /** @src 28:12422:12469  \"voteCountsByProposal[_proposalId].push(_amount)\" */ value_16)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_3, value_14)\n                        mstore(_56, /** @src 28:12298:12322  \"voterAddressesByProposal\" */ 0x13)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let length_2 := sload(keccak256(_3, _1))\n                        let diff := add(length_2, not(0))\n                        if gt(diff, length_2)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, /** @src 28:11985:11998  \"votingRecords\" */ 0x11)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            revert(_3, _55)\n                        }\n                        mstore(_3, /** @src 28:11661:11671  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_56, /** @src 28:12531:12551  \"voterIndexInProposal\" */ 0x16)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_12 := keccak256(_3, _1)\n                        mstore(_3, value_14)\n                        mstore(_56, dataSlot_12)\n                        sstore(keccak256(_3, _1), diff)\n                        /// @src 28:12645:12695  \"Voted(msg.sender, _proposalId, _optionId, _amount)\"\n                        let _66 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        mstore(_66, value_16)\n                        /// @src 28:12645:12695  \"Voted(msg.sender, _proposalId, _optionId, _amount)\"\n                        log4(_66, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _56, /** @src 28:12645:12695  \"Voted(msg.sender, _proposalId, _optionId, _amount)\" */ 0xc32b42768a47a585121e9b8d7a2ab9d3f34c326a192dee11ee1732e3d18313f3, /** @src 28:11661:11671  \"msg.sender\" */ caller(), /** @src 28:12645:12695  \"Voted(msg.sender, _proposalId, _optionId, _amount)\" */ value_14, value_15)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        return(_3, _3)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_17 := and(shr(8, sload(/** @src 0:1273:1279  \"_owner\" */ 0x01)), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sub(shl(160, 1), 1))\n                        let memPos_18 := mload(_1)\n                        mstore(memPos_18, value_17)\n                        return(memPos_18, 32)\n                    }\n                    case 0x9d678da1 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_18 := calldataload(_2)\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 28:17570:17637  \"require(_proposalId < proposals.length, \\\"Proposal does not exist.\\\")\"\n                        require_helper_stringliteral_ad61(/** @src 28:17578:17608  \"_proposalId < proposals.length\" */ lt(value_18, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:17592:17601  \"proposals\" */ 0x0a)))\n                        /// @src 28:17676:17698  \"proposals[_proposalId]\"\n                        let _67, _68 := storage_array_index_access_struct_Proposal__dyn(value_18)\n                        /// @src 28:17717:17732  \"proposal.active\"\n                        let _69 := add(_67, 3)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _70 := sload(/** @src 28:17717:17732  \"proposal.active\" */ _69)\n                        /// @src 28:17709:17762  \"require(proposal.active, \\\"Proposal is still active.\\\")\"\n                        require_helper_stringliteral_dd70(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(_70, 0xff))\n                        /// @src 28:17773:17826  \"require(!proposal.isSettled, \\\"Funds already settled\\\")\"\n                        require_helper_stringliteral_5ac8(/** @src 28:17781:17800  \"!proposal.isSettled\" */ iszero(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(shr(8, _70), 0xff)))\n                        /// @src 28:17856:17867  \"_proposalId\"\n                        fun_deactivateProposal(value_18)\n                        /// @src 28:17942:17962  \"proposal.stakeAmount\"\n                        let _71 := add(_67, 2)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _72 := sload(/** @src 28:17942:17962  \"proposal.stakeAmount\" */ _71)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _73 := sload(/** @src 28:17976:17994  \"proposal.isWagered\" */ _69)\n                        /// @src 28:17973:18267  \"if(proposal.isWagered) {...\"\n                        switch /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(shr(16, _73), 0xff)\n                        case /** @src 28:17973:18267  \"if(proposal.isWagered) {...\" */ 0 {\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            sstore(_69, or(and(_73, not(65280)), 256))\n                        }\n                        default /// @src 28:17973:18267  \"if(proposal.isWagered) {...\"\n                        {\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let value_19 := and(sload(/** @src 28:18058:18075  \"proposal.proposer\" */ _67), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sub(shl(160, 1), 1))\n                            mstore(_3, value_19)\n                            mstore(32, /** @src 28:18036:18057  \"proposalTokenDeposits\" */ 0x0d)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let _74 := sload(keccak256(_3, _1))\n                            /// @src 28:18134:18199  \"stakedAmount > currentDeposit ? 0 : currentDeposit - stakedAmount\"\n                            let expr_4 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                            /// @src 28:18134:18199  \"stakedAmount > currentDeposit ? 0 : currentDeposit - stakedAmount\"\n                            switch /** @src 28:18134:18163  \"stakedAmount > currentDeposit\" */ gt(_72, _74)\n                            case /** @src 28:18134:18199  \"stakedAmount > currentDeposit ? 0 : currentDeposit - stakedAmount\" */ 0 {\n                                expr_4 := /** @src 28:18170:18199  \"currentDeposit - stakedAmount\" */ checked_sub_uint256(_74, _72)\n                            }\n                            default /// @src 28:18134:18199  \"stakedAmount > currentDeposit ? 0 : currentDeposit - stakedAmount\"\n                            {\n                                expr_4 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                            }\n                            mstore(_3, value_19)\n                            mstore(32, /** @src 28:18036:18057  \"proposalTokenDeposits\" */ 0x0d)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            sstore(keccak256(_3, _1), expr_4)\n                        }\n                        let _75 := sload(/** @src 28:18299:18319  \"proposal.stakeAmount\" */ _71)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let product_1 := mul(_75, /** @src 28:17717:17732  \"proposal.active\" */ 3)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _76 := iszero(_75)\n                        if iszero(or(_76, eq(/** @src 28:17717:17732  \"proposal.active\" */ 3, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ div(product_1, _75))))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, 0x24)\n                        }\n                        let product_2 := mul(_75, /** @src 28:18412:18413  \"5\" */ 0x05)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if iszero(or(_76, eq(/** @src 28:18412:18413  \"5\" */ 0x05, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ div(product_2, _75))))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, 0x24)\n                        }\n                        /// @src 28:18473:18492  \"reward - serviceFee\"\n                        let expr_5 := checked_sub_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ div(product_2, /** @src 28:18327:18330  \"100\" */ 0x64), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ div(product_1, /** @src 28:18327:18330  \"100\" */ 0x64))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _77 := sub(shl(160, 1), 1)\n                        mstore(_3, and(sload(/** @src 28:18514:18531  \"proposal.proposer\" */ _67), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _77))\n                        mstore(32, /** @src 28:18505:18513  \"balances\" */ 0x06)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_13 := keccak256(_3, _1)\n                        sstore(dataSlot_13, /** @src 28:18505:18542  \"balances[proposal.proposer] += profit\" */ checked_add_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:18505:18542  \"balances[proposal.proposer] += profit\" */ dataSlot_13), expr_5))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        sstore(_69, or(and(sload(_69), not(65280)), 256))\n                        let value_20 := and(sload(/** @src 28:18685:18702  \"proposal.proposer\" */ _67), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _77)\n                        /// @src 28:18642:18711  \"FundsSettledForAverageQuality(_proposalId, proposal.proposer, profit)\"\n                        let _78 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        mstore(_78, expr_5)\n                        /// @src 28:18642:18711  \"FundsSettledForAverageQuality(_proposalId, proposal.proposer, profit)\"\n                        log3(_78, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 32, /** @src 28:18642:18711  \"FundsSettledForAverageQuality(_proposalId, proposal.proposer, profit)\" */ 0x465657ffaa3aa3d50487c62c8f39c4b59a6b333d8b255d8d3d9cb2ca1897a7c8, value_18, value_20)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        return(_3, _3)\n                    }\n                    case 0xa24f8bd5 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_21 := calldataload(_2)\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 28:18817:18884  \"require(_proposalId < proposals.length, \\\"Proposal does not exist.\\\")\"\n                        require_helper_stringliteral_ad61(/** @src 28:18825:18855  \"_proposalId < proposals.length\" */ lt(value_21, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:18839:18848  \"proposals\" */ 0x0a)))\n                        /// @src 28:18923:18945  \"proposals[_proposalId]\"\n                        let _79, _80 := storage_array_index_access_struct_Proposal__dyn(value_21)\n                        /// @src 28:18964:18979  \"proposal.active\"\n                        let _81 := add(_79, 3)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _82 := sload(/** @src 28:18964:18979  \"proposal.active\" */ _81)\n                        /// @src 28:18956:19009  \"require(proposal.active, \\\"Proposal is still active.\\\")\"\n                        require_helper_stringliteral_dd70(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(_82, 0xff))\n                        /// @src 28:19020:19073  \"require(!proposal.isSettled, \\\"Funds already settled\\\")\"\n                        require_helper_stringliteral_5ac8(/** @src 28:19028:19047  \"!proposal.isSettled\" */ iszero(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(shr(8, _82), 0xff)))\n                        /// @src 28:19103:19114  \"_proposalId\"\n                        fun_deactivateProposal(value_21)\n                        /// @src 28:19187:19207  \"proposal.stakeAmount\"\n                        let _83 := add(_79, 2)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _84 := sload(/** @src 28:19187:19207  \"proposal.stakeAmount\" */ _83)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _85 := sload(/** @src 28:19221:19239  \"proposal.isWagered\" */ _81)\n                        /// @src 28:19218:19553  \"if(proposal.isWagered) {...\"\n                        switch /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(shr(16, _85), 0xff)\n                        case /** @src 28:19218:19553  \"if(proposal.isWagered) {...\" */ 0 {\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            sstore(_81, or(and(_85, not(65280)), 256))\n                        }\n                        default /// @src 28:19218:19553  \"if(proposal.isWagered) {...\"\n                        {\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let value_22 := and(sload(/** @src 28:19344:19361  \"proposal.proposer\" */ _79), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sub(shl(160, 1), 1))\n                            mstore(_3, value_22)\n                            mstore(32, /** @src 28:19322:19343  \"proposalTokenDeposits\" */ 0x0d)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let _86 := sload(keccak256(_3, _1))\n                            /// @src 28:19420:19485  \"stakedAmount > currentDeposit ? 0 : currentDeposit - stakedAmount\"\n                            let expr_6 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                            /// @src 28:19420:19485  \"stakedAmount > currentDeposit ? 0 : currentDeposit - stakedAmount\"\n                            switch /** @src 28:19420:19449  \"stakedAmount > currentDeposit\" */ gt(_84, _86)\n                            case /** @src 28:19420:19485  \"stakedAmount > currentDeposit ? 0 : currentDeposit - stakedAmount\" */ 0 {\n                                expr_6 := /** @src 28:19456:19485  \"currentDeposit - stakedAmount\" */ checked_sub_uint256(_86, _84)\n                            }\n                            default /// @src 28:19420:19485  \"stakedAmount > currentDeposit ? 0 : currentDeposit - stakedAmount\"\n                            {\n                                expr_6 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                            }\n                            mstore(_3, value_22)\n                            mstore(32, /** @src 28:19322:19343  \"proposalTokenDeposits\" */ 0x0d)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            sstore(keccak256(_3, _1), expr_6)\n                        }\n                        let _87 := sload(/** @src 28:19585:19605  \"proposal.stakeAmount\" */ _83)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let product_3 := mul(_87, /** @src 28:18964:18979  \"proposal.active\" */ 3)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _88 := iszero(_87)\n                        if iszero(or(_88, eq(/** @src 28:18964:18979  \"proposal.active\" */ 3, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ div(product_3, _87))))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, 0x24)\n                        }\n                        let product_4 := mul(_87, /** @src 28:18839:18848  \"proposals\" */ 0x0a)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if iszero(or(_88, eq(/** @src 28:18839:18848  \"proposals\" */ 0x0a, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ div(product_4, _87))))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, 0x24)\n                        }\n                        /// @src 28:19761:19780  \"reward - serviceFee\"\n                        let expr_7 := checked_sub_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ div(product_4, /** @src 28:19613:19616  \"100\" */ 0x64), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ div(product_3, /** @src 28:19613:19616  \"100\" */ 0x64))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _89 := sub(shl(160, 1), 1)\n                        mstore(_3, and(sload(/** @src 28:19802:19819  \"proposal.proposer\" */ _79), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _89))\n                        mstore(32, /** @src 28:19793:19801  \"balances\" */ 0x06)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_14 := keccak256(_3, _1)\n                        sstore(dataSlot_14, /** @src 28:19793:19830  \"balances[proposal.proposer] += profit\" */ checked_add_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:19793:19830  \"balances[proposal.proposer] += profit\" */ dataSlot_14), expr_7))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        sstore(_81, or(and(sload(_81), not(65280)), 256))\n                        let value_23 := and(sload(/** @src 28:19973:19990  \"proposal.proposer\" */ _79), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _89)\n                        /// @src 28:19930:19999  \"FundsSettledForAverageQuality(_proposalId, proposal.proposer, profit)\"\n                        let _90 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        mstore(_90, expr_7)\n                        /// @src 28:19930:19999  \"FundsSettledForAverageQuality(_proposalId, proposal.proposer, profit)\"\n                        log3(_90, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 32, /** @src 28:19930:19999  \"FundsSettledForAverageQuality(_proposalId, proposal.proposer, profit)\" */ 0x465657ffaa3aa3d50487c62c8f39c4b59a6b333d8b255d8d3d9cb2ca1897a7c8, value_21, value_23)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        return(_3, _3)\n                    }\n                    case 0xa46188ad {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 192) { revert(_3, _3) }\n                        let value0_3 := abi_decode_address()\n                        let offset_5 := calldataload(36)\n                        let _91 := 0xffffffffffffffff\n                        if gt(offset_5, _91) { revert(_3, _3) }\n                        let value1_1 := abi_decode_string(add(_2, offset_5), calldatasize())\n                        let value_24 := calldataload(68)\n                        let offset_6 := calldataload(100)\n                        if gt(offset_6, _91) { revert(_3, _3) }\n                        let value3 := abi_decode_array_string_dyn(add(_2, offset_6), calldatasize())\n                        let value_25 := calldataload(132)\n                        let value_26 := calldataload(164)\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if iszero(lt(value_25, sload(/** @src 28:8138:8157  \"UserStakerAddresses\" */ 0x0f)))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x32)\n                            revert(_3, 36)\n                        }\n                        mstore(_3, /** @src 28:8138:8157  \"UserStakerAddresses\" */ 0x0f)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _92 := sub(shl(160, 1), 1)\n                        let value_27 := and(sload(add(63806209331542711802848847270949280092855778197726125910674179583545433573378, value_25)), _92)\n                        /// @src 28:8201:8230  \"UserSstakeAmounts[stakeIndex]\"\n                        let _93, _94 := storage_array_index_access_address_dyn_38400(value_25)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _95 := sload(/** @src 28:8201:8230  \"UserSstakeAmounts[stakeIndex]\" */ _93)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _96 := and(/** @src 28:8249:8275  \"UserAddress == userAddress\" */ value0_3, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _92)\n                        if iszero(/** @src 28:8249:8275  \"UserAddress == userAddress\" */ eq(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ value_27, _96))\n                        {\n                            let memPtr_12 := mload(_1)\n                            mstore(memPtr_12, shl(229, 4594637))\n                            mstore(add(memPtr_12, _2), 32)\n                            mstore(add(memPtr_12, 36), 23)\n                            mstore(add(memPtr_12, 68), \"the address is not same\")\n                            revert(memPtr_12, 100)\n                        }\n                        if iszero(/** @src 28:8322:8347  \"stakeAmount == UserAmount\" */ eq(value_24, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ shr(shl(3, _94), _95)))\n                        {\n                            let memPtr_13 := mload(_1)\n                            mstore(memPtr_13, shl(229, 4594637))\n                            mstore(add(memPtr_13, _2), 32)\n                            mstore(add(memPtr_13, 36), 44)\n                            mstore(add(memPtr_13, 68), \"Staked amount does not match or \")\n                            mstore(add(memPtr_13, 100), \"insufficient\")\n                            revert(memPtr_13, 132)\n                        }\n                        /// @src 28:8459:8465  \"1 days\"\n                        let _97 := 0x015180\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let product_5 := mul(value_26, /** @src 28:8459:8465  \"1 days\" */ _97)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if iszero(or(iszero(value_26), eq(/** @src 28:8459:8465  \"1 days\" */ _97, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ div(product_5, value_26))))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, 36)\n                        }\n                        /// @src 28:8430:8466  \"block.timestamp + (endtime * 1 days)\"\n                        let expr_8 := checked_add_uint256(/** @src 28:8430:8445  \"block.timestamp\" */ timestamp(), /** @src 28:8449:8465  \"endtime * 1 days\" */ product_5)\n                        /// @src 28:8511:8525  \"bool isWagered\"\n                        let var_isWagered := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                        /// @src 28:8536:8650  \"if (stakeAmount > 0) {...\"\n                        switch /** @src 28:8540:8555  \"stakeAmount > 0\" */ iszero(iszero(value_24))\n                        case /** @src 28:8536:8650  \"if (stakeAmount > 0) {...\" */ 0 {\n                            /// @src 28:8621:8638  \"isWagered = false\"\n                            var_isWagered := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                        }\n                        default /// @src 28:8536:8650  \"if (stakeAmount > 0) {...\"\n                        {\n                            /// @src 28:8572:8588  \"isWagered = true\"\n                            var_isWagered := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 1\n                        }\n                        let memPtr_14 := mload(_1)\n                        finalize_allocation_38382(memPtr_14)\n                        mstore(memPtr_14, _96)\n                        let _98 := 32\n                        mstore(/** @src 28:8675:8945  \"Proposal({...\" */ add(memPtr_14, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _98), value1_1)\n                        mstore(/** @src 28:8675:8945  \"Proposal({...\" */ add(memPtr_14, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _1), value_24)\n                        let _99 := 1\n                        mstore(/** @src 28:8675:8945  \"Proposal({...\" */ add(memPtr_14, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 96), _99)\n                        mstore(/** @src 28:8675:8945  \"Proposal({...\" */ add(memPtr_14, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 128), _3)\n                        mstore(/** @src 28:8675:8945  \"Proposal({...\" */ add(memPtr_14, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 160), iszero(iszero(var_isWagered)))\n                        mstore(/** @src 28:8675:8945  \"Proposal({...\" */ add(memPtr_14, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 192), expr_8)\n                        /// @src 28:8660:8946  \"proposals.push(Proposal({...\"\n                        array_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr(memPtr_14)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _100 := sload(3)\n                        sstore(3, add(_100, _99))\n                        /// @src 28:9096:9109  \"uint256 i = 0\"\n                        let var_i_2 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                        /// @src 28:9091:9315  \"for (uint256 i = 0; i < optionDescriptions.length; i++) {...\"\n                        for { }\n                        /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _99\n                        /// @src 28:9096:9109  \"uint256 i = 0\"\n                        {\n                            /// @src 28:9142:9145  \"i++\"\n                            var_i_2 := increment_uint256(var_i_2)\n                        }\n                        {\n                            /// @src 28:9111:9140  \"i < optionDescriptions.length\"\n                            if iszero(lt(var_i_2, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(/** @src 28:9115:9140  \"optionDescriptions.length\" */ value3)))\n                            /// @src 28:9111:9140  \"i < optionDescriptions.length\"\n                            { break }\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            mstore(_3, _100)\n                            mstore(_98, /** @src 28:9162:9177  \"proposalOptions\" */ 0x0b)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let dataSlot_15 := keccak256(_3, _1)\n                            /// @src 28:9234:9255  \"optionDescriptions[i]\"\n                            let _mpos_1 := mload(memory_array_index_access_string_dyn(value3, var_i_2))\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let memPtr_15 := mload(_1)\n                            finalize_allocation_38384(memPtr_15)\n                            mstore(memPtr_15, _mpos_1)\n                            mstore(/** @src 28:9195:9302  \"Option({...\" */ add(memPtr_15, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _98), _3)\n                            /// @src 28:9162:9303  \"proposalOptions[proposalId].push(Option({...\"\n                            array_push_from_struct_Option_to_array_struct_Option_storage_dyn_ptr(dataSlot_15, memPtr_15)\n                        }\n                        /// @src 28:9340:9434  \"ProposalForUser(userAddress, proposalId, proposalDescription, stakeAmount, optionDescriptions)\"\n                        let _101 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        mstore(_101, 96)\n                        let tail_4 := abi_encode_string(value1_1, add(_101, 96))\n                        mstore(add(_101, _98), value_24)\n                        mstore(add(_101, _1), sub(tail_4, _101))\n                        /// @src 28:9340:9434  \"ProposalForUser(userAddress, proposalId, proposalDescription, stakeAmount, optionDescriptions)\"\n                        log3(_101, sub(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ abi_encode_array_string_dyn(value3, tail_4), /** @src 28:9340:9434  \"ProposalForUser(userAddress, proposalId, proposalDescription, stakeAmount, optionDescriptions)\" */ _101), 0x5f2ba7f92706dd3552cbb77ea64a29ff03f8d16a053d327c22305d3281ab6948, _96, _100)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let memPos_19 := mload(_1)\n                        mstore(memPos_19, _100)\n                        return(memPos_19, _98)\n                    }\n                    case 0xa93b4ba1 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_4, param_5 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(_3, param_4)\n                        mstore(0x20, /** @src 28:4337:4388  \"mapping(uint256 => Option[]) public proposalOptions\" */ 11)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_16 := keccak256(_3, _1)\n                        /// @src 28:4337:4388  \"mapping(uint256 => Option[]) public proposalOptions\"\n                        if iszero(lt(param_5, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:4337:4388  \"mapping(uint256 => Option[]) public proposalOptions\" */ dataSlot_16)))\n                        {\n                            revert(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3, _3)\n                        }\n                        /// @src 28:4337:4388  \"mapping(uint256 => Option[]) public proposalOptions\"\n                        let slot_3, offset_7 := storage_array_index_access_struct_Option__dyn(dataSlot_16, param_5)\n                        let ret_mpos_1 := copy_array_from_storage_to_memory_string(slot_3)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _102 := sload(/** @src 28:4337:4388  \"mapping(uint256 => Option[]) public proposalOptions\" */ add(slot_3, 1))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let memPos_20 := mload(_1)\n                        mstore(memPos_20, _1)\n                        let tail_5 := abi_encode_string(ret_mpos_1, add(memPos_20, _1))\n                        mstore(add(memPos_20, 0x20), _102)\n                        return(memPos_20, sub(tail_5, memPos_20))\n                    }\n                    case 0xa9bc3711 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_6, param_7 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(_3, param_6)\n                        mstore(0x20, /** @src 28:5019:5076  \"mapping(uint256 => uint256[]) public voteCountsByProposal\" */ 21)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_17 := keccak256(_3, _1)\n                        /// @src 28:5019:5076  \"mapping(uint256 => uint256[]) public voteCountsByProposal\"\n                        if iszero(lt(param_7, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:5019:5076  \"mapping(uint256 => uint256[]) public voteCountsByProposal\" */ dataSlot_17)))\n                        {\n                            revert(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3, _3)\n                        }\n                        /// @src 28:5019:5076  \"mapping(uint256 => uint256[]) public voteCountsByProposal\"\n                        let slot_4, offset_8 := storage_array_index_access_address_dyn(dataSlot_17, param_7)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _103 := sload(/** @src 28:5019:5076  \"mapping(uint256 => uint256[]) public voteCountsByProposal\" */ slot_4)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let memPos_21 := mload(_1)\n                        mstore(memPos_21, shr(shl(3, offset_8), _103))\n                        return(memPos_21, 0x20)\n                    }\n                    case 0xab89437c {\n                        if callvalue() { revert(_3, _3) }\n                        let param_8, param_9 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(_3, param_8)\n                        mstore(0x20, /** @src 28:3161:3212  \"mapping(uint256 => address[]) public proposalVoters\" */ 7)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_18 := keccak256(_3, _1)\n                        /// @src 28:3161:3212  \"mapping(uint256 => address[]) public proposalVoters\"\n                        if iszero(lt(param_9, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:3161:3212  \"mapping(uint256 => address[]) public proposalVoters\" */ dataSlot_18)))\n                        {\n                            revert(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3, _3)\n                        }\n                        /// @src 28:3161:3212  \"mapping(uint256 => address[]) public proposalVoters\"\n                        let slot_5, offset_9 := storage_array_index_access_address_dyn(dataSlot_18, param_9)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _104 := sload(/** @src 28:3161:3212  \"mapping(uint256 => address[]) public proposalVoters\" */ slot_5)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let memPos_22 := mload(_1)\n                        mstore(memPos_22, and(shr(shl(3, offset_9), _104), sub(shl(160, 1), 1)))\n                        return(memPos_22, 0x20)\n                    }\n                    case 0xb6b55f25 {\n                        if callvalue() { revert(_3, _3) }\n                        let _105 := 32\n                        if slt(add(calldatasize(), not(3)), _105) { revert(_3, _3) }\n                        let value_28 := calldataload(_2)\n                        let value_29 := and(sload(/** @src 28:5276:5283  \"myToken\" */ 0x02), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sub(shl(160, 1), 1))\n                        /// @src 28:5269:5332  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        let _106 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        /// @src 28:5269:5332  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        mstore(_106, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ shl(224, 0x23b872dd))\n                        mstore(/** @src 28:5269:5332  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ add(_106, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _2), /** @src 28:5298:5308  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(add(/** @src 28:5269:5332  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ _106, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 36), /** @src 28:5318:5322  \"this\" */ address())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(add(/** @src 28:5269:5332  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ _106, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 68), value_28)\n                        /// @src 28:5269:5332  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        let _107 := call(gas(), value_29, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3, /** @src 28:5269:5332  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ _106, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 100, /** @src 28:5269:5332  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ _106, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _105)\n                        /// @src 28:5269:5332  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        if iszero(_107)\n                        {\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let pos_2 := mload(_1)\n                            returndatacopy(pos_2, _3, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 28:5269:5332  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        let expr_9 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                        /// @src 28:5269:5332  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                        if _107\n                        {\n                            let _108 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _105\n                            /// @src 28:5269:5332  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\"\n                            if gt(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _105, /** @src 28:5269:5332  \"IERC20(myToken).transferFrom(msg.sender, address(this), amount)\" */ returndatasize()) { _108 := returndatasize() }\n                            finalize_allocation(_106, _108)\n                            expr_9 := abi_decode_bool_fromMemory(_106, add(_106, _108))\n                        }\n                        /// @src 28:5247:5375  \"require(...\"\n                        require_helper_stringliteral_25ad(expr_9)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_3, /** @src 28:5298:5308  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_105, /** @src 28:5409:5417  \"balances\" */ 0x06)\n                        /// @src 28:5409:5438  \"balances[msg.sender] + amount\"\n                        let _109 := checked_add_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(keccak256(_3, _1)), /** @src 28:5409:5438  \"balances[msg.sender] + amount\" */ value_28)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_3, /** @src 28:5298:5308  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_105, /** @src 28:5409:5417  \"balances\" */ 0x06)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        sstore(keccak256(_3, _1), _109)\n                        /// @src 28:5454:5483  \"Deposited(msg.sender, amount)\"\n                        let _110 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        mstore(_110, value_28)\n                        /// @src 28:5454:5483  \"Deposited(msg.sender, amount)\"\n                        log2(_110, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _105, /** @src 28:5454:5483  \"Deposited(msg.sender, amount)\" */ 0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4, /** @src 28:5298:5308  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        return(_3, _3)\n                    }\n                    case 0xb8fcf937 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_30 := and(sload(/** @src 28:948:970  \"address public myToken\" */ 2), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sub(shl(160, 1), 1))\n                        let memPos_23 := mload(_1)\n                        mstore(memPos_23, value_30)\n                        return(memPos_23, 32)\n                    }\n                    case 0xbbebdd25 {\n                        if callvalue() { revert(_3, _3) }\n                        let _111 := 32\n                        if slt(add(calldatasize(), not(3)), _111) { revert(_3, _3) }\n                        let value_31 := calldataload(_2)\n                        mstore(_3, /** @src 28:5611:5621  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_111, /** @src 28:5602:5610  \"balances\" */ 0x06)\n                        /// @src 28:5594:5657  \"require(balances[msg.sender] >= amount, \\\"Insufficient balance\\\")\"\n                        require_helper_stringliteral(/** @src 28:5602:5632  \"balances[msg.sender] >= amount\" */ iszero(lt(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(keccak256(_3, _1)), /** @src 28:5602:5632  \"balances[msg.sender] >= amount\" */ value_31)))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_3, /** @src 28:5611:5621  \"msg.sender\" */ caller())\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        mstore(_111, /** @src 28:5602:5610  \"balances\" */ 0x06)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _112 := sload(keccak256(_3, _1))\n                        mstore(_111, /** @src 28:5699:5715  \"usedVotingRights\" */ 0x0e)\n                        /// @src 28:5668:5762  \"require(balances[msg.sender] - usedVotingRights[msg.sender] >= amount, \\\"Insufficient balance\\\")\"\n                        require_helper_stringliteral(/** @src 28:5676:5737  \"balances[msg.sender] - usedVotingRights[msg.sender] >= amount\" */ iszero(lt(/** @src 28:5676:5727  \"balances[msg.sender] - usedVotingRights[msg.sender]\" */ checked_sub_uint256(_112, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(keccak256(_3, _1))), /** @src 28:5676:5737  \"balances[msg.sender] - usedVotingRights[msg.sender] >= amount\" */ value_31)))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let sum_1 := add(/** @src 28:5794:5809  \"block.timestamp\" */ timestamp(), /** @src 28:5812:5818  \"7 days\" */ 0x093a80)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if gt(/** @src 28:5794:5809  \"block.timestamp\" */ timestamp(), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sum_1)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, 0x24)\n                        }\n                        let _113 := sload(_2)\n                        sstore(_2, add(_113, 1))\n                        /// @src 28:6041:6055  \"bool isWagered\"\n                        let var_isWagered_1 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                        /// @src 28:6066:6233  \"if (amount > 0) {...\"\n                        switch /** @src 28:6070:6080  \"amount > 0\" */ iszero(iszero(value_31))\n                        case /** @src 28:6066:6233  \"if (amount > 0) {...\" */ 0 {\n                            /// @src 28:6204:6221  \"isWagered = false\"\n                            var_isWagered_1 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                        }\n                        default /// @src 28:6066:6233  \"if (amount > 0) {...\"\n                        {\n                            /// @src 28:6097:6113  \"isWagered = true\"\n                            var_isWagered_1 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 1\n                            mstore(_3, /** @src 28:5611:5621  \"msg.sender\" */ caller())\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            mstore(_111, /** @src 28:6128:6149  \"proposalTokenDeposits\" */ 0x0d)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let dataSlot_19 := keccak256(_3, _1)\n                            sstore(dataSlot_19, /** @src 28:6128:6171  \"proposalTokenDeposits[msg.sender] += amount\" */ checked_add_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:6128:6171  \"proposalTokenDeposits[msg.sender] += amount\" */ dataSlot_19), value_31))\n                        }\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let oldLen_1 := sload(/** @src 28:6245:6264  \"UserStakerAddresses\" */ 0x0f)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _114 := 18446744073709551616\n                        if iszero(lt(oldLen_1, _114))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 0x24)\n                        }\n                        let _115 := add(oldLen_1, 1)\n                        sstore(/** @src 28:6245:6264  \"UserStakerAddresses\" */ 0x0f, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _115)\n                        if iszero(lt(oldLen_1, _115))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x32)\n                            revert(_3, 0x24)\n                        }\n                        mstore(_3, /** @src 28:6245:6264  \"UserStakerAddresses\" */ 0x0f)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let slot_6 := add(63806209331542711802848847270949280092855778197726125910674179583545433573378, oldLen_1)\n                        sstore(slot_6, or(and(sload(slot_6), shl(160, 0xffffffffffffffffffffffff)), /** @src 28:5611:5621  \"msg.sender\" */ caller()))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let oldLen_2 := sload(/** @src 28:6292:6309  \"UserSstakeAmounts\" */ 0x10)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if iszero(lt(oldLen_2, _114))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 0x24)\n                        }\n                        sstore(/** @src 28:6292:6309  \"UserSstakeAmounts\" */ 0x10, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ add(oldLen_2, 1))\n                        let slot_7, offset_10 := storage_array_index_access_address_dyn_38400(oldLen_2)\n                        update_storage_value_uint256_to_uint256(slot_7, offset_10, value_31)\n                        /// @src 28:6338:6416  \"DepositForProposal(msg.sender, amount, isWagered, unlockTime, User_stakeIndex)\"\n                        let _116 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        /// @src 28:6338:6416  \"DepositForProposal(msg.sender, amount, isWagered, unlockTime, User_stakeIndex)\"\n                        log3(_116, sub(abi_encode_uint256_bool_uint256(_116, value_31, var_isWagered_1, sum_1), _116), 0x5cdc4619b6f85de86a2b0f98ff2be3aad917b79b78f3829a4b948c3fcbef3085, /** @src 28:5611:5621  \"msg.sender\" */ caller(), /** @src 28:6338:6416  \"DepositForProposal(msg.sender, amount, isWagered, unlockTime, User_stakeIndex)\" */ _113)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let memPos_24 := mload(_1)\n                        mstore(memPos_24, _113)\n                        return(memPos_24, _111)\n                    }\n                    case 0xbcfc4429 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let ret := fun_getAvailableWithdrawBalance(abi_decode_address())\n                        let memPos_25 := mload(_1)\n                        mstore(memPos_25, ret)\n                        return(memPos_25, 32)\n                    }\n                    case 0xcc4d6345 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value0_4 := abi_decode_address()\n                        let value_32 := calldataload(36)\n                        let value_33 := calldataload(68)\n                        if iszero(eq(value_33, iszero(iszero(value_33)))) { revert(_3, _3) }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if iszero(/** @src 28:15064:15101  \"stakeIndex < UserSstakeAmounts.length\" */ lt(value_32, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:15077:15094  \"UserSstakeAmounts\" */ 0x10)))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        {\n                            let memPtr_16 := mload(_1)\n                            mstore(memPtr_16, shl(229, 4594637))\n                            mstore(add(memPtr_16, _2), 32)\n                            mstore(add(memPtr_16, 36), 25)\n                            mstore(add(memPtr_16, 68), \"Stake index out of bounds\")\n                            revert(memPtr_16, 100)\n                        }\n                        /// @src 28:15168:15197  \"UserSstakeAmounts[stakeIndex]\"\n                        let _117, _118 := storage_array_index_access_address_dyn_38400(value_32)\n                        /// @src 28:15142:15197  \"uint256 amountToRelease = UserSstakeAmounts[stakeIndex]\"\n                        let var_amountToRelease := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ shr(shl(3, _118), sload(/** @src 28:15168:15197  \"UserSstakeAmounts[stakeIndex]\" */ _117))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _119 := and(value0_4, sub(shl(160, 1), 1))\n                        mstore(_3, _119)\n                        mstore(32, /** @src 28:15208:15229  \"proposalTokenDeposits\" */ 0x0d)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_20 := keccak256(_3, _1)\n                        sstore(dataSlot_20, /** @src 28:15208:15254  \"proposalTokenDeposits[user] -= amountToRelease\" */ checked_sub_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:15208:15254  \"proposalTokenDeposits[user] -= amountToRelease\" */ dataSlot_20), var_amountToRelease))\n                        /// @src 28:15325:15669  \"if (penalizeStake) {...\"\n                        if value_33\n                        {\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let product_6 := mul(var_amountToRelease, /** @src 28:15401:15403  \"10\" */ 0x0a)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            if iszero(or(iszero(var_amountToRelease), eq(/** @src 28:15401:15403  \"10\" */ 0x0a, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ div(product_6, var_amountToRelease))))\n                            {\n                                mstore(_3, shl(224, 0x4e487b71))\n                                mstore(_2, 0x11)\n                                revert(_3, 36)\n                            }\n                            let r := div(product_6, /** @src 28:15406:15409  \"100\" */ 0x64)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            if /** @src 28:15451:15483  \"amountToRelease >= penaltyAmount\" */ lt(var_amountToRelease, r)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            {\n                                let memPtr_17 := mload(_1)\n                                mstore(memPtr_17, shl(229, 4594637))\n                                mstore(add(memPtr_17, _2), 32)\n                                mstore(add(memPtr_17, 36), 29)\n                                mstore(add(memPtr_17, 68), \"Penalty exceeds staked amount\")\n                                revert(memPtr_17, /** @src 28:15406:15409  \"100\" */ 0x64)\n                            }\n                            /// @src 28:15532:15564  \"amountToRelease -= penaltyAmount\"\n                            var_amountToRelease := checked_sub_uint256(var_amountToRelease, r)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            mstore(_3, _119)\n                            mstore(32, /** @src 28:15595:15603  \"balances\" */ 0x06)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let dataSlot_21 := keccak256(_3, _1)\n                            sstore(dataSlot_21, /** @src 28:15595:15626  \"balances[user] -= penaltyAmount\" */ checked_sub_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:15595:15626  \"balances[user] -= penaltyAmount\" */ dataSlot_21), r))\n                        }\n                        /// @src 28:15722:15751  \"UserSstakeAmounts[stakeIndex]\"\n                        let _120, _121 := storage_array_index_access_address_dyn_38400(value_32)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _122 := sload(_120)\n                        sstore(_120, and(_122, not(shl(shl(3, _121), not(0)))))\n                        /// @src 28:15825:15888  \"StakeReleased(user, stakeIndex, penalizeStake, amountToRelease)\"\n                        let _123 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        /// @src 28:15825:15888  \"StakeReleased(user, stakeIndex, penalizeStake, amountToRelease)\"\n                        log2(_123, sub(abi_encode_uint256_bool_uint256(_123, value_32, value_33, var_amountToRelease), _123), 0xa793c384ec01dc23084e8f2804320118e562185632f38268728b0465b9f895ab, _119)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        return(_3, _3)\n                    }\n                    case 0xdd5c0da2 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 28:4498:4554  \"mapping(address => uint256) public proposalTokenDeposits\" */ 13)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _124 := sload(keccak256(_3, _1))\n                        let memPos_26 := mload(_1)\n                        mstore(memPos_26, _124)\n                        return(memPos_26, 32)\n                    }\n                    case 0xdf63ba91 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_34 := calldataload(_2)\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 28:20113:20180  \"require(_proposalId < proposals.length, \\\"Proposal does not exist.\\\")\"\n                        require_helper_stringliteral_ad61(/** @src 28:20121:20151  \"_proposalId < proposals.length\" */ lt(value_34, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:20135:20144  \"proposals\" */ 0x0a)))\n                        /// @src 28:20219:20241  \"proposals[_proposalId]\"\n                        let _125, _126 := storage_array_index_access_struct_Proposal__dyn(value_34)\n                        /// @src 28:20260:20275  \"proposal.active\"\n                        let _127 := add(_125, 3)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _128 := sload(/** @src 28:20260:20275  \"proposal.active\" */ _127)\n                        /// @src 28:20252:20305  \"require(proposal.active, \\\"Proposal is still active.\\\")\"\n                        require_helper_stringliteral_dd70(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(_128, 0xff))\n                        /// @src 28:20316:20369  \"require(!proposal.isSettled, \\\"Funds already settled\\\")\"\n                        require_helper_stringliteral_5ac8(/** @src 28:20324:20343  \"!proposal.isSettled\" */ iszero(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(shr(8, _128), 0xff)))\n                        /// @src 28:20399:20410  \"_proposalId\"\n                        fun_deactivateProposal(value_34)\n                        /// @src 28:20485:20505  \"proposal.stakeAmount\"\n                        let _129 := add(_125, 2)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _130 := sload(/** @src 28:20485:20505  \"proposal.stakeAmount\" */ _129)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _131 := sload(/** @src 28:20519:20537  \"proposal.isWagered\" */ _127)\n                        /// @src 28:20516:20851  \"if(proposal.isWagered) {...\"\n                        switch /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(shr(16, _131), 0xff)\n                        case /** @src 28:20516:20851  \"if(proposal.isWagered) {...\" */ 0 {\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            sstore(_127, or(and(_131, not(65280)), 256))\n                        }\n                        default /// @src 28:20516:20851  \"if(proposal.isWagered) {...\"\n                        {\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let value_35 := and(sload(/** @src 28:20642:20659  \"proposal.proposer\" */ _125), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sub(shl(160, 1), 1))\n                            mstore(_3, value_35)\n                            mstore(32, /** @src 28:20620:20641  \"proposalTokenDeposits\" */ 0x0d)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let _132 := sload(keccak256(_3, _1))\n                            /// @src 28:20718:20783  \"stakedAmount > currentDeposit ? 0 : currentDeposit - stakedAmount\"\n                            let expr_10 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                            /// @src 28:20718:20783  \"stakedAmount > currentDeposit ? 0 : currentDeposit - stakedAmount\"\n                            switch /** @src 28:20718:20747  \"stakedAmount > currentDeposit\" */ gt(_130, _132)\n                            case /** @src 28:20718:20783  \"stakedAmount > currentDeposit ? 0 : currentDeposit - stakedAmount\" */ 0 {\n                                expr_10 := /** @src 28:20754:20783  \"currentDeposit - stakedAmount\" */ checked_sub_uint256(_132, _130)\n                            }\n                            default /// @src 28:20718:20783  \"stakedAmount > currentDeposit ? 0 : currentDeposit - stakedAmount\"\n                            {\n                                expr_10 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                            }\n                            mstore(_3, value_35)\n                            mstore(32, /** @src 28:20620:20641  \"proposalTokenDeposits\" */ 0x0d)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            sstore(keccak256(_3, _1), expr_10)\n                        }\n                        let _133 := sload(/** @src 28:20883:20903  \"proposal.stakeAmount\" */ _129)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let product_7 := mul(_133, /** @src 28:20906:20907  \"5\" */ 0x05)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if iszero(or(iszero(_133), eq(/** @src 28:20906:20907  \"5\" */ 0x05, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ div(product_7, _133))))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, 0x24)\n                        }\n                        let r_1 := div(product_7, /** @src 28:20911:20914  \"100\" */ 0x64)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _134 := sub(shl(160, 1), 1)\n                        mstore(_3, and(sload(/** @src 28:20965:20982  \"proposal.proposer\" */ _125), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _134))\n                        mstore(32, /** @src 28:20956:20964  \"balances\" */ 0x06)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_22 := keccak256(_3, _1)\n                        sstore(dataSlot_22, /** @src 28:20956:20997  \"balances[proposal.proposer] -= punishment\" */ checked_sub_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:20956:20997  \"balances[proposal.proposer] -= punishment\" */ dataSlot_22), r_1))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let value_36 := and(sload(/** @src 28:21103:21120  \"proposal.proposer\" */ _125), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _134)\n                        /// @src 28:21059:21133  \"FundsPenalizedForNonCompliance(_proposalId, proposal.proposer, punishment)\"\n                        let _135 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                        mstore(_135, r_1)\n                        /// @src 28:21059:21133  \"FundsPenalizedForNonCompliance(_proposalId, proposal.proposer, punishment)\"\n                        log3(_135, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 32, /** @src 28:21059:21133  \"FundsPenalizedForNonCompliance(_proposalId, proposal.proposer, punishment)\" */ 0xddd89621ebb152aa5989781cb35db99e8f31caf44575bcc1ac2cd0eb5b5e8368, value_34, value_36)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        return(_3, _3)\n                    }\n                    case 0xe13b7b31 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_10, param_11 := abi_decode_uint256t_uint256(calldatasize())\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 8:2227:2330  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 28:16041:16062  \"proposals[proposalId]\"\n                        let _136, _137 := storage_array_index_access_struct_Proposal__dyn(param_10)\n                        /// @src 28:16082:16097  \"proposal.active\"\n                        let _138 := 3\n                        let _139 := add(/** @src 28:16013:16062  \"Proposal storage proposal = proposals[proposalId]\" */ _136, /** @src 28:16082:16097  \"proposal.active\" */ _138)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _140 := sload(/** @src 28:16082:16097  \"proposal.active\" */ _139)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if iszero(/** @src 28:16081:16097  \"!proposal.active\" */ iszero(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(_140, 0xff)))\n                        {\n                            let memPtr_18 := mload(_1)\n                            mstore(memPtr_18, shl(229, 4594637))\n                            mstore(add(memPtr_18, _2), 32)\n                            mstore(add(memPtr_18, 36), 44)\n                            mstore(add(memPtr_18, 68), \"Proposal must be inactive to set\")\n                            mstore(add(memPtr_18, 100), \"tle rewards.\")\n                            revert(memPtr_18, 132)\n                        }\n                        if iszero(/** @src 28:16165:16184  \"!proposal.isSettled\" */ iszero(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(shr(8, _140), 0xff)))\n                        {\n                            let memPtr_19 := mload(_1)\n                            mstore(memPtr_19, shl(229, 4594637))\n                            mstore(add(memPtr_19, _2), 32)\n                            mstore(add(memPtr_19, 36), 23)\n                            mstore(add(memPtr_19, 68), \"Rewards already settled\")\n                            revert(memPtr_19, 100)\n                        }\n                        mstore(_3, param_10)\n                        let _141 := 0x20\n                        mstore(_141, /** @src 28:16262:16277  \"proposalOptions\" */ 0x0b)\n                        /// @src 28:16262:16306  \"proposalOptions[proposalId][winningOptionId]\"\n                        let _142, _143 := storage_array_index_access_struct_Option__dyn(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ keccak256(_3, _1), /** @src 28:16262:16306  \"proposalOptions[proposalId][winningOptionId]\" */ param_11)\n                        /// @src 28:16262:16316  \"proposalOptions[proposalId][winningOptionId].voteCount\"\n                        let _144 := 1\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        if /** @src 28:16335:16365  \"totalVotesForWinningOption > 0\" */ iszero(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:16262:16316  \"proposalOptions[proposalId][winningOptionId].voteCount\" */ add(_142, _144)))\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        {\n                            let memPtr_20 := mload(_1)\n                            mstore(memPtr_20, shl(229, 4594637))\n                            mstore(add(memPtr_20, _2), _141)\n                            mstore(add(memPtr_20, 36), 27)\n                            mstore(add(memPtr_20, 68), \"No votes for winning option\")\n                            revert(memPtr_20, 100)\n                        }\n                        /// @src 28:16473:16486  \"uint256 i = 0\"\n                        let var_i_3 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3\n                        /// @src 28:16468:17401  \"for (uint256 i = 0; i < voterAddressesByProposal[proposalId].length; i++) {...\"\n                        for { }\n                        /** @src 28:16262:16316  \"proposalOptions[proposalId][winningOptionId].voteCount\" */ _144\n                        /// @src 28:16473:16486  \"uint256 i = 0\"\n                        {\n                            /// @src 28:16537:16540  \"i++\"\n                            var_i_3 := increment_uint256(var_i_3)\n                        }\n                        {\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            mstore(_3, param_10)\n                            mstore(_141, /** @src 28:16492:16516  \"voterAddressesByProposal\" */ 0x13)\n                            /// @src 28:16488:16535  \"i < voterAddressesByProposal[proposalId].length\"\n                            if iszero(lt(var_i_3, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(keccak256(_3, _1))))\n                            /// @src 28:16488:16535  \"i < voterAddressesByProposal[proposalId].length\"\n                            { break }\n                            /// @src 28:16573:16612  \"voterAddressesByProposal[proposalId][i]\"\n                            let _145, _146 := storage_array_index_access_address_dyn(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ keccak256(_3, _1), /** @src 28:16573:16612  \"voterAddressesByProposal[proposalId][i]\" */ var_i_3)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let value_37 := and(shr(shl(/** @src 28:16082:16097  \"proposal.active\" */ _138, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _146), sload(/** @src 28:16573:16612  \"voterAddressesByProposal[proposalId][i]\" */ _145)), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sub(shl(160, 1), 1))\n                            mstore(_3, param_10)\n                            mstore(_141, /** @src 28:16646:16665  \"optionIdsByProposal\" */ 0x14)\n                            /// @src 28:16646:16680  \"optionIdsByProposal[proposalId][i]\"\n                            let _147, _148 := storage_array_index_access_address_dyn(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ keccak256(_3, _1), /** @src 28:16646:16680  \"optionIdsByProposal[proposalId][i]\" */ var_i_3)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let value_38 := shr(shl(/** @src 28:16082:16097  \"proposal.active\" */ _138, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _148), sload(/** @src 28:16646:16680  \"optionIdsByProposal[proposalId][i]\" */ _147))\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            mstore(_3, param_10)\n                            mstore(_141, /** @src 28:16715:16735  \"voteCountsByProposal\" */ 0x15)\n                            /// @src 28:16715:16750  \"voteCountsByProposal[proposalId][i]\"\n                            let _149, _150 := storage_array_index_access_address_dyn(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ keccak256(_3, _1), /** @src 28:16715:16750  \"voteCountsByProposal[proposalId][i]\" */ var_i_3)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let value_39 := shr(shl(/** @src 28:16082:16097  \"proposal.active\" */ _138, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _150), sload(/** @src 28:16715:16750  \"voteCountsByProposal[proposalId][i]\" */ _149))\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            mstore(_3, value_37)\n                            /// @src 28:16773:16789  \"usedVotingRights\"\n                            let _151 := 0x0e\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            mstore(_141, /** @src 28:16773:16789  \"usedVotingRights\" */ _151)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            if /** @src 28:16773:16809  \"usedVotingRights[voter] >= voteCount\" */ lt(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(keccak256(_3, _1)), /** @src 28:16773:16809  \"usedVotingRights[voter] >= voteCount\" */ value_39)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            {\n                                let memPtr_21 := mload(_1)\n                                mstore(memPtr_21, shl(229, 4594637))\n                                mstore(add(memPtr_21, _2), _141)\n                                mstore(add(memPtr_21, 36), 31)\n                                mstore(add(memPtr_21, 68), \"Not enough locked voting rights\")\n                                revert(memPtr_21, 100)\n                            }\n                            mstore(_3, value_37)\n                            mstore(_141, /** @src 28:16773:16789  \"usedVotingRights\" */ _151)\n                            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                            let dataSlot_23 := keccak256(_3, _1)\n                            sstore(dataSlot_23, /** @src 28:16862:16898  \"usedVotingRights[voter] -= voteCount\" */ checked_sub_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:16862:16898  \"usedVotingRights[voter] -= voteCount\" */ dataSlot_23), value_39))\n                            /// @src 28:16916:17390  \"if (optionId == winningOptionId) {...\"\n                            switch /** @src 28:16920:16947  \"optionId == winningOptionId\" */ eq(value_38, param_11)\n                            case /** @src 28:16916:17390  \"if (optionId == winningOptionId) {...\" */ 0 {\n                                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                                mstore(_3, value_37)\n                                mstore(_141, /** @src 28:17254:17262  \"balances\" */ 0x06)\n                                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                                let dataSlot_24 := keccak256(_3, _1)\n                                sstore(dataSlot_24, /** @src 28:17254:17282  \"balances[voter] -= voteCount\" */ checked_sub_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:17254:17282  \"balances[voter] -= voteCount\" */ dataSlot_24), value_39))\n                                /// @src 28:17328:17374  \"RewardDistributed(voter, proposalId, 0, false)\"\n                                let _152 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                                mstore(_152, param_10)\n                                mstore(add(_152, _141), _3)\n                                mstore(add(_152, _1), _3)\n                                /// @src 28:17328:17374  \"RewardDistributed(voter, proposalId, 0, false)\"\n                                log2(_152, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 96, /** @src 28:17328:17374  \"RewardDistributed(voter, proposalId, 0, false)\" */ 0x149b6d96cac1333a3f37f0b420d3b2d92b3c941f8ddd2c6454a19d1800f558fa, value_37)\n                            }\n                            default /// @src 28:16916:17390  \"if (optionId == winningOptionId) {...\"\n                            {\n                                /// @src 28:17054:17056  \"98\"\n                                let _153 := 0x62\n                                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                                let product_8 := mul(value_39, /** @src 28:17054:17056  \"98\" */ _153)\n                                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                                if iszero(or(iszero(value_39), eq(/** @src 28:17054:17056  \"98\" */ _153, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ div(product_8, value_39))))\n                                {\n                                    mstore(_3, shl(224, 0x4e487b71))\n                                    mstore(_2, 0x11)\n                                    revert(_3, 0x24)\n                                }\n                                let r_2 := div(product_8, /** @src 28:17060:17063  \"100\" */ 0x64)\n                                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                                mstore(_3, value_37)\n                                mstore(_141, /** @src 28:17082:17090  \"balances\" */ 0x06)\n                                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                                let dataSlot_25 := keccak256(_3, _1)\n                                sstore(dataSlot_25, /** @src 28:17082:17112  \"balances[voter] += voterReward\" */ checked_add_uint256(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:17082:17112  \"balances[voter] += voterReward\" */ dataSlot_25), r_2))\n                                /// @src 28:17158:17213  \"RewardDistributed(voter, proposalId, voterReward, true)\"\n                                let _154 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(_1)\n                                mstore(_154, param_10)\n                                mstore(add(_154, _141), r_2)\n                                mstore(add(_154, _1), /** @src 28:16262:16316  \"proposalOptions[proposalId][winningOptionId].voteCount\" */ _144)\n                                /// @src 28:17158:17213  \"RewardDistributed(voter, proposalId, voterReward, true)\"\n                                log2(_154, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 96, /** @src 28:17158:17213  \"RewardDistributed(voter, proposalId, voterReward, true)\" */ 0x149b6d96cac1333a3f37f0b420d3b2d92b3c941f8ddd2c6454a19d1800f558fa, value_37)\n                            }\n                        }\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        sstore(_139, or(and(sload(_139), not(65280)), 256))\n                        sstore(_3, /** @src 28:16262:16316  \"proposalOptions[proposalId][winningOptionId].voteCount\" */ _144)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        return(_3, _3)\n                    }\n                    case 0xe2b239c8 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_12, param_13 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(_3, param_12)\n                        mstore(0x20, /** @src 28:4956:5012  \"mapping(uint256 => uint256[]) public optionIdsByProposal\" */ 20)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_26 := keccak256(_3, _1)\n                        /// @src 28:4956:5012  \"mapping(uint256 => uint256[]) public optionIdsByProposal\"\n                        if iszero(lt(param_13, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:4956:5012  \"mapping(uint256 => uint256[]) public optionIdsByProposal\" */ dataSlot_26)))\n                        {\n                            revert(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3, _3)\n                        }\n                        /// @src 28:4956:5012  \"mapping(uint256 => uint256[]) public optionIdsByProposal\"\n                        let slot_8, offset_11 := storage_array_index_access_address_dyn(dataSlot_26, param_13)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _155 := sload(/** @src 28:4956:5012  \"mapping(uint256 => uint256[]) public optionIdsByProposal\" */ slot_8)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let memPos_27 := mload(_1)\n                        mstore(memPos_27, shr(shl(3, offset_11), _155))\n                        return(memPos_27, 0x20)\n                    }\n                    case 0xed4516c9 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_40 := calldataload(_2)\n                        /// @src 28:4689:4723  \"uint256[] public UserSstakeAmounts\"\n                        if iszero(lt(value_40, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:4689:4723  \"uint256[] public UserSstakeAmounts\" */ 16)))\n                        {\n                            revert(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3, _3)\n                        }\n                        mstore(_3, /** @src 28:4689:4723  \"uint256[] public UserSstakeAmounts\" */ 16)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _156 := sload(add(12396694973890998440467380340983585058878106250672390494374587083972727727730, value_40))\n                        let memPos_28 := mload(_1)\n                        mstore(memPos_28, _156)\n                        return(memPos_28, 32)\n                    }\n                    case 0xeda0b804 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_14, param_15 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(_3, param_14)\n                        mstore(0x20, /** @src 28:4888:4949  \"mapping(uint256 => address[]) public voterAddressesByProposal\" */ 19)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_27 := keccak256(_3, _1)\n                        /// @src 28:4888:4949  \"mapping(uint256 => address[]) public voterAddressesByProposal\"\n                        if iszero(lt(param_15, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:4888:4949  \"mapping(uint256 => address[]) public voterAddressesByProposal\" */ dataSlot_27)))\n                        {\n                            revert(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3, _3)\n                        }\n                        /// @src 28:4888:4949  \"mapping(uint256 => address[]) public voterAddressesByProposal\"\n                        let slot_9, offset_12 := storage_array_index_access_address_dyn(dataSlot_27, param_15)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _157 := sload(/** @src 28:4888:4949  \"mapping(uint256 => address[]) public voterAddressesByProposal\" */ slot_9)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let memPos_29 := mload(_1)\n                        mstore(memPos_29, and(shr(shl(3, offset_12), _157), sub(shl(160, 1), 1)))\n                        return(memPos_29, 0x20)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value0_5 := abi_decode_address()\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let _158 := sub(shl(160, 1), 1)\n                        let _159 := and(/** @src 0:2162:2184  \"newOwner != address(0)\" */ value0_5, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _158)\n                        if /** @src 0:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _159)\n                        {\n                            let memPtr_22 := mload(_1)\n                            mstore(memPtr_22, shl(229, 4594637))\n                            mstore(add(memPtr_22, _2), 32)\n                            mstore(add(memPtr_22, 36), 38)\n                            mstore(add(memPtr_22, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_22, 100), \"ddress\")\n                            revert(memPtr_22, 132)\n                        }\n                        let _160 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x01)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        sstore(/** @src 0:2518:2524  \"_owner\" */ 0x01, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ or(and(_160, not(sub(shl(168, 1), 256))), and(shl(8, value0_5), sub(shl(168, 1), 256))))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _3, _3, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(shr(8, _160), _158), /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ _159)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        return(_3, _3)\n                    }\n                    case 0xf496baa0 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        mstore(_3, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 28:5083:5158  \"mapping(address => mapping(uint256 => uint256)) public voterIndexInProposal\" */ 22)\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        let dataSlot_28 := keccak256(_3, _1)\n                        mstore(_3, calldataload(36))\n                        mstore(32, dataSlot_28)\n                        let _161 := sload(keccak256(_3, _1))\n                        let memPos_30 := mload(_1)\n                        mstore(memPos_30, _161)\n                        return(memPos_30, 32)\n                    }\n                    case 0xfe10226d {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let ret_1 := fun_getCurrentProposalId()\n                        let memPos_31 := mload(_1)\n                        mstore(memPos_31, ret_1)\n                        return(memPos_31, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function storage_array_index_access_struct_Proposal__dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 28:10698:10707  \"proposals\" */ 0x0a)))\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 28:10698:10707  \"proposals\" */ 0x0a)\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                slot := add(89717814153306320011181716697424560163256864414616650038987186496166826726056, mul(index, 5))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation_38382(memPtr)\n            {\n                let newFreePtr := add(memPtr, 224)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_38384(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, _2)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _1)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_encode_array_uint256_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, _1)\n                let srcPtr := add(value, _1)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            function storage_array_index_access_struct_VoteRecord__dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0x20)\n                slot := add(data, mul(index, 3))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                if gt(_1, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                array := memPtr\n            }\n            function array_allocation_size_array_string_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_decode_array_string_dyn(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := 0x20\n                let _3 := array_allocation_size_array_string_dyn(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                let dst := memPtr\n                mstore(memPtr, _1)\n                dst := add(memPtr, _2)\n                let srcEnd := add(add(offset, shl(5, _1)), _2)\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                let src := add(offset, _2)\n                for { } lt(src, srcEnd) { src := add(src, _2) }\n                {\n                    let innerOffset := calldataload(src)\n                    if gt(innerOffset, 0xffffffffffffffff)\n                    {\n                        /// @src -1:-1:-1\n                        let _4 := 0\n                        /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                        revert(/** @src -1:-1:-1 */ _4, _4)\n                    }\n                    /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                    mstore(dst, abi_decode_string(add(add(offset, innerOffset), _2), end))\n                    dst := add(dst, _2)\n                }\n                array := memPtr\n            }\n            function abi_decode_uint256t_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n            }\n            function storage_array_index_access_address_dyn_38400(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 28:8201:8218  \"UserSstakeAmounts\" */ 0x10)))\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 28:8201:8218  \"UserSstakeAmounts\" */ 0x10)\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                slot := add(12396694973890998440467380340983585058878106250672390494374587083972727727730, index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n            function storage_array_index_access_address_dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n            function storage_array_index_access_struct_Option__dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0x20)\n                slot := add(data, shl(1, index))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @ast-id 54 @src 0:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                let value := and(shr(8, sload(/** @src 0:1273:1279  \"_owner\" */ 0x01)), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 0:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ value, /** @src 17:734:744  \"msg.sender\" */ caller()))\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                value0 := value\n            }\n            function require_helper_stringliteral_25ad(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 15)\n                    mstore(add(memPtr, 68), \"Transfer failed\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 20)\n                    mstore(add(memPtr, 68), \"Insufficient balance\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function array_push_from_address_to_array_address_dyn_storage_ptr(array, value0)\n            {\n                let oldLen := sload(array)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                sstore(array, add(oldLen, 1))\n                let slot, offset := storage_array_index_access_address_dyn(array, oldLen)\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := sload(slot)\n                let shiftBits := shl(3, offset)\n                let mask := shl(shiftBits, _1)\n                sstore(slot, or(and(_2, not(mask)), and(shl(shiftBits, and(value0, _1)), mask)))\n            }\n            function update_storage_value_uint256_to_uint256(slot, offset, value)\n            {\n                let _1 := sload(slot)\n                let shiftBits := shl(3, offset)\n                let mask := shl(shiftBits, not(0))\n                sstore(slot, or(and(_1, not(mask)), and(shl(shiftBits, value), mask)))\n            }\n            function array_push_from_uint256_to_array_uint256_dyn_storage_ptr(array, value0)\n            {\n                let oldLen := sload(array)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                sstore(array, add(oldLen, 1))\n                let slot, offset := storage_array_index_access_address_dyn(array, oldLen)\n                update_storage_value_uint256_to_uint256(slot, offset, value0)\n            }\n            function abi_encode_uint256_bool_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), iszero(iszero(value1)))\n                mstore(add(headStart, 64), value2)\n            }\n            function array_push_from_struct_Proposal_to_array_struct_Proposal_storage_dyn_ptr(value0)\n            {\n                let oldLen := sload(/** @src 28:7067:7076  \"proposals\" */ 0x0a)\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _1 := 1\n                sstore(/** @src 28:7067:7076  \"proposals\" */ 0x0a, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ add(oldLen, _1))\n                let slot, offset := storage_array_index_access_struct_Proposal__dyn(oldLen)\n                if offset\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0)\n                    revert(0, 0x24)\n                }\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(mload(value0), sub(shl(160, 1), 1))))\n                let memberSlot := add(slot, _1)\n                let _2 := 32\n                let _3 := mload(add(value0, _2))\n                let newLen := mload(_3)\n                if gt(newLen, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0x24)\n                }\n                let _4 := extract_byte_array_length(sload(memberSlot))\n                if gt(_4, 31)\n                {\n                    /// @src -1:-1:-1\n                    let _5 := 0\n                    /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                    mstore(/** @src -1:-1:-1 */ _5, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ memberSlot)\n                    let data := keccak256(/** @src -1:-1:-1 */ _5, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _2)\n                    let deleteStart := add(data, shr(5, add(newLen, 31)))\n                    if lt(newLen, _2) { deleteStart := data }\n                    let _6 := add(data, shr(5, add(_4, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _6) { start := add(start, _1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _5)\n                    }\n                }\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                let srcOffset := /** @src -1:-1:-1 */ 0\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                srcOffset := _2\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ memberSlot)\n                    let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ _2)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                    for { } lt(i, loopEnd) { i := add(i, _2) }\n                    {\n                        sstore(dstPtr, mload(add(_3, srcOffset)))\n                        dstPtr := add(dstPtr, _1)\n                        srcOffset := add(srcOffset, _2)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(_3, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(memberSlot, add(shl(_1, newLen), _1))\n                }\n                default {\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                    if newLen\n                    {\n                        value := mload(add(_3, srcOffset))\n                    }\n                    sstore(memberSlot, or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_1, newLen)))\n                }\n                sstore(add(slot, 2), mload(add(value0, 64)))\n                let memberSlot_1 := add(slot, 3)\n                let _7 := iszero(iszero(mload(add(value0, 96))))\n                let _8 := sload(memberSlot_1)\n                let _9 := and(shl(8, iszero(iszero(mload(add(value0, 128))))), 65280)\n                sstore(memberSlot_1, or(or(_9, or(and(_8, not(16777215)), and(_7, 255))), and(shl(16, iszero(iszero(mload(add(value0, 160))))), 16711680)))\n                sstore(add(slot, 4), mload(add(value0, 192)))\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function memory_array_index_access_string_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function array_push_from_struct_Option_to_array_struct_Option_storage_dyn_ptr(array, value0)\n            {\n                let oldLen := sload(array)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _1 := 1\n                sstore(array, add(oldLen, _1))\n                let slot, offset := storage_array_index_access_struct_Option__dyn(array, oldLen)\n                if offset\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0)\n                    revert(0, 0x24)\n                }\n                let _2 := mload(value0)\n                let newLen := mload(_2)\n                if gt(newLen, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _3 := extract_byte_array_length(sload(slot))\n                if gt(_3, 31)\n                {\n                    /// @src -1:-1:-1\n                    let _4 := 0\n                    /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                    mstore(/** @src -1:-1:-1 */ _4, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ slot)\n                    let data := keccak256(/** @src -1:-1:-1 */ _4, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0x20)\n                    let deleteStart := add(data, shr(5, add(newLen, 31)))\n                    if lt(newLen, 0x20) { deleteStart := data }\n                    let _5 := add(data, shr(5, add(_3, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _5) { start := add(start, _1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _4)\n                    }\n                }\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                let srcOffset := 0\n                srcOffset := 0x20\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    mstore(0, slot)\n                    let dstPtr := keccak256(0, srcOffset)\n                    let i := 0\n                    for { } lt(i, loopEnd) { i := add(i, 0x20) }\n                    {\n                        sstore(dstPtr, mload(add(_2, srcOffset)))\n                        dstPtr := add(dstPtr, _1)\n                        srcOffset := add(srcOffset, 0x20)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(_2, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(slot, add(shl(_1, newLen), _1))\n                }\n                default {\n                    let value := 0\n                    if newLen\n                    {\n                        value := mload(add(_2, srcOffset))\n                    }\n                    sstore(slot, or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_1, newLen)))\n                }\n                sstore(add(slot, _1), mload(add(value0, 0x20)))\n            }\n            function abi_encode_array_string_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                let updated_pos := add(pos, _1)\n                let pos_1 := updated_pos\n                pos := updated_pos\n                let tail := add(pos_1, shl(5, length))\n                let srcPtr := add(value, _1)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, sub(tail, pos_1))\n                    tail := abi_encode_string(mload(srcPtr), tail)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                end := tail\n            }\n            /// @ast-id 450 @src 8:2336:2623  \"function _nonReentrantBefore() private {...\"\n            function fun_nonReentrantBefore()\n            {\n                /// @src 8:1759:1760  \"2\"\n                if /** @src 8:2468:2487  \"_status != _ENTERED\" */ eq(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 8:2468:2475  \"_status\" */ 0x00), /** @src 8:1759:1760  \"2\" */ 0x02)\n                {\n                    let memPtr := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(64)\n                    /// @src 8:1759:1760  \"2\"\n                    mstore(memPtr, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ shl(229, 4594637))\n                    /// @src 8:1759:1760  \"2\"\n                    mstore(add(memPtr, 4), 32)\n                    /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                    mstore(/** @src 8:1759:1760  \"2\" */ add(memPtr, 36), 31)\n                    mstore(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ add(/** @src 8:1759:1760  \"2\" */ memPtr, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 68), /** @src 8:1759:1760  \"2\" */ \"ReentrancyGuard: reentrant call\")\n                    revert(memPtr, 100)\n                }\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                sstore(/** @src 8:2468:2475  \"_status\" */ 0x00, /** @src 8:1759:1760  \"2\" */ 0x02)\n            }\n            /// @ast-id 7203 @src 28:10101:10568  \"function getAvailableWithdrawBalance(address user) public view returns (uint256) {...\"\n            function fun_getAvailableWithdrawBalance(var_user) -> var\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(var_user, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 28:10216:10224  \"balances\" */ 0x06)\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                let _2 := sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0x40))\n                mstore(0x20, /** @src 28:10267:10283  \"usedVotingRights\" */ 0x0e)\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                let _3 := sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0x40))\n                mstore(0x20, /** @src 28:10328:10349  \"proposalTokenDeposits\" */ 0x0d)\n                /// @src 28:10448:10483  \"lockedForVoting + lockedInProposals\"\n                let expr := checked_add_uint256(_3, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0x40)))\n                /// @src 28:10501:10560  \"totalBalance > totalLocked ? totalBalance - totalLocked : 0\"\n                let expr_1 := /** @src -1:-1:-1 */ _1\n                /// @src 28:10501:10560  \"totalBalance > totalLocked ? totalBalance - totalLocked : 0\"\n                switch /** @src 28:10501:10527  \"totalBalance > totalLocked\" */ gt(_2, expr)\n                case /** @src 28:10501:10560  \"totalBalance > totalLocked ? totalBalance - totalLocked : 0\" */ 0 {\n                    expr_1 := /** @src -1:-1:-1 */ _1\n                }\n                default /// @src 28:10501:10560  \"totalBalance > totalLocked ? totalBalance - totalLocked : 0\"\n                {\n                    expr_1 := /** @src 28:10530:10556  \"totalBalance - totalLocked\" */ checked_sub_uint256(_2, expr)\n                }\n                /// @src 28:10494:10560  \"return totalBalance > totalLocked ? totalBalance - totalLocked : 0\"\n                var := expr_1\n            }\n            /// @ast-id 361 @src 7:1767:1873  \"function _requireNotPaused() internal view virtual {...\"\n            function fun_requireNotPaused()\n            {\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                if iszero(/** @src 7:1836:1845  \"!paused()\" */ iszero(/** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(sload(/** @src 7:1685:1692  \"_paused\" */ 0x01), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0xff)))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"Pausable: paused\")\n                    revert(memPtr, 100)\n                }\n            }\n            function allocate_and_zero_memory_array_array_uint256_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_string_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_string_dyn(length), not(31)))\n            }\n            function require_helper_stringliteral_ad61(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"Proposal does not exist.\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 7644 @src 28:14335:14898  \"function getCurrentProposalId() public view returns (uint256) {...\"\n            function fun_getCurrentProposalId() -> var\n            {\n                /// @src 28:14438:14454  \"proposals.length\"\n                let expr := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:14438:14447  \"proposals\" */ 0x0a)\n                /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                let _1 := sload(/** @src 28:14495:14507  \"_proposalIds\" */ 0x03)\n                /// @src 28:14530:14891  \"if (proposalArrayLength == currentCounterValue) {...\"\n                switch /** @src 28:14534:14576  \"proposalArrayLength == currentCounterValue\" */ eq(expr, _1)\n                case /** @src 28:14530:14891  \"if (proposalArrayLength == currentCounterValue) {...\" */ 0 {\n                    /// @src 28:14818:14836  \"return MAX_UINT256\"\n                    var := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ not(0)\n                    /// @src 28:14818:14836  \"return MAX_UINT256\"\n                    leave\n                }\n                default /// @src 28:14530:14891  \"if (proposalArrayLength == currentCounterValue) {...\"\n                {\n                    /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                    let diff := add(_1, not(0))\n                    if gt(diff, _1)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0x24)\n                    }\n                    /// @src 28:14678:14708  \"return currentCounterValue - 1\"\n                    var := diff\n                    leave\n                }\n            }\n            /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n            function require_helper_stringliteral_dd70(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 25)\n                    mstore(add(memPtr, 68), \"Proposal is still active.\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_5ac8(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 21)\n                    mstore(add(memPtr, 68), \"Funds already settled\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 8248 @src 28:21149:21454  \"function deactivateProposal(uint256 _proposalId) public {...\"\n            function fun_deactivateProposal(var_proposalId)\n            {\n                /// @src 28:21244:21266  \"proposals[_proposalId]\"\n                let _1, _2 := storage_array_index_access_struct_Proposal__dyn(var_proposalId)\n                /// @src 28:21281:21334  \"block.timestamp > proposal.endTime || proposal.active\"\n                let expr := /** @src 28:21281:21315  \"block.timestamp > proposal.endTime\" */ gt(/** @src 28:21281:21296  \"block.timestamp\" */ timestamp(), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ sload(/** @src 28:21299:21315  \"proposal.endTime\" */ add(_1, 4)))\n                /// @src 28:21281:21334  \"block.timestamp > proposal.endTime || proposal.active\"\n                if iszero(expr)\n                {\n                    expr := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ and(sload(/** @src 28:21319:21334  \"proposal.active\" */ add(_1, 3)), /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 0xff)\n                }\n                /// @src 28:21277:21447  \"if (block.timestamp > proposal.endTime || proposal.active) {...\"\n                if expr\n                {\n                    /// @src 28:21351:21366  \"proposal.active\"\n                    let _3 := add(_1, 3)\n                    /// @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\"\n                    sstore(_3, and(sload(_3), not(255)))\n                    /// @src 28:21394:21435  \"ProposalStatusChanged(_proposalId, false)\"\n                    let _4 := /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ mload(64)\n                    mstore(_4, var_proposalId)\n                    mstore(add(_4, 32), /** @src -1:-1:-1 */ 0)\n                    /// @src 28:21394:21435  \"ProposalStatusChanged(_proposalId, false)\"\n                    log1(_4, /** @src 28:823:21457  \"contract VotingContract is ReentrancyGuard,  Pausable,Ownable{...\" */ 64, /** @src 28:21394:21435  \"ProposalStatusChanged(_proposalId, false)\" */ 0x68e3ce211a37937184ed2d0165534a314cff3c8b8bd7dcdd845523b07698450f)\n                }\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122081b25133a1f2bc837633225aaad656b497d4531e74a7658895f784565e89ee4964736f6c63430008110033\"\n    }\n}\n","hash":"0100060153dd25dbc5f509d0a8a0214f1488917963bfbe53355979ef78052426","factoryDependencies":{}}}}}}